<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫évscode-sshËøúÁ®ãËøûÊé•‰∏ãopenssh‰∏égitËá™Â∏¶ÁöÑsshÁöÑÂÜ≤Á™ÅËß£ÂÜ≥ÊñπÊ≥ï]]></title>
    <url>%2F%E5%85%B3%E4%BA%8Evscode-ssh%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E4%B8%8Bopenssh%E4%B8%8Egit%E8%87%AA%E5%B8%A6%E7%9A%84ssh%E7%9A%84%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÊä•Èîô ËøáÁ®ãËØïÂõæÂÜôÂÖ•ÁöÑÁÆ°ÈÅì‰∏çÂ≠òÂú® ÂéüÂõ†Êú¨Êú∫ÂêåÊó∂Ë£ÖÊúâopensshÂíågitÔºåËøôÊ†∑Â∞±‰ºöÂÜ≤Á™Å‰∫Ü Ëß£ÂÜ≥ÊñπÊ≥ïÂ∞ÜopensshÂç∏ËΩΩ‰∫ÜÔºåÂêåÊó∂ÊåáÂÆövscodeÁöÑÈªòËÆ§sshÂëΩ‰ª§Ë∑ØÂæÑÔºåÂ∞Ü‰∏ãÂàóÈÖçÁΩÆÊ∑ªÂä†Âà∞vscodeÁöÑÁî®Êà∑ÈÖçÁΩÆÁöÑsetting.json‰∏≠ (ÂèØ‰ª•ÊâìÂºÄÂëΩ‰ª§Ë°åÔºåwhere sshÔºåÂæàÂ•áÊÄ™ÔºöcmdÂè™ÊúâÊòæÁ§∫opensshÔºågitÂëΩ‰ª§Ë°å‰∏ãÊòæÁ§∫gitËá™Â∏¶ÁöÑÂíåopenssh) 12"remote.SSH.path": "E:\\git\\Git\\usr\\bin\\ssh.exe","remote.SSH.showLoginTerminal": true, //ÈÖçÁΩÆÁôªÂΩïÁöÑÁªàÁ´Ø ÊµãËØïÂá∫Áé∞ÁöÑÈóÆÈ¢òssh: permission denied (publickey) ÂéüÂõ†ËøúÁ®ãLinuxÁöÑopenssh-serverÁöÑÈÖçÁΩÆÊñá‰ª∂ÈóÆÈ¢òÔºåÊàë‰ª¨ÂèØ‰ª•‰øÆÊîπ/etc/ssh/sshd_configÁöÑÈÖçÁΩÆÊñá‰ª∂ÔºåÈÖçÁΩÆÂØÜÁ†ÅÁôªÂΩïÔºõÁõ∏ÂÖ≥ÈÖçÁΩÆ‰øÆÊîπÂ¶Ç‰∏ãÔºö 1234PasswordAuthentication yesPermitRootLogin yesPubkeyAuthentication no#AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2 ÊµãËØïÊàêÂäüÂï¶üò±üò±üò±]]></content>
      <categories>
        <category>Linux</category>
        <category>Â∏∏ËßÅÈóÆÈ¢ò</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode-ÊóãËΩ¨Êï∞ÁªÑ]]></title>
    <url>%2Fleetcode-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆhttps://leetcode-cn.com/problems/rotate-matrix-lcci/ ÊÄùË∑Ø ÊâæËßÑÂæãÔºåÂ∞Ü‰∫åÁª¥Êï∞ÁªÑÁöÑÊØè‰∏™‰∏ãÊ†áÈÉΩÂàóÂá∫Âá∫Êù•ÔºåÁÑ∂ÂêéÂèØ‰ª•ÂèëÁé∞Êñ∞Êï∞ÁªÑÁöÑ‰∏ãÊ†áÊòØÊóßÊï∞ÁªÑÁöÑÔºàx,yÔºâ==„ÄãÔºàn-y-1,xÔºâ; ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÊàë‰ª¨ÈÅçÂéÜÊó∂ÊòØ‰ªé0ÂºÄÂßãÔºåÊâÄ‰ª•ÊâçÂáèÂéª1ÔºåÂ¶ÇÊûú‰ªé1ÂºÄÂßãÔºåÈÇ£‰πàË¶Å+1.ÊâæËßÑÂæãÂç≥ÂèØ„ÄÇ Âè¶‰∏ÄÈöæÁÇπÔºåÂéüÂú∞ÊóãËΩ¨Ôºå‰∏çÂÄüÂä©ËæÖÂä©Á©∫Èó¥ÔºåËøòÊòØÊâæËßÑÂæãÁöÑ‚Ä¶.ÔºàÊâæ‰∫Ü‰∏Ä‰∏™Â∞èÊó∂Ôºâ Ôºà3,1Ôºâ==„ÄãÔºà1,1Ôºâ Ôºà3,3Ôºâ==„ÄãÔºà3,1Ôºâ Ôºà1,3Ôºâ==„ÄãÔºà3,3Ôºâ Ôºà1,1Ôºâ==„ÄãÔºà1,3Ôºâ ÂèØ‰ª•ÂèëÁé∞ÔºåÂõûÂà∞ÂéüÁÇπ‰∫Ü ÈÇ£‰πàÂ≠òÂú®Âè¶Â§ñ‰∏Ä‰∏™ÈöæÁÇπÔºåÂ¶Ç‰ΩïÁ°ÆÂÆöÂì™‰∫õÊï∞Â∫îËØ•ËøõË°å‰∏äËø∞ÁöÑÂèòÊç¢ÔºåÊàë‰ª¨ÂèØ‰ª•ÂèëÁé∞Ôºà1,1ÔºâÂíåÔºà1,3ÔºâÊòØÂØπÁß∞ÁöÑÔºåÈÇ£‰πàÊàë‰ª¨ÂèòÊç¢‰∫ÜÔºà1,1ÔºâÔºåÔºàÔºà1,3Ôºâ‰πüÂ∞±ÊòØËá™ÁÑ∂Âú∞‰πüË∑üÁùÄÂèòÊç¢ÔºâÔºåÂõ†Ê≠§Êàë‰ª¨Âè™ÈúÄË¶ÅÂèòÊç¢Áü©Èòµ‰∏≠ÁöÑÂØπÁß∞ÈÉ®ÂàÜÂç≥ÂèØÔºåËøôÊ†∑Â∞±‰øùËØÅ‰∏ç‰ºöÈáçÂ§ç„ÄÇÈúÄË¶ÅÊ≥®ÊÑèn=Â•áÊï∞Êó∂ÔºåÂØπÂ∫îÂèòÊç¢ÁöÑÁü©ÈòµÁöÑÁ°ÆÂÆö„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: void rotate(vector&lt;vector&lt;int&gt;&gt; &amp;matrix) &#123; int n = matrix.size(); for (int i = 0;i &lt; n/2;i++) &#123; //ÈúÄË¶ÅÊ≥®ÊÑèÊòØ‰ªé0ÂºÄÂßãÔºåÂ¶ÇÊûúÊòØ‰ªé1ÂºÄÂßãÁöÑËØùÔºåÈÇ£‰πàÊòØn+1ÔºåËÄå‰∏çÊòØn-1; for (int j = 0;j &lt; (n+1)/2;j++) //ËøôÈáåÁöÑn+1Â∞±ÊòØÂ•áÊï∞ÁöÑÊó∂ÂÄô‰∏≠Èó¥ÁöÑÊï∞ &#123; int temp = matrix[i][j]; matrix[i][j] = matrix[n-1-j][i]; matrix[n-1-j][i] = matrix[n-1-i][n-1-j]; matrix[n-1-i][n-1-j] = matrix[j][n-1-i]; matrix[j][n-1-i] = temp; &#125; &#125; &#125;&#125;;int main()&#123; vector&lt;vector&lt;int&gt;&gt; res = &#123;&#123;1,2,3&#125;,&#123;4,5,6&#125;,&#123;7,8,9&#125;&#125;; Solution so; so.rotate(res); for (int i = 0;i &lt; res.size();i++) &#123; for(int j = 0;j &lt; res.size();j++) cout &lt;&lt; res[i][j] &lt;&lt; " "; cout &lt;&lt; endl; &#125; cout &lt;&lt;endl; return 0;&#125; ÊÉ≥‰∏çÂà∞ÁöÑ ÂÖà‰∏ä‰∏ãÂèòÊç¢ÔºåÁÑ∂ÂêéÂØπËßíÁ∫øÂèòÊç¢„ÄÇ]]></content>
      <categories>
        <category>OJ</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode-Âà†Èô§ÊúÄÂ§ñÂ±ÇÁöÑÊã¨Âè∑]]></title>
    <url>%2Fleetcode-%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%E6%8B%AC%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆhttps://leetcode-cn.com/problems/remove-outermost-parentheses/ ÊÄùË∑Ø ‰ΩøÁî®Ê†àÔºåÈÅçÂéÜÂ≠óÁ¨¶‰∏≤ÔºåÈÅáÂà∞Â∑¶Êã¨Âè∑Â∞±ÂéãÂÖ•ÔºåÈÅáÂà∞Âè≥Êã¨Âè∑Â∞±ÂºπÂá∫ÔºåÂΩìÊ†à‰∏∫Á©∫Êó∂ÔºåËØ¥ÊòéÂΩìÂâçindexÊòØÂ§ñÂ±ÇË¶ÅËàçÂéªÁöÑÊã¨Âè∑ÔºåÊ†πÊçÆ‰∏ãÊ†á‰πãÈó¥ÁöÑÂÖ≥Á≥ªÂç≥ÂèØÊâæÂà∞‚ÄúÂéüËØ≠‚Äù Âè¶Â§ñ‰∏ÄÁßçÊÄùË∑ØÔºö‰ΩøÁî®‰∏§‰∏™ÂèòÈáèleftÂíårightÔºåÂàùÂßãÂåñleft = 1Ôºåright = 0ÔºõËøôÊ†∑ÂèØ‰ª•ÂøΩÁï•Â§ñÂ±ÇÁöÑÂ∑¶Êã¨Âè∑ÔºåÊñπ‰æøÂêéÈù¢Âà§Êñ≠left != rightÊó∂ÂèØ‰ª•ËøΩÂä†Âà∞resÔºåËÄå‰∏ç‰ºöÂèóÂà∞Â§ñÂ±ÇÂ∑¶Êã¨Âè∑ÁöÑÂΩ±Âìç„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;class Solution &#123;public: string removeOuterParentheses(string S) &#123; string res = ""; int left = 1; int right = 0; for(int i = 1;i &lt; S.size();i++) &#123; if(S[i]=='(') left++; else right++; //Âà§Êñ≠ if (left != right) res.push_back(S[i]); else &#123; //Áõ∏Á≠âÔºåËØ¥ÊòéÂ∑¶Âè≥Êã¨Âè∑ÈÖçÂØπÔºåÊâÄ‰ª•Â§ñÂ±ÇÊã¨Âè∑‰∏çËÉΩÂéãÂÖ• right = 0; left = 1; i++; //ÂøΩÁï•Â§ñÂ±ÇÁöÑÂ∑¶Êã¨Âè∑ &#125; &#125; return res; &#125;&#125;;int main()&#123; string s = "(()())"; Solution so; cout &lt;&lt; so.removeOuterParentheses(s) &lt;&lt;endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode-Â≠óÁ¨¶‰∏≤ËΩ¨Êç¢‰∏∫Êï¥Êï∞]]></title>
    <url>%2Fleetcode-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆhttps://leetcode-cn.com/problems/string-to-integer-atoi/ ÊÄùË∑Ø È¶ñÂÖàÂéªÊéâÂâçÁΩÆÂ§ö‰ΩôÁ©∫Ê†º Âà§Êñ≠Ê≠£Ë¥üÊÉÖÂÜµÔºåÈúÄË¶ÅÊ≥®ÊÑèÂá∫Áé∞‰∏§‰∏™Ê≠£Ë¥üÂè∑ÁöÑÂ≠óÁ¨¶ÈÉΩreturn 0Ôºå‰æãÂ¶Ç‚Äú+-2‚ÄùÔºõ Êé•‰∏ãÊù•Âú®Ââ©‰ΩôÁöÑÂ≠óÁ¨¶‰∏≤‰∏≠ÊèêÂèñÂá∫Êï∞Â≠óÂç≥ÂèØÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂà§Êñ≠Ëøô‰∏™Â≠óÁ¨¶ÊòØ‰∏çÊòØ0~9ÔºåÁî®isdigit()ÂáΩÊï∞Âà§Êñ≠Âç≥ÂèØ ÊèêÂèñÊï∞Â≠óÈúÄË¶ÅÂà§Êñ≠Ê∫¢Âá∫ÊÉÖÂÜµÔºåÊàë‰ª¨ÈÄöËøáÂà§Êñ≠ÂΩìÂâçres*10Âä†‰∏ä‰∏ã‰∏Ä‰∏™Êï∞Â≠ó‰ºö‰∏ç‰ºöÂ§ß‰∫é2147483647Âç≥ÂèØÔºåÂØπ‰∫é-2147483648ËøôÁßçÊÉÖÂÜµÔºåËôΩÁÑ∂ÈÄªËæë‰∏ä‰ªéÊàë‰ª¨ÁöÑ‰ª£Á†Å‰∏äÂà§ÂÆö‰ΩçÊ∫¢Âá∫Ôºå‰ΩÜÊòØËøîÂõûÁªìÊûúÊÅ∞Â•ΩÁ≠â‰∫é-2147483648„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;class Solution&#123;public: int myAtoi(string str) &#123; int i = 0; while (str[i] == ' ') //Â§ÑÁêÜÂâçÁΩÆÁ©∫Ê†º i++; int flag = 1; int res = 0; if (str[i] == '+') &#123; i++; &#125; else if (str[i] == '-') //ÁâπÊÆäÊÉÖÂÜµÔºå'+-2'==„Äã 0 &#123; i++; flag = -1; &#125; while (i &lt; str.size() &amp;&amp; isdigit(str[i])) &#123; //Âà§Êñ≠ÊòØÂê¶‰∏∫Êï∞Â≠ó int temp = str[i] - 48; //Â§ÑÁêÜÊ∫¢Âá∫ // if(res &gt; INT32_MAX / 10 || ((res == INT32_MAX/10) &amp;&amp; temp &gt; 7)) if (res &gt; (INT32_MAX - temp) / 10) //Ê∫¢Âá∫Âà§Êñ≠ÔºåËøô‰∏çÁî®Â∞ÜresËÆæÁΩÆ‰∏∫long //"-2147483648"ËôΩÁÑ∂ÊØîINT32_MAXÂ§ßÔºåËôΩÁÑ∂Âà§ÂÆö‰ΩçÊ∫¢Âá∫Ôºå‰ΩÜÊòØÂÆûÈôÖ‰∏ä‰∏çÊ∫¢Âá∫ÁöÑÔºåÊàë‰ª¨ÁöÑÁªìÊûúËøîÂõûÁöÑÊ≠£Á°ÆÁöÑ return flag == 1 ? INT32_MAX : INT32_MIN; res = res * 10 + temp; i++; &#125; return flag*res; &#125;&#125;;int main()&#123; string s = "-2147483648"; Solution so; cout &lt;&lt; so.myAtoi(s) &lt;&lt; endl; return 0;&#125; ÊµãËØïÊ†∑‰æã Ê≠£Á°ÆÁöÑÊ≠£Êï∞ÔºåË¥üÊï∞ Ê∫¢Âá∫ÁöÑÊ≠£Êï∞ÔºåË¥üÊï∞ ÈùûÊ≥ïÂ≠óÁ¨¶ÂíåÊï∞Â≠óÁöÑÊ∑∑Âêà]]></content>
      <categories>
        <category>OJ</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode-Êé•Èõ®Ê∞¥]]></title>
    <url>%2Fleetcode-%E6%8E%A5%E9%9B%A8%E6%B0%B4%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆhttps://leetcode-cn.com/problems/trapping-rain-water/ ÊÄùË∑ØÊ†àÁöÑÂÅöÊ≥ïÔºöÁª¥Êä§‰∏Ä‰∏™Ê†àÔºåËøô‰∏™Ê†àÂÖ∂ÂÆûÂ∞±ÊòØ‰∏Ä‰∏™ÈÄíÂáèÁöÑÊ∞¥Êü±‰∏ãÊ†áÁöÑÈõÜÂêàÔºå‰ΩÜÈÅáÂà∞‰∏Ä‰∏™Êñ∞ÁöÑÊ∞¥Êü±ÊØîÂΩìÂâçÊ†àÈ°∂Ê∞¥Êü±È´òÔºåÈÇ£‰πàÂ∞±ÊúâÁßØÊ∞¥‰∫ÜÔºåÈöæÁÇπÊòØË¶ÅÁêÜËß£Â¶Ç‰ΩïÊ±ÇÂá∫Ëøô‰∫õÁßØÊ∞¥ÔºàÈïø‰πòÂÆΩÔºâ„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;stack&gt;using namespace std;class Solution &#123;public: int trap(vector&lt;int&gt;&amp; height) &#123; /*Êö¥ÂäõÊ≥ï int res = 0; //ÊåâÂàóÁÆóÔºåÈ¶ñÂ∞æ‰∏çÁî®ÁÆóÔºåÈªòËÆ§Êé•‰∏çÂà∞Ê∞¥Ôºå for(int i = 1;i &lt; height.size()-1;i++)&#123; int maxLeft = 0; int maxRigth = 0; for(int j = i; j &gt;= 0;j--) &#123; //ÂΩìÂâçÂàóÂ∑¶ËæπÁöÑÊúÄÂ§ßÂÄº maxLeft = max(maxLeft,height[j]); &#125; for (int j = i;j&lt;height.size();j++)&#123;//ÂΩìÂâçÂàóÂè≥ËæπËæπÁöÑÊúÄÂ§ßÂÄº maxRigth = max(maxRigth,height[j]); &#125; //Êú®Ê°∂ÊïàÂ∫î res += min(maxLeft,maxRigth)-height[i]; &#125; return res; */ /*Áî®‰∏§‰∏™Êï∞ÁªÑÂàÜÂà´‰øùÂ≠òÊØè‰∏™ÂàóÁöÑÂ∑¶ËæπÊúÄÂ§ßÂÄºÂíåÂè≥ËæπÊúÄÂ§ßÂÄº if(height.size()==0) return 0; //Âπ≥Âè∞ÊâÄË∞ìÁöÑÂÅ•Â£ÆÊÄßÔºåÂä†‰∏äÂ∞±Ëøá‰∫Ü„ÄÇ„ÄÇ‰∏çÂä†Êä•‰∏Ä‰∫õÂ•áÂ•áÊÄ™ÊÄ™ÈîôËØØ int res = 0; int size = height.size(); vector&lt;int&gt;max_left(size); vector&lt;int&gt;max_right(size); max_left[0] = height[0]; for(int i = 1;i&lt;size-1;i++)&#123; max_left[i] = max(height[i],max_left[i-1]); &#125; max_right[size-1] = height[size-1]; for(int i = size-2;i&gt;=0;i--) max_right[i] = max(height[i],max_right[i+1]); for(int i = 1;i&lt; size-1;i++)&#123; res += min(max_left[i],max_right[i])-height[i]; &#125; return res; */ int res = 0; stack&lt;int&gt;s; //Â≠òÊîæÊØè‰∏ÄÂàóÈõ®Ê∞¥ÁöÑ‰∏ãÊ†áÔºàÂÆûÈôÖ‰∏äÂ≠òÂÇ®ÁöÑ‰∏ãÊ†áÂÄºÂØπÂ∫îÁöÑÊ∞¥Êü±ÊòØÈÄíÂáèÁöÑÔºâ int cur = 0; while (cur &lt; height.size())&#123; //ÂΩìÂâçÁöÑÊ∞¥Êü±Â§ß‰∫éÊ†àÈ°∂ÁöÑÊ∞¥Êü±ÔºåËØ¥ÊòéÊúâÁßØÊ∞¥ while (!s.empty() &amp;&amp; height[cur] &gt; height[s.top()])&#123; int top = s.top(); s.pop(); if(s.empty()) //‰∏∫Á©∫ÔºåËØ¥ÊòéÊ≤°ÊúâÁßØÊ∞¥ break; res += (min(height[cur],height[s.top()]) - height[top]) * (cur-s.top()-1); //Èïø‰πòÂÆΩ &#125; s.push(cur++); &#125; return res; &#125;&#125;;int main()&#123; vector&lt;int&gt;height = &#123;0,1,0,2,1,0,1,3,2,1,2,1&#125;; Solution so; cout &lt;&lt; so.trap(height) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode-ÊúâÊïàÁöÑÊã¨Âè∑]]></title>
    <url>%2Fleetcode-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞https://leetcode-cn.com/problems/valid-parentheses/ ÊÄùË∑Ø Ê†àËß£Ê≥ïÔºåÈÅáÂà∞Â∑¶Êã¨Âè∑ÂéãÂÖ•Ê†à‰∏≠ÔºåÈÅáÂà∞Âè≥Êã¨Âè∑‰∏éÊ†àÈ°∂ÂÖÉÁ¥†ËøõË°åÈÖçÂØπÔºåÈÖçÂØπÊàêÂäüÂºπÂá∫Ê†àÈ°∂ÂÖÉÁ¥†ÔºåÈÖçÂØπÂ§±Ë¥•ËøîÂõûfalse ÈúÄË¶ÅÊ≥®ÊÑèÂè™ÊúâÂè≥Êã¨Âè∑ÁöÑÊÉÖÂÜµ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;stack&gt;using namespace std;class Solution&#123;public: bool isValid(string s) &#123; if (s == "") return true; if (s.size() % 2) return false; stack&lt;char&gt; temp; for (int i = 0; i &lt; s.size(); i++) &#123; if (!temp.empty()) //ÈúÄË¶ÅÊ≥®ÊÑèÂè™ÊúâÂè≥Êã¨Âè∑ÁöÑÊÉÖÂÜµ &#123; if (s[i] == '(' || s[i] == '&#123;' || s[i] == '[') temp.push(s[i]); else &#123; //()Â∑Æ1Ôºå&#123;&#125;[]Â∑Æ2 if (s[i] == temp.top() + 1 || s[i] == temp.top() + 2) temp.pop(); else return false; &#125; &#125; else temp.push(s[i]); &#125; return temp.size()==0; &#125;&#125;;int main()&#123; // cout &lt;&lt; "hellp world" &lt;&lt; endl; string s = "()"; Solution so; cout &lt;&lt; so.isValid(s); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-È°πÁõÆÈÉ®ÁΩ≤]]></title>
    <url>%2Fpython-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[ÁéØÂ¢ÉÈÉ®ÁΩ≤ Âú®ÊâÄÂú®È°πÁõÆÁîüÊàêÁõ∏ÂÖ≥ÂåÖÁöÑrequirements.txtÊñá‰ª∂ pip freeze &gt; requirements.txt Âú®‰∫ë‰∏ªÊú∫‰∏äËÆæÁΩÆpythonËôöÊãüÁéØÂ¢ÉÔºåÁõ¥Êé•ÂÆâË£ÖvirtualenvwrapperÂç≥ÂèØÔºåhttps://virtualenvwrapper.readthedocs.io/en/latest/ ÈúÄË¶ÅÊ≥®ÊÑèËøôÈáåÁöÑÂùëÔºåÈúÄË¶Å‰ΩøÁî®pip3Ôºå‰∏çË¶ÅÂêéÈù¢ÈÖçÁΩÆpython3ÊâæÂà∞Ëøô‰∏™ËÑöÊú¨„ÄÇ ÊâæÂà∞ virtualenvwrapper.shÁöÑ‰ΩçÁΩÆÔºåÊ∑ªÂä†ÁéØÂ¢ÉÂèòÈáè ÈÖçÁΩÆÂêØÂä®Êñá‰ª∂vim ~/.bashrcÔºåÁºñËæëÂÆåsource ~/.bashrc Add three lines to your shell startup file (.bashrc, .profile, etc.) to set the location where the virtual environments should live, the location of your development project directories, and the location of the script installed with this package: Êàë‰ª¨Âè™ÈúÄËÆæÁΩÆËôöÊãüÁéØÂ¢ÉÂ∫îÈ©ªÁïôÁöÑ‰ΩçÁΩÆ‰∏éÊ≠§ËΩØ‰ª∂ÂåÖ‰∏ÄËµ∑ÂÆâË£ÖÁöÑËÑöÊú¨ÁöÑ‰ΩçÁΩÆÂç≥ÂèØ workonÊü•ÁúãÊúâÊ≤°ÊúâËôöÊãüÁéØÂ¢ÉÔºå mkvirtual + ÁéØÂ¢ÉÂêç ÂàõÂª∫ÁéØÂ¢É deactivate : ÈÄÄÂá∫ËôöÊãüÁéØÂ¢É workon + ÁéØÂ¢ÉÂêçÔºöËøõÂÖ•ËôöÊãüÁéØÂ¢É ËøõÂÖ•ËôöÊãüÁéØÂ¢ÉÂêéÔºåÊ†πÊçÆrequirements.txtÂÆâË£ÖÈ°πÁõÆÊâÄÈúÄÁöÑÁéØÂ¢É 1(cov) [root@chenxiaojian Áñ´ÊÉÖ]# pip3 install -r requirements.txt ÂºÄÂèëÊ®°ÂºèÈÉ®ÁΩ≤ È°πÁõÆÊòØ‰∏Ä‰∏™flaskÈ°πÁõÆÔºåÂ∞Üapp.run(host=‚Äù0.0.0.0‚Äù,port=8000)ÊåáÂÆöÊâÄÊúâ‰∏ªÊú∫ÂíåÁ´ØÂè£ËÆøÈóÆ ÂºÄÊîæ‰∫ëÊúçÂä°Âô®ÁöÑ8000Á´ØÂè£ ‰∏ªÊú∫ip:8000ËøõË°åËÆøÈóÆ Áîü‰∫ßÊ®°ÂºèÈÉ®ÁΩ≤ ÂÆâË£ÖnginxÔºåËøõË°åÂèçÂêë‰ª£ÁêÜÔºà‰πüÂ∞±ÊòØÊàë‰ª¨ËÆøÈóÆipÂú∞ÂùÄ,ÈªòËÆ§ÊòØ80Á´ØÂè£ÔºåÁÑ∂ÂêénginxÂèçÂêë‰ª£ÁêÜÂà∞Êú¨Êú∫ÁöÑ8000Á´ØÂè£Ôºå‰πüÂ∞±ÊòØÊàë‰ª¨ÁöÑwebÈ°πÁõÆ„ÄÇÔºâ 1yum -y install nginx ÂÆâË£ÖgunicornÔºåËøõÂÖ•ËôöÊãüÁéØÂ¢É‰∏≠ÂÆâË£Ö 1pip3 install gunicorn Áî®gunicornÂêØÂä®app.pyÔºàÁ¨¨‰∏Ä‰∏™appÊåáÁöÑÊòØapp.pyÔºåÁ¨¨‰∫å‰∏™appÊåáÁöÑÊòØflaskÂÆû‰æãÁöÑÂØπË±°Ôºâ 1234567(cov) [root@chenxiaojian Áñ´ÊÉÖ]# gunicorn -b 127.0.0.1:8000 -D app:app(cov) [root@chenxiaojian Áñ´ÊÉÖ]# ps aux | grep gunicornroot 1444 0.3 0.8 222220 16640 ? S 09:54 0:00 /root/.virtualenvs/cov/bin/python /root/.virtualenvs/cov/bin/gunicorn -b 127.0.0.1:8000 -D app:approot 1525 0.0 0.0 112728 976 pts/0 R+ 09:54 0:00 grep --color=auto gunicornroot 14988 0.0 0.8 222476 16664 ? S 09:45 0:00 /root/.virtualenvs/cov/bin/python /root/.virtualenvs/cov/bin/gunicorn -b 127.0.0.1 -D app:approot 14991 0.2 1.5 247864 29384 ? S 09:45 0:01 /root/.virtualenvs/cov/bin/python /root/.virtualenvs/cov/bin/gunicorn -b 127.0.0.1 -D app:app(cov) [root@chenxiaojian Áñ´ÊÉÖ]# ÂêØÂä®nginxÊúçÂä°Â§±Ë¥•ÔºåÊü•ÁúãÈîôËØØÔºåÊòæÁ§∫Á´ØÂè£80Ë¢´Âç†Áî®Ôºånetstat -ltunpÊü•ÁúãÔºå‰ΩÜÊòØÊàëÁöÑÁ´ØÂè£ÊòéÊòéË¢´nginxÂç†Áî®‰∫ÜÔºåÂè™ËÉΩÊü•ÁúãËøõÁ®ãÔºåÂπ∂kill„ÄÇ /etc/nginx/nginx.conf ÈúÄË¶ÅÊ≥®ÊÑèÔºögunicornÂêØÂä®ÁöÑÁ´ØÂè£Âè∑Ë¶ÅÂíånginxÈÖçÁΩÆÁöÑÁ´ØÂè£Âè∑Ë¶Å‰∏ÄÊ†∑8000. (server_nameÔºöÂ°´ÂÜôËá™Â∑±ÁöÑipÊàñËÄÖÂüüÂêç) Êü•ÁúãnginxÈÖçÁΩÆÊòØÂê¶Ê≠£Â∏∏ 123(cov) [root@chenxiaojian Áñ´ÊÉÖ]# nginx -t -c /etc/nginx/nginx.confnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successful ËÆøÈóÆipÊàñËÄÖÂüüÂêçÊàêÂäüÔºÅ]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁºñËØëÂéüÁêÜ-Áª™ËÆ∫]]></title>
    <url>%2F%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-%E7%BB%AA%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[ÁºñËØëÈò∂ÊÆµÔºöÂ∞ÜÊ∫êÁ®ãÂ∫èÔºàÈ´òÁ∫ßËØ≠Ë®ÄÔºâÂèòÊç¢ÊàêÁõÆÊ†áÁ®ãÂ∫èÔºà‰ΩéÁ∫ßËØ≠Ë®ÄÔºâ ËøêË°åÈò∂ÊÆµÔºöÁî±ÊâÄÁîüÊàêÁöÑÁõÆÊ†áÁ®ãÂ∫èËøûÂêåËøêË°åÁ≥ªÁªüÔºàÊï∞ÊçÆÁ©∫Èó¥ÂàÜÈÖçÂ≠êÁ®ãÂ∫èÔºåÊ†áÂáÜÂáΩÊï∞Á®ãÂ∫èÁ≠âÔºâÊé•Êî∂Á®ãÂ∫èÁöÑÂàùÂßãÊï∞ÊçÆ‰Ωú‰∏∫ËæìÂÖ•ÔºåËøêË°åÂêéËæìÂá∫ËÆ°ÁÆóÁªìÊûú Â¶ÇÊûúÁºñËØëÁîüÊàêÁöÑÁõÆÊ†áÁ®ãÂ∫èÊòØÊ±áÁºñËØ≠Ë®ÄÂΩ¢ÂºèÁöÑÔºåÈÇ£‰πàÂú®ÁºñËØë‰∏éËøêË°åÈò∂ÊÆµ‰πãÈó¥ËøòË¶ÅÊ∑ªÂä†‰∏Ä‰∏™Ê±áÁºñÈò∂ÊÆµÔºåÂÆÉÂ∞ÜÁºñËØëÁîüÊàêÁöÑÊ±áÁºñËØ≠Ë®ÄÁõÆÊ†áÁ®ãÂ∫èÂÜçÁªèËøáÊ±áÁºñÁ®ãÂ∫èÂèòÊç¢‰∏∫Êú∫Âô®ËØ≠Ë®ÄÁõÆÊ†áÁ®ãÂ∫è„ÄÇ]]></content>
      <categories>
        <category>ÁºñËØëÂéüÁêÜ</category>
      </categories>
      <tags>
        <tag>ÁºñËØëÂéüÁêÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂµåÂÖ•Âºè-‰ªªÂä°‰∏Ä]]></title>
    <url>%2F%E5%B5%8C%E5%85%A5%E5%BC%8F-%E4%BB%BB%E5%8A%A1%E4%B8%80%2F</url>
    <content type="text"><![CDATA[Êü•ÁúãcentosÂèëÂ∏ÉÁâàÊú¨ cat /etc/redhat-release Êü•ÁúãlinuxÁöÑ64‰ΩçÁöÑ uname -a ‰∏ãËΩΩndkÁºñËØëÂ∑•ÂÖ∑ wget -c http://dl.google.com/android/ndk/android-ndk64-r10b-linux-x86_64.tar.bz2 ‰øÆÊîπËøô‰∏™ÂÆâË£ÖÁöÑÊâßË°åÊùÉÈôê 1[root@chenxiaojian qianrushi]# chmod 777 android-ndk64-r10b-linux-x86_64.tar.bz2 ÂÆâË£ÖÂåÖÁöÑ.tar.bz2Ê†ºÂºèÔºåËß£ÂéãÊòØÈúÄË¶Åbzip2Ëøô‰∏™ÂåÖÔºå‰∏çÁÑ∂Â∞±‰ºöÂá∫ÈóÆÈ¢òÂï¶ ÂÆâË£Öbzip2 yum -y install bzip2 Ëß£Âéã (Âú®ÂΩìÂâçÊñá‰ª∂Â§π‰∏≠Ëß£ÂéãÔºå-xË°®Á§∫Ëß£ÂéãÔºå-jË°®Á§∫Ëøô‰∏™ÂéãÁº©ÂåÖÊòØbzipÂéãÁº©ÊñπÂºèÔºå-fÊòØÂøÖÈÄâ) 1tar -xjf /home/qianrushi/android-ndk64-r10b-linux-x86_64.tar.bz2 NDKÁéØÂ¢ÉËøõË°åÈÖçÁΩÆ ÊâìÂºÄ~/.bashrcÊñá‰ª∂ËøõË°åÈÖçÁΩÆ 1[root@chenxiaojian android-ndk-r10b]# vim ~/.bashrc Âú®Êñá‰ª∂Êú´Â∞æÊ∑ªÂä†Êâ©Â±ïÂëΩ‰ª§ÔºàÂÖ∂ÂÆûÂ∞±ÊòØÁõ∏ÂΩì‰∫éwindowsÁöÑpathÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆÔºâ NDKÂêéÈù¢Â∏¶ÂÆâË£ÖÁöÑË∑ØÂæÑ 12export NDK=/home/qianrushi/android-ndk/android-ndk-r10bexport PATH=$&#123;PATH&#125;:$NDK ‰øùÂ≠òÊñá‰ª∂‰Ωø‰πãÁîüÊïàÔºåÂπ∂ÊâßË°åÂëΩ‰ª§ 1[root@chenxiaojian android-ndk-r10b]# source ~/.bashrc È™åËØÅ ËæìÂÖ•ndk-build ÈÖçÁΩÆÂÆâÂçìÂºÄÂèëÁéØÂ¢É android studio‰∏ãËΩΩ ÂÆâË£ÖÊïôÁ®ã ÈîôËØØËß£ÂÜ≥]]></content>
      <categories>
        <category>ÂµåÂÖ•Âºè</category>
      </categories>
      <tags>
        <tag>ÂµåÂÖ•Âºè</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql-Áõ∏ÂÖ≥ÂëΩ‰ª§]]></title>
    <url>%2Fmysql-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Êü•ÁúãË°®ÁöÑÁªìÊûÑ 1mysql&gt; desc history; ######]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éÂú®linux‰∏ãÂá∫Áé∞stdio.hÊñá‰ª∂‰∏çÂ≠òÂú®ÈóÆÈ¢òÁöÑËß£ÂÜ≥ÊñπÊ≥ï]]></title>
    <url>%2F%E5%85%B3%E4%BA%8E%E5%9C%A8linux%E4%B8%8B%E5%87%BA%E7%8E%B0stdio-h%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Âá∫Áé∞stdio.hÊñá‰ª∂Êâæ‰∏çÂà∞ÁöÑÈóÆÈ¢òÔºå‰ΩøÁî®Â¶Ç‰∏ãÂëΩ‰ª§Ôºö1root@chenxiaojian:/etc/apt# apt-get install libc6-dev Ëøô‰∏™Êó∂ÂÄôÊåâÈÅìÁêÜËÉΩÂ§üÊàêÂäüËß£ÂÜ≥Ôºå‰ΩÜÊòØÂç¥Âá∫Áé∞Â¶Ç‰∏ãÈîôËØØÔºö12345678910111213root@chenxiaojian:/etc/apt# apt-get install libc6-devÊ≠£Âú®ËØªÂèñËΩØ‰ª∂ÂåÖÂàóË°®... ÂÆåÊàêÊ≠£Âú®ÂàÜÊûêËΩØ‰ª∂ÂåÖÁöÑ‰æùËµñÂÖ≥Á≥ªÊ†ë Ê≠£Âú®ËØªÂèñÁä∂ÊÄÅ‰ø°ÊÅØ... ÂÆåÊàê Êúâ‰∏Ä‰∫õËΩØ‰ª∂ÂåÖÊó†Ê≥ïË¢´ÂÆâË£Ö„ÄÇÂ¶ÇÊûúÊÇ®Áî®ÁöÑÊòØ unstable ÂèëË°åÁâàÔºåËøô‰πüËÆ∏ÊòØÂõ†‰∏∫Á≥ªÁªüÊó†Ê≥ïËææÂà∞ÊÇ®Ë¶ÅÊ±ÇÁöÑÁä∂ÊÄÅÈÄ†ÊàêÁöÑ„ÄÇËØ•ÁâàÊú¨‰∏≠ÂèØËÉΩ‰ºöÊúâ‰∏Ä‰∫õÊÇ®ÈúÄË¶ÅÁöÑËΩØ‰ª∂ÂåÖÂ∞öÊú™Ë¢´ÂàõÂª∫ÊàñÊòØÂÆÉ‰ª¨Â∑≤Ë¢´‰ªéÊñ∞Âà∞(Incoming)ÁõÆÂΩïÁßªÂá∫„ÄÇ‰∏ãÂàó‰ø°ÊÅØÂèØËÉΩ‰ºöÂØπËß£ÂÜ≥ÈóÆÈ¢òÊúâÊâÄÂ∏ÆÂä©Ôºö‰∏ãÂàóËΩØ‰ª∂ÂåÖÊúâÊú™Êª°Ë∂≥ÁöÑ‰æùËµñÂÖ≥Á≥ªÔºö libc6-dev : ‰æùËµñ: libc6 (= 2.23-0ubuntu11) ‰ΩÜÊòØ 2.27-3ubuntu1 Ê≠£Ë¶ÅË¢´ÂÆâË£Ö ‰æùËµñ: libc-dev-bin (= 2.23-0ubuntu11)E: Êó†Ê≥ï‰øÆÊ≠£ÈîôËØØÔºåÂõ†‰∏∫ÊÇ®Ë¶ÅÊ±ÇÊüê‰∫õËΩØ‰ª∂ÂåÖ‰øùÊåÅÁé∞Áä∂ÔºåÂ∞±ÊòØÂÆÉ‰ª¨Á†¥Âùè‰∫ÜËΩØ‰ª∂ÂåÖÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇ Ëß£ÂÜ≥ÊñπÊ≥ïÔºöÊõ¥Êç¢ËΩØ‰ª∂Ê∫êÔºõÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÂ∞±ÊòØÔºöÊ†πÊçÆËá™Â∑±linuxÁöÑÁâàÊú¨ËøõË°åÊõ¥Êç¢ÊâçËÉΩÊàêÂäü Êü•ÁúãubantuÁâàÊú¨Ôºå‰ΩøÁî®ÂëΩ‰ª§ 12root@chenxiaojian:/etc/apt# lsb_release -cCodename: bionic bionicÔºöË°®Á§∫ÁöÑubantuÁöÑ18.04ÁöÑÁâàÊú¨ Êõ¥Êç¢ËΩØ‰ª∂Ê∫êÔºö/etc/apt/sources.list Êñá‰ª∂ÔºåÈòøÈáå‰∫ëÁöÑËΩØ‰ª∂Ê∫ê 123456789101112131415161718deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse ÊâßË°åÂëΩ‰ª§ 12apt-get updateapt-get upgrade ÈóÆÈ¢òËß£ÂÜ≥]]></content>
      <categories>
        <category>Linux</category>
        <category>Â∏∏ËßÅÈóÆÈ¢ò</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊûÑÂª∫‰πòÁßØÊï∞ÁªÑ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÁªôÂÆö‰∏Ä‰∏™Êï∞ÁªÑA[0,1,‚Ä¶,n-1],ËØ∑ÊûÑÂª∫‰∏Ä‰∏™Êï∞ÁªÑB[0,1,‚Ä¶,n-1],ÂÖ∂‰∏≠B‰∏≠ÁöÑÂÖÉÁ¥†B[i]=A[0]A[1]‚Ä¶A[i-1]*A[i+1]‚Ä¶*A[n-1]„ÄÇ‰∏çËÉΩ‰ΩøÁî®Èô§Ê≥ï„ÄÇÔºàÊ≥®ÊÑèÔºöËßÑÂÆöB[0] = A[1] * A[2] * ‚Ä¶ * A[n-1]ÔºåB[n-1] = A[0] * A[1] * ‚Ä¶ * A[n-2];Ôºâ ÊÄùË∑Ø Â∞ÜBÊï∞ÁªÑÂºÑÊàêÁü©Èòµ Ëøû‰πòËÆ°ÁÆó‰∏ä‰∏âËßí Ëøû‰πòËÆ°ÁÆó‰∏ã‰∏âËßíÂπ∂Â∞Ü‰πã‰πòÂà∞‰∏ä‰∏âËßí‰∏≠ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution &#123;public: vector&lt;int&gt; multiply(const vector&lt;int&gt;&amp; A) &#123; vector&lt;int&gt;res(A.size(),1); //ÈúÄË¶ÅË¢´ÂàùÂßãÂåñ //ÊûÑÂª∫‰∏ã‰∏âËßí for (int i = 1;i &lt; A.size();i++) &#123; res[i] = res[i-1] * A[i-1]; &#125; //Â∞Ü‰∏ä‰∏âËßíÁöÑÂÄº‰πò‰∏ã‰∏âËßí int temp = 1; for (int i = A.size()-2;i&gt;=0;i--) &#123; temp = temp * A[i+1]; res[i] = temp * res[i]; &#125; return res; &#125;&#125;;int main()&#123; vector&lt;int&gt;a = &#123;1,2,3&#125;; Solution so; vector&lt;int&gt;res = so.multiply(a); cout &lt;&lt; res.size(); cout &lt;&lt; res[2] &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Â∞ÜÂ≠óÁ¨¶‰∏≤ËΩ¨Êç¢‰∏∫Êï∞Â≠ó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Â∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ËΩ¨Êç¢Êàê‰∏Ä‰∏™Êï¥Êï∞ÔºåË¶ÅÊ±Ç‰∏çËÉΩ‰ΩøÁî®Â≠óÁ¨¶‰∏≤ËΩ¨Êç¢Êï¥Êï∞ÁöÑÂ∫ìÂáΩÊï∞„ÄÇ Êï∞ÂÄº‰∏∫0ÊàñËÄÖÂ≠óÁ¨¶‰∏≤‰∏çÊòØ‰∏Ä‰∏™ÂêàÊ≥ïÁöÑÊï∞ÂÄºÂàôËøîÂõû0 ËæìÂÖ•ÊèèËø∞:1ËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤,ÂåÖÊã¨Êï∞Â≠óÂ≠óÊØçÁ¨¶Âè∑,ÂèØ‰ª•‰∏∫Á©∫ ËæìÂá∫ÊèèËø∞:1Â¶ÇÊûúÊòØÂêàÊ≥ïÁöÑÊï∞ÂÄºË°®ËææÂàôËøîÂõûËØ•Êï∞Â≠óÔºåÂê¶ÂàôËøîÂõû0 Á§∫‰æã1 ËæìÂÖ•12+2147483647 1a33 ËæìÂá∫122147483647 0 ÊÄùË∑ØÔºö Ê≠£Ë¥üÂè∑ ÈùûÊ≥ïËæìÂÖ•abv Êï¥Êï∞ËåÉÂõ¥ÔºåÂà§Êñ≠ÊòØÂê¶Ê∫¢Âá∫ ÊòØÂê¶ÂâçÁºÄ0ÁöÑËæìÂá∫ÔºàÂ•ΩÂÉèÊ≤°ÊúâÁâπÂÆöË¶ÅÊ±ÇÔºâÔºà‚Äù01023‚ÄúÔºâ==„ÄãÔºà1023ÔºâÔºü AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;#define maxnum 0x7fffffff#define minnum 0x80000000class Solution&#123;public: int StrToInt(string str) &#123; if (str.size() == 0) //Á©∫Â≠óÁ¨¶‰∏≤ return 0; long long res = 0; int i = 0; int flag = 1; //Ë°®Á§∫‰∏∫Ê≠£ÔºåÂõ†‰∏∫Êàë‰ª¨Âà§Êñ≠Ê∫¢Âá∫Êó∂:Âà§Êñ≠ÊòØÂê¶Ë∂ÖËøáÊúÄÂ§ßÂÄºÁöÑÊù°‰ª∂ÊòØflag == 1 if (str[i] == '+') //Â§ÑÁêÜÊ≠£Ë¥üÂè∑ &#123; flag = 1; i++; &#125; else if (str[i] == '-') &#123; i++; flag = -1; &#125; for (; i &lt; str.size(); i++) &#123; if (str[i] &lt;= '9' &amp;&amp; str[i] &gt;= '0') //0~9ÂêàÊ≥ïÂ≠óÁ¨¶ &#123; res = res * 10 + str[i] - '0'; if (flag == 1 &amp;&amp; res &gt; maxnum || flag == -1 &amp;&amp; res &gt; minnum) //Ê∫¢Âá∫ return 0; &#125; else return 0; &#125; if (flag == -1) return res * -1; return res; &#125;&#125;;int main()&#123; // string str = "+2147483647"; string str = "134"; Solution so; cout &lt;&lt; so.StrToInt(str) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∏çÁî®Âä†Âáè‰πòÈô§ÂÅöÂä†Ê≥ï]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÂÜô‰∏Ä‰∏™ÂáΩÊï∞ÔºåÊ±Ç‰∏§‰∏™Êï¥Êï∞‰πãÂíåÔºåË¶ÅÊ±ÇÂú®ÂáΩÊï∞‰ΩìÂÜÖ‰∏çÂæó‰ΩøÁî®+„ÄÅ-„ÄÅ*„ÄÅ/ÂõõÂàôËøêÁÆóÁ¨¶Âè∑„ÄÇ ÊÄùË∑Ø Êó†Ëøõ‰ΩçÂä†ÂáèÔºöÂºÇÊàñ ËÆ°ÁÆóËøõ‰ΩçÔºö‰∏éËøêÁÆóÂ∑¶Áßª1‰Ωç ‰∏§‰∏™ÁªìÊûúÁõ∏Âä†ÔºåÂÖ∂ÂÆûÂ∞±ÊòØÈáçÂ§ç‰∏äÈù¢‰∏§Ê≠•Êìç‰ΩúÔºàÂ¶ÇÊûúÁõ¥Êé•Áî®Âä†Âè∑ÔºåÂ∞±‰∏çÁ¨¶ÂêàÈ¢òÊÑè‰∫ÜÔºâÔºåÂΩìËøõ‰ΩçÁ≠â‰∫é0ÁöÑÊó∂ÂÄôÔºåÂ∞±ÂæóÂà∞ÁªìÊûú‰∫Ü„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627#include &lt;iostream&gt;using namespace std;class Solution &#123;public: int Add(int num1, int num2) &#123; int sum; int carry;//Ëøõ‰Ωç while(num2 &gt; 0) &#123; sum = num1 ^ num2; //‰∏çËøõ‰ΩçÂä†,Âáè carry = (num1 &amp; num2)&lt;&lt;1; //Ëøõ‰ΩçÁöÑÂÄº num1 = sum; num2 = carry; //ÂΩìnum2 == 0Êó∂ÔºåÂç≥ÊòØÊ≤°ÊúâËøõ‰Ωç &#125; return num1; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.Add(1,-2) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>‰ΩçËøêÁÆó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Ê±Ç1+2+3+...+n]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%B1%821-2-3-n%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Ê±Ç1+2+3+‚Ä¶+nÔºåË¶ÅÊ±Ç‰∏çËÉΩ‰ΩøÁî®‰πòÈô§Ê≥ï„ÄÅfor„ÄÅwhile„ÄÅif„ÄÅelse„ÄÅswitch„ÄÅcaseÁ≠âÂÖ≥ÈîÆÂ≠óÂèäÊù°‰ª∂Âà§Êñ≠ËØ≠Âè•ÔºàA?B:CÔºâ„ÄÇ ÊÄùË∑Ø ÈÄªËæëËøêÁÆóÁöÑÁü≠Ë∑ØÁâπÊÄßÂÆûÁé∞ÈÄíÂΩí sizeof() AC‰ª£Á†Å1234567891011class Solution &#123;public: int Sum_Solution(int n) &#123; //bool arr[n][n+1]; //gccÁöÑÁâπÊÄß,ÂÖ¨Âºè //return sizeof(arr) &gt;&gt; 1; //&amp;&amp;ÁöÑÁü≠Ë∑ØÁâπÊÄß int res = n; res &amp;&amp; (res += Sum_Solution(n-1)); return res; &#125;&#125;;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ËÑëÊ¥û</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Â≠©Â≠ê‰ª¨ÁöÑÊ∏∏Êàè-ÂúÜÂúà‰∏≠ÊúÄÂêéÂâ©‰∏ãÁöÑÊï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%AD%A9%E5%AD%90%E4%BB%AC%E7%9A%84%E6%B8%B8%E6%88%8F-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ ÊØèÂπ¥ÂÖ≠‰∏ÄÂÑøÁ´•ËäÇ,ÁâõÂÆ¢ÈÉΩ‰ºöÂáÜÂ§á‰∏Ä‰∫õÂ∞èÁ§ºÁâ©ÂéªÁúãÊúõÂ≠§ÂÑøÈô¢ÁöÑÂ∞èÊúãÂèã,‰ªäÂπ¥‰∫¶ÊòØÂ¶ÇÊ≠§„ÄÇHF‰Ωú‰∏∫ÁâõÂÆ¢ÁöÑËµÑÊ∑±ÂÖÉËÄÅ,Ëá™ÁÑ∂‰πüÂáÜÂ§á‰∫Ü‰∏Ä‰∫õÂ∞èÊ∏∏Êàè„ÄÇÂÖ∂‰∏≠,Êúâ‰∏™Ê∏∏ÊàèÊòØËøôÊ†∑ÁöÑ:È¶ñÂÖà,ËÆ©Â∞èÊúãÂèã‰ª¨Âõ¥Êàê‰∏Ä‰∏™Â§ßÂúà„ÄÇÁÑ∂Âêé,‰ªñÈöèÊú∫ÊåáÂÆö‰∏Ä‰∏™Êï∞m,ËÆ©ÁºñÂè∑‰∏∫0ÁöÑÂ∞èÊúãÂèãÂºÄÂßãÊä•Êï∞„ÄÇÊØèÊ¨°ÂñäÂà∞m-1ÁöÑÈÇ£‰∏™Â∞èÊúãÂèãË¶ÅÂá∫ÂàóÂî±È¶ñÊ≠å,ÁÑ∂ÂêéÂèØ‰ª•Âú®Á§ºÂìÅÁÆ±‰∏≠‰ªªÊÑèÁöÑÊåëÈÄâÁ§ºÁâ©,Âπ∂‰∏î‰∏çÂÜçÂõûÂà∞Âúà‰∏≠,‰ªé‰ªñÁöÑ‰∏ã‰∏Ä‰∏™Â∞èÊúãÂèãÂºÄÂßã,ÁªßÁª≠0‚Ä¶m-1Êä•Êï∞‚Ä¶.ËøôÊ†∑‰∏ãÂéª‚Ä¶.Áõ¥Âà∞Ââ©‰∏ãÊúÄÂêé‰∏Ä‰∏™Â∞èÊúãÂèã,ÂèØ‰ª•‰∏çÁî®Ë°®Êºî,Âπ∂‰∏îÊãøÂà∞ÁâõÂÆ¢ÂêçË¥µÁöÑ‚ÄúÂêç‰æ¶Êé¢ÊüØÂçó‚ÄùÂÖ∏ËóèÁâà(ÂêçÈ¢ùÊúâÈôêÂì¶!!^_^)„ÄÇËØ∑‰Ω†ËØïÁùÄÊÉ≥‰∏ã,Âì™‰∏™Â∞èÊúãÂèã‰ºöÂæóÂà∞Ëøô‰ªΩÁ§ºÂìÅÂë¢Ôºü(Ê≥®ÔºöÂ∞èÊúãÂèãÁöÑÁºñÂè∑ÊòØ‰ªé0Âà∞n-1) Â¶ÇÊûúÊ≤°ÊúâÂ∞èÊúãÂèãÔºåËØ∑ËøîÂõû-1 ÊÄùË∑Ø Á∫¶ÁëüÂ§´ÁéØÈóÆÈ¢òÔºåÊàñËÄÖ‰∏¢ÊâãÁª¢ÈóÆÈ¢ò ÂÅáËÆæf[n]‰∏∫‰∫∫Êï∞‰∏∫nÊúÄÂêéÂâ©‰∏ãÁºñÂè∑ÔºåÈÇ£‰πàf[n] = (f[n-1] + m)%nÔºõ Ëá≥‰∫éÂÖ¨ÂºèÁöÑÊé®ÂØºÔºåËØ¶ËßÅ‰ª•‰∏ã‰∏§ÁØáÂçöÂÆ¢Ôºö ÂçöÂÆ¢1 ÂçöÂÆ¢2 Â¶ÇÊûúË¶ÅÊ±ÇËß£ÊØè‰∏ÄËΩÆÂá∫Â±ÄÁöÑ‰∫∫ÔºåÂè™ËÉΩÊ®°ÊãüËøô‰∏™ËøáÁ®ã‰∫ÜÂêß„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526#include &lt;iostream&gt;using namespace std;class Solution &#123;public: int LastRemaining_Solution(int n, int m) &#123; int res = 0; //ÂΩìn = 1Êó∂ if(n == 1) return 0; else if(n &lt; 1 || m &lt; 1) return -1; else &#123; for(int i = 2;i &lt;= n;i++) res = (res + m)%i; return res; &#125; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.LastRemaining_Solution(4,3) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈÄíÊé®</tag>
        <tag>Êï∞ËÆ∫</tag>
        <tag>Âä®ÊÄÅËßÑÂàí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊâëÂÖãÁâåÁöÑÈ°∫Â≠ê]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%89%91%E5%85%8B%E7%89%8C%E7%9A%84%E9%A1%BA%E5%AD%90%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞LL‰ªäÂ§©ÂøÉÊÉÖÁâπÂà´Â•Ω,Âõ†‰∏∫‰ªñÂéª‰π∞‰∫Ü‰∏ÄÂâØÊâëÂÖãÁâå,ÂèëÁé∞ÈáåÈù¢Â±ÖÁÑ∂Êúâ2‰∏™Â§ßÁéã,2‰∏™Â∞èÁéã(‰∏ÄÂâØÁâåÂéüÊú¨ÊòØ54Âº†^_^)‚Ä¶‰ªñÈöèÊú∫‰ªé‰∏≠ÊäΩÂá∫‰∫Ü5Âº†Áâå,ÊÉ≥ÊµãÊµãËá™Â∑±ÁöÑÊâãÊ∞î,ÁúãÁúãËÉΩ‰∏çËÉΩÊäΩÂà∞È°∫Â≠ê,Â¶ÇÊûúÊäΩÂà∞ÁöÑËØù,‰ªñÂÜ≥ÂÆöÂéª‰π∞‰ΩìËÇ≤ÂΩ©Á•®,ÂòøÂòøÔºÅÔºÅ‚ÄúÁ∫¢ÂøÉA,ÈªëÊ°É3,Â∞èÁéã,Â§ßÁéã,ÊñπÁâá5‚Äù,‚ÄúOh My God!‚Äù‰∏çÊòØÈ°∫Â≠ê‚Ä¶..LL‰∏çÈ´òÂÖ¥‰∫Ü,‰ªñÊÉ≥‰∫ÜÊÉ≥,ÂÜ≥ÂÆöÂ§ß\Â∞è ÁéãÂèØ‰ª•ÁúãÊàê‰ªª‰ΩïÊï∞Â≠ó,Âπ∂‰∏îAÁúã‰Ωú1,J‰∏∫11,Q‰∏∫12,K‰∏∫13„ÄÇ‰∏äÈù¢ÁöÑ5Âº†ÁâåÂ∞±ÂèØ‰ª•ÂèòÊàê‚Äú1,2,3,4,5‚Äù(Â§ßÂ∞èÁéãÂàÜÂà´Áúã‰Ωú2Âíå4),‚ÄúSo Lucky!‚Äù„ÄÇLLÂÜ≥ÂÆöÂéª‰π∞‰ΩìËÇ≤ÂΩ©Á•®Âï¶„ÄÇ Áé∞Âú®,Ë¶ÅÊ±Ç‰Ω†‰ΩøÁî®ËøôÂπÖÁâåÊ®°Êãü‰∏äÈù¢ÁöÑËøáÁ®ã,ÁÑ∂ÂêéÂëäËØâÊàë‰ª¨LLÁöÑËøêÊ∞îÂ¶Ç‰ΩïÔºå Â¶ÇÊûúÁâåËÉΩÁªÑÊàêÈ°∫Â≠êÂ∞±ËæìÂá∫trueÔºåÂê¶ÂàôÂ∞±ËæìÂá∫false„ÄÇ‰∏∫‰∫ÜÊñπ‰æøËµ∑ËßÅ,‰Ω†ÂèØ‰ª•ËÆ§‰∏∫Â§ßÂ∞èÁéãÊòØ0„ÄÇ ÊÄùË∑ØÊéíÂ∫èÔºåËÆ°ÁÆó0ÁöÑ‰∏™Êï∞ÔºåÂà§Êñ≠0ÊòØÂê¶Êª°Ë∂≥ÈúÄÊ±ÇÔºåÂà§Êñ≠ÊòØÂê¶Âá∫Áé∞ÂØπÂ≠ê AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std;class Solution&#123;public: bool IsContinuous(vector&lt;int&gt; numbers) &#123; if (numbers.size()==0) return false; sort(numbers.begin(), numbers.end()); int zero_size = 0; int i = 0; for (; i &lt; numbers.size(); i++) &#123; if (numbers[i] == 0) zero_size++; else break; &#125; for (int j = i; j &lt; numbers.size()-1; j++) &#123; if (numbers[j] == numbers[j + 1]) //Âá∫Áé∞ÂØπÂ≠ê return false; int diff = numbers[j + 1] - numbers[j] - 1; if (diff &gt; zero_size) return false; else &#123; zero_size -= diff; &#125; &#125; return true; &#125;&#125;;int main()&#123; vector&lt;int&gt; data = &#123;0, 3, 4, 5, 0&#125;; Solution so; cout &lt;&lt; so.IsContinuous(data) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Ê®°Êãü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÁøªËΩ¨ÂçïËØçÈ°∫Â∫èÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÁâõÂÆ¢ÊúÄËøëÊù•‰∫Ü‰∏Ä‰∏™Êñ∞ÂëòÂ∑•FishÔºåÊØèÂ§©Êó©Êô®ÊÄªÊòØ‰ºöÊãøÁùÄ‰∏ÄÊú¨Ëã±ÊñáÊùÇÂøóÔºåÂÜô‰∫õÂè•Â≠êÂú®Êú¨Â≠ê‰∏ä„ÄÇÂêå‰∫ãCatÂØπFishÂÜôÁöÑÂÜÖÂÆπÈ¢áÊÑüÂÖ¥Ë∂£ÔºåÊúâ‰∏ÄÂ§©‰ªñÂêëFishÂÄüÊù•ÁøªÁúãÔºå‰ΩÜÂç¥ËØª‰∏çÊáÇÂÆÉÁöÑÊÑèÊÄù„ÄÇ‰æãÂ¶ÇÔºå‚Äústudent. a am I‚Äù„ÄÇÂêéÊù•ÊâçÊÑèËØÜÂà∞ÔºåËøôÂÆ∂‰ºôÂéüÊù•ÊääÂè•Â≠êÂçïËØçÁöÑÈ°∫Â∫èÁøªËΩ¨‰∫ÜÔºåÊ≠£Á°ÆÁöÑÂè•Â≠êÂ∫îËØ•ÊòØ‚ÄúI am a student.‚Äù„ÄÇCatÂØπ‰∏Ä‰∏ÄÁöÑÁøªËΩ¨Ëøô‰∫õÂçïËØçÈ°∫Â∫èÂèØ‰∏çÂú®Ë°åÔºå‰Ω†ËÉΩÂ∏ÆÂä©‰ªñ‰πàÔºü ÊÄùË∑ØÊï¥‰ΩìÁøªËΩ¨ÔºåÂ±ÄÈÉ®Âçï‰∏™ÂçïËØçËøõË°åÁøªËΩ¨,Ê≥®ÊÑèÁªÜËäÇÂç≥ÂèØ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;class Solution&#123;public: string ReverseSentence(string str) &#123; reverse_word(str, 0, str.size() - 1); //Êï¥‰∏™Â∫èÂàóÁøªËΩ¨ // str = str + ' '; //ÁªìÂ∞æÂä†‰∏™Á©∫Ê†ºÔºå‰æø‰∫éÂàÜÂâ≤ÊúÄÂêéÁöÑÂçïËØç... int begin = 0;//ÁøªËΩ¨ÂçïËØçÁöÑËµ∑Âßã‰ΩçÁΩÆ int end = 0;// ÁøªËΩ¨ÂçïËØçÁöÑÊú´‰ΩçÁΩÆ for (int i = 0; i &lt; str.size(); i++) &#123; //Êú´Â∞æÁâπÊÆäÂ§ÑÁêÜ if (i == str.size()-1) //Âà∞ËææÊú´Â∞æ &#123; reverse_word(str,begin, end); &#125; if (str[i] == ' ') //ÊåâÁÖßÁ©∫Ê†ºÂàÜÂâ≤ &#123; // cout &lt;&lt; begin &lt;&lt; " " &lt;&lt; end &lt;&lt;endl; reverse_word(str, begin, end-1); begin = i + 1; end = begin; &#125; else end++; &#125; return str; &#125; void reverse_word(string &amp;str, int begin, int end) //ÁøªËΩ¨ÂçïËØç &#123; while (begin &lt; end) &#123; char temp = str[begin]; str[begin] = str[end]; str[end] = temp; begin++; end--; &#125; &#125;&#125;;int main()&#123; string str = "she am a student."; Solution so; string res = so.ReverseSentence(str); cout &lt;&lt; res &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Â∑¶ÊóãËΩ¨Â≠óÁ¨¶‰∏≤]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Ê±áÁºñËØ≠Ë®Ä‰∏≠Êúâ‰∏ÄÁßçÁßª‰ΩçÊåá‰ª§Âè´ÂÅöÂæ™ÁéØÂ∑¶ÁßªÔºàROLÔºâÔºåÁé∞Âú®Êúâ‰∏™ÁÆÄÂçïÁöÑ‰ªªÂä°ÔºåÂ∞±ÊòØÁî®Â≠óÁ¨¶‰∏≤Ê®°ÊãüËøô‰∏™Êåá‰ª§ÁöÑËøêÁÆóÁªìÊûú„ÄÇÂØπ‰∫é‰∏Ä‰∏™ÁªôÂÆöÁöÑÂ≠óÁ¨¶Â∫èÂàóSÔºåËØ∑‰Ω†ÊääÂÖ∂Âæ™ÁéØÂ∑¶ÁßªK‰ΩçÂêéÁöÑÂ∫èÂàóËæìÂá∫„ÄÇ‰æãÂ¶ÇÔºåÂ≠óÁ¨¶Â∫èÂàóS=‚ÄùabcXYZdef‚Äù,Ë¶ÅÊ±ÇËæìÂá∫Âæ™ÁéØÂ∑¶Áßª3‰ΩçÂêéÁöÑÁªìÊûúÔºåÂç≥‚ÄúXYZdefabc‚Äù„ÄÇÊòØ‰∏çÊòØÂæàÁÆÄÂçïÔºüOKÔºåÊêûÂÆöÂÆÉÔºÅ ÊÄùË∑ØÊâæÂà∞ËßÑÂæãÔºåÂæ™ÁéØÂ∑¶ÁßªÂèØ‰ª•ÁêÜËß£‰∏∫Âæ™ÁéØÈòüÂàóÂï•ÁöÑÔºåËøôÊ†∑Â∞±‰ºöÊÉ≥Âà∞Ê®°ËøêÁÆóÂï¶‚Ä¶ÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ÊâæÂà∞ËßÑÂæã‰∫Ü„ÄÇ ÈúÄË¶ÅÊ≥®ÊÑèstringÂØπË±°Ë¢´ÂàùÂßãÂåñÂêéÊâçËÉΩËµãÂÄº„ÄÇ AC‰ª£Á†Å12345678910111213141516171819202122232425#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;class Solution &#123;public: string LeftRotateString(string str, int n) &#123; string res = str;//resÈúÄË¶ÅË¢´ÂàùÂßãÂåñÔºå‰πãÂêéÊâçËÉΩËøõË°åres[]ÁöÑËµãÂÄº for (int i = 0;i &lt; str.size();i++) &#123; int index = (i-n + str.size()) % str.size(); //ËßÑÂæã res[index] = str[i]; &#125; return res; &#125;&#125;;int main()&#123; string str = "abcXYZdef"; Solution so; string res = so.LeftRotateString(str, 3); cout &lt;&lt; res &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Âíå‰∏∫SÁöÑ‰∏§‰∏™Êï∞Â≠ó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%92%8C%E4%B8%BAS%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™ÈÄíÂ¢ûÊéíÂ∫èÁöÑÊï∞ÁªÑÂíå‰∏Ä‰∏™Êï∞Â≠óSÔºåÂú®Êï∞ÁªÑ‰∏≠Êü•Êâæ‰∏§‰∏™Êï∞Ôºå‰ΩøÂæó‰ªñ‰ª¨ÁöÑÂíåÊ≠£Â•ΩÊòØSÔºåÂ¶ÇÊûúÊúâÂ§öÂØπÊï∞Â≠óÁöÑÂíåÁ≠â‰∫éSÔºåËæìÂá∫‰∏§‰∏™Êï∞ÁöÑ‰πòÁßØÊúÄÂ∞èÁöÑ„ÄÇ ËæìÂá∫ÊèèËø∞:1ÂØπÂ∫îÊØè‰∏™ÊµãËØïÊ°à‰æãÔºåËæìÂá∫‰∏§‰∏™Êï∞ÔºåÂ∞èÁöÑÂÖàËæìÂá∫„ÄÇ ÊÄùË∑ØÈááÁî®ÂèåÊåáÈíàÁöÑÂÅöÊ≥ïÔºåÈ¶ñÂ∞æÊåáÈíàÔºàlow,highÔºâÔºåÂ¶ÇÊûú‰∏§‰∏™ÊåáÈíàÊâÄÊåáÂêëÁöÑÂÄºÂä†Ëµ∑Êù•Á≠â‰∫ésÔºåÈÇ£‰πàËæìÂá∫ÁªìÊûúÔºåÂ¶ÇÊûúÂ∞è‰∫ésÔºåÈÇ£‰πàlow++,Âê¶Âàôhigh‚Äì; AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution &#123;public: vector&lt;int&gt; FindNumbersWithSum(vector&lt;int&gt; array,int sum) &#123; int low = 0; int high = array.size()-1; vector&lt;int&gt;res; while (low &lt; high) &#123; int temp = array[low] + array[high]; if (temp == sum) &#123; res.push_back(array[low]); res.push_back(array[high]); return res; &#125; else if (temp &gt; sum) high--; else low++; &#125; return res; &#125;&#125;;int main()&#123; vector&lt;int&gt;arr = &#123;1,2,4,7,11,15&#125;; Solution so; vector&lt;int&gt;res = so.FindNumbersWithSum(arr, 15); for (vector&lt;int&gt;::iterator it = res.begin();it != res.end();it++) cout &lt;&lt; *it &lt;&lt; " "; cout &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ËÆ∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Âíå‰∏∫SÁöÑËøûÁª≠Ê≠£Êï∞Â∫èÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%92%8C%E4%B8%BAS%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B0%E5%BA%8F%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Â∞èÊòéÂæàÂñúÊ¨¢Êï∞Â≠¶,Êúâ‰∏ÄÂ§©‰ªñÂú®ÂÅöÊï∞Â≠¶‰Ωú‰∏öÊó∂,Ë¶ÅÊ±ÇËÆ°ÁÆóÂá∫9~16ÁöÑÂíå,‰ªñÈ©¨‰∏äÂ∞±ÂÜôÂá∫‰∫ÜÊ≠£Á°ÆÁ≠îÊ°àÊòØ100„ÄÇ‰ΩÜÊòØ‰ªñÂπ∂‰∏çÊª°Ë∂≥‰∫éÊ≠§,‰ªñÂú®ÊÉ≥Á©∂Á´üÊúâÂ§öÂ∞ëÁßçËøûÁª≠ÁöÑÊ≠£Êï∞Â∫èÂàóÁöÑÂíå‰∏∫100(Ëá≥Â∞ëÂåÖÊã¨‰∏§‰∏™Êï∞)„ÄÇÊ≤°Â§ö‰πÖ,‰ªñÂ∞±ÂæóÂà∞Âè¶‰∏ÄÁªÑËøûÁª≠Ê≠£Êï∞Âíå‰∏∫100ÁöÑÂ∫èÂàó:18,19,20,21,22„ÄÇÁé∞Âú®ÊääÈóÆÈ¢ò‰∫§Áªô‰Ω†,‰Ω†ËÉΩ‰∏çËÉΩ‰πüÂæàÂø´ÁöÑÊâæÂá∫ÊâÄÊúâÂíå‰∏∫SÁöÑËøûÁª≠Ê≠£Êï∞Â∫èÂàó? Good Luck! ËæìÂá∫ÊèèËø∞:1ËæìÂá∫ÊâÄÊúâÂíå‰∏∫SÁöÑËøûÁª≠Ê≠£Êï∞Â∫èÂàó„ÄÇÂ∫èÂàóÂÜÖÊåâÁÖß‰ªéÂ∞èËá≥Â§ßÁöÑÈ°∫Â∫èÔºåÂ∫èÂàóÈó¥ÊåâÁÖßÂºÄÂßãÊï∞Â≠ó‰ªéÂ∞èÂà∞Â§ßÁöÑÈ°∫Â∫è ÊÄùË∑Ø ÈááÁî®Êï∞Â≠¶ÂÖ¨ÂºèÔºåÁ≠âÂ∑ÆÊï∞ÂàóÊ±ÇÂíåÂÖ¨Âºè‰∏∫Ôºö$S_n = n(n+1)/2$ÔºåÂÖ¨Â∑Æ‰∏∫1ÔºåÂõ†‰∏∫$n^2 &lt; (n+1)*n$ÔºåÊâÄ‰ª•$S_n&gt;n^2/2$Ôºå‰πüÂç≥ÊòØ$n &lt; \sqrt{2S_n}$„ÄÇÁÑ∂ÂêéÂØπnËøõË°åÊûö‰∏æÂç≥ÂèØ Á¨¨‰∫åÁßçÊÄùË∑ØÂèØ‰ª•ÈááÁî®ÂèåÊåáÈíàÁöÑÊÄùË∑ØÔºåÁ±ª‰ºº‰∫étcpÂçèËÆÆ‰∏≠ÁöÑÊªëÂä®Á™óÂè£ÔºåÂ¶ÇÊûúlowÂíåhigh‰πãÈó¥ÁöÑÂ∫èÂàóÂíåÂ§ß‰∫ésumÁöÑËØùÔºåÈÇ£‰πàlow++ÔºåÂ¶ÇÊûúÂ∞è‰∫éÁöÑËØùÔºåÈÇ£‰πàhigh++,Á≠â‰∫éÂ∞±ÊòØÊàë‰ª¨Ë¶ÅÁöÑËøûÁª≠Â∫èÂàóÂíå‰∫Ü„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution &#123;public: vector&lt;vector&lt;int&gt; &gt; FindContinuousSequence(int sum) &#123; int low = 1; int high = 2; vector&lt;vector&lt;int&gt;&gt; res; if (sum &lt; 2) return res; else &#123; //Á©∑‰∏æ,ÂèåÊåáÈíàÔºåÊªëÂä®Á™óÂè£ÂÆûÁé∞ while (low &lt; high) &#123; int temp = (low + high) * (high-low + 1)/2; //Á≠âÂ∑ÆÊï∞ÂàóÂÖ¨ÂºèÔºåÂÖ¨Â∑Æ‰∏∫1 if(temp &lt; sum) high++; else if (temp &gt; sum) low++; else &#123; vector&lt;int&gt;list; for (int i = low;i &lt;= high;i++) list.push_back(i); res.push_back(list); low++; //ÂæÄÂâçÁßªÂä® &#125; &#125; return res; &#125; &#125;&#125;;int main()&#123; vector&lt;vector&lt;int&gt;&gt;res; Solution so; res = so.FindContinuousSequence(15); for (vector&lt;vector&lt;int&gt;&gt;::iterator it = res.begin();it != res.end();it++) &#123; vector&lt;int&gt;i = *it; for (vector&lt;int&gt;::iterator j = i.begin();j != i.end();j++) cout &lt;&lt; *j &lt;&lt; " "; cout &lt;&lt; endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ËÆ∫</tag>
        <tag>Êö¥ÂäõÊûö‰∏æ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Êï∞ÁªÑ‰∏≠Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠ó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞‰∏Ä‰∏™Êï¥ÂûãÊï∞ÁªÑÈáåÈô§‰∫Ü‰∏§‰∏™Êï∞Â≠ó‰πãÂ§ñÔºåÂÖ∂‰ªñÁöÑÊï∞Â≠óÈÉΩÂá∫Áé∞‰∫Ü‰∏§Ê¨°„ÄÇËØ∑ÂÜôÁ®ãÂ∫èÊâæÂá∫Ëøô‰∏§‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠ó„ÄÇ ÊÄùË∑Ø È¶ñÂÖàÈúÄË¶ÅÊ≥®ÊÑèÂà∞Êï∞ÁªÑ‰∏≠Âè™Êúâ‰∏§‰∏™Êï∞Â≠óÂá∫Áé∞‰∫Ü‰∏ÄÊ¨°ÔºåÂÖ∂‰ªñÈÉΩÂá∫Áé∞‰∫Ü‰∏§Ê¨° ÂÖ∂Ê¨°ÔºöÂºÇÊàñËøêÁÆóÔºö‰∏§‰∏™Áõ∏ÂêåÁöÑÊï∞Â≠óËøõË°åÂºÇÊàñËøêÁÆóÁ≠â‰∫é0Ôºå0ÂíåÂÖ∂‰ªñÊï∞Â≠óÂºÇÊàñËøêÁÆóÈÉΩÁ≠â‰∫éÂÖ∂‰ªñÊï∞Â≠óÊú¨Ë∫´ Âõ†Ê≠§Â¶ÇÊûúÊàë‰ª¨Â∞ÜÊï∞ÁªÑÊâÄÊúâÁöÑÊï∞Â≠óÂÖ®ÈÉ®ËøõË°åÂºÇÊàñËøêÁÆó‰æãÂ¶ÇÊï∞ÁªÑ{2, 4, 3, 6, 3, 2, 5, 5}Ôºå‰πüÂ∞±ÊòØ2^4^3^6^3^3^2^5^5 = 0010ÔºåÂºÇÊàñÁöÑÁªìÊûúËÇØÂÆöÊòØ‰ºöÂá∫Áé∞‰∏Ä‰∏™1ÊàñËÄÖÂ§ö‰∏™1‰ª•‰∏äÔºåÂõ†‰∏∫ÂºÇÊàñÁöÑÁªìÊûúÊòØÁî±‰∏§‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠óÂÜ≥ÂÆöÁöÑÔºåÂÖ∂‰ªñÂá∫Áé∞‰∏§Ê¨°ÁöÑÊï∞Â≠óËøêÁÆóÂêéÈÉΩ‰∏∫0ÔºåÂØπÁªìÊûúÊ≤°ÊúâÂΩ±Âìç„ÄÇÂØπ‰∫éÂá∫Áé∞Â§ö‰∏™1ÁöÑÈóÆÈ¢òÔºåÊàë‰ª¨ÂèØ‰ª•‰ªéÂè≥ËæπÂºÄÂßãÔºåÊâæÂà∞Á¨¨‰∏Ä‰∏™1ÁöÑ‰∏ãÊ†áÔºà‰ªéÂ∑¶ËæπÂºÄÂßã‰πüÊòØÂèØ‰ª•ÁöÑÔºâÔºåÂõ†Ê≠§ÈÄöËøáÂà§Êñ≠Êï∞ÁªÑ‰∏≠ÊØè‰∏Ä‰∏™Êï∞Â≠óÁöÑ‰∏ãÊ†áÊòØÂê¶‰∏∫1Êàñ‰∏∫0Ôºå‰ªéÂàÜÊàê‰∏§‰∏™‰∏çÂêåÁöÑÊï∞ÁªÑÔºà‰æãÂ¶Ç‰∏ä‰æãÔºö{2,2,6,3,3}Âíå{4,5,5}ÔºâÔºåËøôÊ†∑‰∏§‰∏™Êï∞ÁªÑÂ∞±ÂêÑËá™Êúâ‰∏Ä‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠óÔºåËøôÊ†∑ÊòØÂøÖÁÑ∂ÁöÑÔºåÂõ†‰∏∫Êàë‰ª¨ÊòØÊ†πÊçÆÂºÇÊàñÁªìÊûú‰∏≠ÁöÑ1ÁöÑ‰∏ãÊ†áËøõË°åÂàÜÁ±ªÁöÑÔºå‰æãÂ¶ÇÂÅáËÆæÂè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠ó‰∏∫1Âíå3ÔºåÈÇ£‰πàÂºÇÊàñËøêÁÆóÂ∞±ÊòØ010‰∫ÜÔºåËøô‰∏™1ÁöÑ‰ΩçÁΩÆ‰πüÂ∞±ÊòØÂ∞Ü‰∫åËøõÂà∂Á¨¨‰∫å‰ΩçÁöÑÂà§Êñ≠Â∞Ü1Âíå3ÂàÜÁ±ªÂºÄ‰∫Ü„ÄÇ ÊúÄÂêéÊ±Ç‰∏§‰∏™Êï∞ÁªÑÁöÑÂºÇÊàñÁªìÊûúÂ∞±ÊòØÂá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠ó Ê≥®ÊÑèÈóÆÈ¢òÔºö ==‰ºòÂÖàÁ∫ßÊØî&amp;Â§ßÔºåÂáΩÊï∞ÂèÇÊï∞‰º†ÊåáÈíàÔºåË∞ÉÁî®Êó∂ÈúÄË¶Å‰º†Âú∞ÂùÄ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: void FindNumsAppearOnce(vector&lt;int&gt; data, int *num1, int *num2) &#123; int all_numbers_xo = 0; //ÊâÄÊúâÊï∞Â≠óËøõË°åÂºÇÊàñËøêÁÆóÁöÑÁªìÊûú for (int i = 0; i &lt; data.size(); i++) all_numbers_xo ^= data[i]; //ÁªìÊûúÊòØ‰∏Ä‰∏™‰∫åËøõÂà∂Êï∞ÔºåËá≥Â∞ëÂ≠òÂú®‰∏Ä‰∏™1ÊàñÂ§ö‰∏™1ÔºåÊàë‰ª¨ÂèØ‰ª•‰ªéÂè≥ËæπÂºÄÂßãÊâæÂà∞Á¨¨‰∏Ä‰∏™1ÁöÑ‰∏ãÊ†áÔºà‰πüÂèØ‰ª•‰ªéÂ∑¶ËæπÔºâ int index = 1; while ((all_numbers_xo &amp; index) == 0) &#123; index &lt;&lt;= 1; //Â∑¶Áßª // all_numbers_xo &gt;&gt;= 1; //Âè≥Áßª &#125; //Ê†πÊçÆÊï∞ÁªÑ‰∏≠ÁöÑÊï∞Â≠óÁöÑindex‰ΩçÊòØÂê¶‰∏∫1ÊàñËÄÖ0ÂàÜ‰∏∫‰∏§‰∏™Êï∞ÁªÑ,Âõ†‰∏∫ÂØπËøô‰∏™index‰∏∫1ÊàñËÄÖ‰∏∫0ÊúâÂΩ±ÂìçÁöÑÊòØ‰∏§‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠ó //Âõ†Ê≠§‰ªéËøô‰∏™‰∏§‰∏™Êï∞ÁªÑÂ∞±ÂèØ‰ª•ÂêÑËá™Ê±ÇÂá∫ÂêÑËá™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÊï∞Â≠óÔºåËøõË°åÂºÇÊàñÊìç‰ΩúÂç≥ÂèØ *num1 = *num2 = 0; for (int i = 0; i &lt; data.size(); i++) &#123;//Âà§Êñ≠Êù°‰ª∂‰∏çËÉΩÂÜôÊàê==1 if ((data[i] &amp; index) != 0) //ËØ¥ÊòéËøô‰∏™Êï∞Â≠óÊòØÂ±û‰∫éindex‰∏∫1ÁöÑÊï∞ÁªÑÁöÑ *num1 ^= data[i]; else *num2 ^= data[i]; &#125; &#125;&#125;;int main()&#123; vector&lt;int&gt; data = &#123;2, 4, 3, 6, 3, 2, 5, 5&#125;; int num1, num2; Solution so; so.FindNumsAppearOnce(data, &amp;num1, &amp;num2); cout &lt;&lt; num1 &lt;&lt; " " &lt;&lt; num2 &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Âπ≥Ë°°‰∫åÂèâÊ†ë]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏ÄÊ£µ‰∫åÂèâÊ†ëÔºåÂà§Êñ≠ËØ•‰∫åÂèâÊ†ëÊòØÂê¶ÊòØÂπ≥Ë°°‰∫åÂèâÊ†ë„ÄÇ ÊÄùË∑Ø Âπ≥Ë°°‰∫åÂèâÊ†ëÔºàBalanced Binary TreeÔºâÂÖ∑Êúâ‰ª•‰∏ãÊÄßË¥®ÔºöÂÆÉÊòØ‰∏ÄÊ£µÁ©∫Ê†ëÊàñÂÆÉÁöÑÂ∑¶Âè≥‰∏§‰∏™Â≠êÊ†ëÁöÑÈ´òÂ∫¶Â∑ÆÁöÑÁªùÂØπÂÄº‰∏çË∂ÖËøá1ÔºåÂπ∂‰∏îÂ∑¶Âè≥‰∏§‰∏™Â≠êÊ†ëÈÉΩÊòØ‰∏ÄÊ£µÂπ≥Ë°°‰∫åÂèâÊ†ë„ÄÇ Â¶ÇÊûú‰ªéÊ†πËäÇÁÇπÂºÄÂßãÈÅçÂéÜÔºåÁÑ∂ÂêéÈÄíÂΩíÈÅçÂéÜÂ∑¶Â≠êÊ†ëÂíåÂè≥Â≠êÊ†ëÔºåÈÇ£‰πà‰ºöÂá∫Áé∞ÈáçÂ§çÁöÑÈÅçÂéÜ Âõ†Ê≠§ÔºåÊàë‰ª¨‰ªé‰∏ãÂæÄ‰∏äÈÅçÂéÜÔºå‰πüÂç≥ÊòØÂêéÂ∫èÈÅçÂéÜÔºåËøôÈáåÂèØ‰ª•Êúâ‰∏Ä‰∏™Ââ™ÊûùÔºåÂΩìÂèëÁé∞Â≠êÊ†ë‰∏çÊòØbbtÁöÑÊó∂ÂÄôÔºåÂ∞±Áõ¥Êé•ËøîÂõû-1ÔºåËøôÊ†∑Â≠êÂ∞±‰∏çÁî®Âú®ÂæÄ‰∏äÈÅçÂéÜ‰∫Ü„ÄÇÈÇ£‰πà‰ªÄ‰πàÊó∂ÂÄôÂ∫îËØ•ËøîÂõû-1Ôºå‰πüÂ∞±ÊòØÂΩìËøô‰∏™Â≠êÊ†ëÁöÑÂ∑¶Âè≥È´òÂ∫¶Â∑ÆÂ§ß‰∫é1Êó∂Â∞±ËøîÂõû-1ÔºåÂê¶ÂàôÂ∞±ËøîÂõûËøô‰∏™Â≠êÊ†ëÁöÑÈ´òÂ∫¶„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021class Solution &#123;public: bool IsBalanced_Solution(TreeNode* pRoot) &#123; if (pRoot == NULL) return true; return f(pRoot) != -1; &#125; int f(TreeNode * pRoot) &#123; if (pRoot == NULL) return 0; //Ââ™Êûù int left = f(pRoot-&gt;left); if (left == -1) //Â∑¶Â≠êÊ†ë‰∏çÊòØbbt return -1; int right = f(pRoot-&gt;right); if (right == -1) return -1; return abs(left-right)&gt;1?-1:1+max(left, right);//Â¶ÇÊûúÂ∑ÆÂÄºÂ§ß‰∫é1ÔºåËØ¥Êòé‰∏çÊòØbbtÔºåËøîÂõû-1 &#125;&#125;;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>‰∫åÂèâÊ†ë</tag>
        <tag>Ââ™Êûù</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Êï∞Â≠óÂú®ÊéíÂ∫èÊï∞ÁªÑ‰∏≠Âá∫Áé∞ÁöÑÊ¨°Êï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÁªüËÆ°‰∏Ä‰∏™Êï∞Â≠óÂú®ÊéíÂ∫èÊï∞ÁªÑ‰∏≠Âá∫Áé∞ÁöÑÊ¨°Êï∞„ÄÇ ÊÄùË∑Ø È¶ñÂÖàÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÔºåËøô‰∏™Êï∞ÁªÑÊòØÈÄíÂ¢ûËøòÊòØÈÄíÂáèÔºå‰∏çËøáÊµãËØïÊ†∑‰æãÈÉΩÊòØÈÄíÂ¢ûÁöÑ‚Ä¶. ÊéíÂ∫èÁöÑÊï∞ÁªÑÊàë‰ª¨Â∫îËØ•Ë¶ÅÊÉ≥Âà∞‰∫åÂàÜÊü•ÊâæÔºåÂè™‰∏çËøáÂ¶ÇÊûúÊàë‰ª¨ÈÄöËøá‰∫åÂàÜÊü•ÊâæÊâæÂà∞Á¨¨‰∏Ä‰∏™k‰∏çËÉΩ‰øùËØÅËøô‰∏™kÊòØÁ¨¨‰∏Ä‰∏™ÊàñËÄÖÊúÄÂêé‰∏Ä‰∏™ÔºåËøôÊ†∑‰Ω†ËøòÊòØÈÄöËøáËøô‰∏™kÁöÑ‰ΩçÁΩÆ‰ªéÂâç‰ªéÂêéËøõË°åÈ°∫Â∫èÊü•ÊâæÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÈÄÄÂåñ‰∏∫$O(n)$ÔºåË∑üÊôÆÈÄöÁöÑÈ°∫Â∫èÊü•ÊâæÂ∞±Ê≤°‰ªÄ‰πà‰∏çÂêåÁöÑ ÈÇ£‰πàÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøá‰∫åÂàÜÊü•ÊâæÊâæÂà∞Á¨¨‰∏Ä‰∏™KÂíåÊúÄÂêé‰∏Ä‰∏™kÁöÑ‰∏ãÊ†áÔºåÁÑ∂Âêé‰∏§ËÄÖ‰πãÂ∑ÆÂ∞±ÊòØÂá∫Áé∞ÁöÑÊ¨°Êï∞ Â¶ÇÊûúÊâæÂà∞Á¨¨‰∏Ä‰∏™ÂíåÊúÄÂêé‰∏Ä‰∏™kÔºå‰πüÊòØÂèØ‰ª•ÈÄöËøá‰∫åÂàÜÊü•ÊâæËøõË°åÔºåÂÖ≥ÈîÆÂú®‰∫éÂΩìÊàë‰ª¨ÊâæÂà∞kÊó∂Âè™ÈúÄË¶ÅÂà§Êñ≠‰ªñÊòØ‰∏çÊòØÊúÄÂêé‰∏Ä‰∏™kÊàñËÄÖÁ¨¨‰∏Ä‰∏™kÂç≥ÂèØÔºåÂ¶ÇÊûú‰∏çÊòØÔºåÂàôÂå∫Èó¥ËøõË°åÊõ¥Êñ∞„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(\log n)$„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960class Solution &#123;public: int GetNumberOfK(vector&lt;int&gt; data ,int k) &#123; int count = 0; if (data.size() &gt; 0) &#123; int begin = first_index(data,k); int last = last_index(data,k); if (begin &gt; -1 &amp;&amp; last &gt; -1) count = last-begin+1; &#125; return count; &#125; //ÂâçÊèêÊòØËøô‰∏™Êï∞ÁªÑÊòØÈÄíÂ¢ûÁöÑ int first_index(vector&lt;int&gt; data,int k) &#123;//ÊâæÂà∞Á¨¨‰∏Ä‰∏™k int low = 0; int high = data.size()-1; while (low &lt;= high) &#123; int mid = low + (high-low)/2;//Èò≤Ê≠¢Ê∫¢Âá∫ if (data[mid] == k) //Âà§Êñ≠Ê≠§Êó∂Ëøô‰∏™kÊòØ‰∏çÊòØÁ¨¨‰∏Ä‰∏™k &#123; if(data[mid-1] != k &amp;&amp; mid &gt; 0 || mid == 0) return mid; else high = mid-1;//‰∏çÊòØÁ¨¨‰∏Ä‰∏™kÔºåËØ¥ÊòéÁ¨¨‰∏Ä‰∏™kÂú®midÂâçÈù¢ &#125; else if (data[mid] &gt; k) high = mid -1; else low = mid + 1; &#125; return -1; //Ê≤°ÊúâÊâæÂà∞ &#125; int last_index(vector&lt;int&gt;data, int k) &#123;//ÊâæÂà∞ÊúÄÂêé‰∏Ä‰∏™K int low = 0; int high = data.size()-1; while (low &lt;= high) &#123; int mid = low + (high-low)/2; if (data[mid] == k) //Âà§Êñ≠ÊòØ‰∏çÊòØÊúÄÂêé‰∏Ä‰∏™k &#123; //Âà§Êñ≠ÊòØÂê¶Ë∂äÁïå if (data[mid+1] != k &amp;&amp; mid+1 &lt;= data.size()-1 || mid == data.size()-1) return mid; else low = mid + 1; &#125; else if (data[mid] &gt; k) high = mid-1; else low = mid + 1; &#125; return -1; &#125;&#125;; ÊÄªÁªì ÂØπ‰∫éÊéíÂ∫èÁöÑÊï∞ÁªÑÁöÑÊü•ÊâæÔºåÂ∫îËØ•ÊÉ≥Âà∞‰ΩøÁî®‰∫åÂàÜÊü•Êâæ ‰∫åÂàÜÊü•ÊâæÈúÄË¶ÅÊ≥®ÊÑèÁöÑÁªÜËäÇÂ∞±ÊòØÈò≤Ê≠¢Ê∫¢Âá∫Ôºöint mid = low + (high-low)/2;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
        <tag>‰∫åÂàÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∏§‰∏™ÈìæË°®ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖ¨ÂÖ±ÁªìÁÇπ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E7%BB%93%E7%82%B9%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏§‰∏™ÈìæË°®ÔºåÊâæÂá∫ÂÆÉ‰ª¨ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖ¨ÂÖ±ÁªìÁÇπ„ÄÇÔºàÊ≥®ÊÑèÂõ†‰∏∫‰º†ÂÖ•Êï∞ÊçÆÊòØÈìæË°®ÔºåÊâÄ‰ª•ÈîôËØØÊµãËØïÊï∞ÊçÆÁöÑÊèêÁ§∫ÊòØÁî®ÂÖ∂‰ªñÊñπÂºèÊòæÁ§∫ÁöÑÔºå‰øùËØÅ‰º†ÂÖ•Êï∞ÊçÆÊòØÊ≠£Á°ÆÁöÑÔºâ ÊÄùË∑Ø Á¨¨‰∏ÄÁßçÊÄùË∑ØÂ∞±ÊòØÈÅçÂéÜ‰∏Ä‰∏™ÈìæË°®ÁöÑËäÇÁÇπÔºåÁÑ∂ÂêéË∑üÂè¶‰∏Ä‰∏™ÈìæË°®ÁöÑÊâÄÊúâËäÇÁÇπÊØîËæÉÊòØÂê¶Áõ∏ÂêåÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(m*n)$ÔºåÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(1)$Ôºõ Á¨¨‰∫åÁßçÊÄùË∑ØÔºöÁî±‰∫éËøô‰∏§‰∏™ÈìæË°®ÊòØÂçïÂêëÈìæË°®ÔºåÈÇ£‰πàËøô‰∏§‰∏™ÈìæË°®ÂΩìÊúâÁõ∏ÂêåÁöÑËäÇÁÇπÊó∂ÔºåÂú®Ëøô‰∏™Áõ∏ÂêåËäÇÁÇπÁöÑÂêéÈù¢ÈÉΩÊòØÁõ∏ÂêåÁöÑËäÇÁÇπÔºåÂõ†‰∏∫ÊòØÂçïÂêëÔºåÂè™Êúâ‰∏Ä‰∏™nextÔºåÈÇ£‰πàÊàë‰ª¨‰ªéÂêéÂæÄÂâçÈÅçÂéÜÔºåË¶ÅÊ±ÇÁöÑÁ¨¨‰∏Ä‰∏™Áõ∏ÂêåÁöÑËäÇÁÇπ‰πüÂ∞±ÊòØÈÅçÂéÜËøáÁ®ã‰∏≠ÈÅáÂà∞ÁöÑÊúÄÂêé‰∏Ä‰∏™Áõ∏ÂêåÁöÑËäÇÁÇπÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®‰∏§‰∏™ËæÖÂä©Ê†àÔºåÂ≠òÊîæËøô‰∏™ÈìæË°®ÁöÑÊâÄÊúâÁöÑËäÇÁÇπÔºåÊØîËæÉÊ†àÈ°∂ÂÖÉÁ¥†ÊòØÂê¶Áõ∏ÂêåÔºåÂ¶ÇÊûúÁõ∏ÂêåÂ∞±ÂºπÂá∫ÔºåÊØîËæÉ‰∏ã‰∏Ä‰∏™Ê†àÈ°∂ÂÖÉÁ¥†ÊòØÂê¶Áõ∏ÂêåÔºåÁõ¥Âà∞ÊâæÂà∞ÊúÄÂêé‰∏Ä‰∏™Áõ∏ÂêåÁöÑËäÇÁÇπÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n+m)$ÔºåÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(m+n)$Ôºõ Á¨¨‰∏âÁßçÊÄùË∑ØÔºöÂ¶ÇÊûúÊàë‰ª¨ÈááÁî®‰ªéÂ§¥Âà∞Â∞æÁöÑÈÅçÂéÜÊñπÂºèÔºåÂØπ‰∫éËøô‰∏™‰∏§‰∏™ÈïøÂ∫¶ÂèØËÉΩ‰∏çÂêåÁöÑÈìæË°®Êàë‰ª¨ÈúÄË¶Å‰øùËØÅ‰ªñ‰ª¨ËÉΩÂ§üÂêåÊó∂ÈÅçÂéÜÂà∞Â∞æÈÉ®ÔºåÈÇ£‰πàÊàë‰πàÂèØ‰ª•ÂèØ‰ª•ËÆ°ÁÆóÂá∫ÈìæË°®ÁöÑÈïøÂ∫¶ÔºåÁÑ∂ÂêéÂÖàËÆ©ÈïøÈìæË°®ÂÖàËµ∞ÔºåËøôÊ†∑‰øùËØÅÈìæË°®ÁöÑÈÅçÂéÜËÉΩÂ§üÂêåÊó∂Âà∞ËææÂ∞æÈÉ®ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(m+n)$ÔºåÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(1)$. AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576class Solution&#123;public: ListNode *FindFirstCommonNode(ListNode *pHead1, ListNode *pHead2) &#123; if (pHead1 == NULL || pHead2 == NULL) return NULL; ListNode *res = NULL; stack&lt;ListNode *&gt; s1; stack&lt;ListNode *&gt; s2; while (pHead1) &#123; s1.push(pHead1); pHead1 = pHead1-&gt;next; &#125; while (pHead2) &#123; s2.push(pHead2); pHead2 = pHead2-&gt;next; &#125; while (!s1.empty() &amp;&amp; !s2.empty()) &#123; if (s1.top() == s2.top()) &#123; res = s1.top(); &#125; s1.pop(); s2.pop(); &#125; return res; &#125; ListNode *f(ListNode *pHead1, ListNode *pHead2) &#123; if (pHead1 == NULL || pHead2 == NULL) return NULL; int len1 = 0; int len2 = 0; ListNode * p1 = pHead1; ListNode * p2 = pHead2; while (p1) &#123; len1++; p1 = p1-&gt;next; &#125; while (p2) &#123; len2++; p2 = p2-&gt;next; &#125; if (len1 &gt; len2) &#123; int diff = len1 - len2; for (int i = 0; i &lt; diff; i++) pHead1 = pHead1-&gt;next; &#125; else &#123; int diff = len2 - len1; for (int i = 0; i &lt; diff; i++) pHead2 = pHead2-&gt;next; &#125; ListNode *res = NULL; //ËøôÊ†∑‰øùËØÅ‰∏§‰∏™ÈìæË°®ÂèØ‰ª•ÂêåÊó∂ÈÅçÂéÜÂà∞Â∞æÈÉ® while (pHead1 &amp;&amp; pHead2) &#123; if (pHead1 == pHead2) &#123; res = pHead1; break; &#125; pHead1 = pHead1-&gt;next; pHead2 = pHead2-&gt;next; &#125; return res; &#125;&#125;;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Êï∞ÁªÑ‰∏≠ÁöÑÈÄÜÂ∫èÂØπ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%80%86%E5%BA%8F%E5%AF%B9%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Âú®Êï∞ÁªÑ‰∏≠ÁöÑ‰∏§‰∏™Êï∞Â≠óÔºåÂ¶ÇÊûúÂâçÈù¢‰∏Ä‰∏™Êï∞Â≠óÂ§ß‰∫éÂêéÈù¢ÁöÑÊï∞Â≠óÔºåÂàôËøô‰∏§‰∏™Êï∞Â≠óÁªÑÊàê‰∏Ä‰∏™ÈÄÜÂ∫èÂØπ„ÄÇËæìÂÖ•‰∏Ä‰∏™Êï∞ÁªÑ,Ê±ÇÂá∫Ëøô‰∏™Êï∞ÁªÑ‰∏≠ÁöÑÈÄÜÂ∫èÂØπÁöÑÊÄªÊï∞P„ÄÇÂπ∂Â∞ÜPÂØπ1000000007ÂèñÊ®°ÁöÑÁªìÊûúËæìÂá∫„ÄÇ Âç≥ËæìÂá∫P%1000000007 ËæìÂÖ•ÊèèËø∞:1È¢òÁõÆ‰øùËØÅËæìÂÖ•ÁöÑÊï∞ÁªÑ‰∏≠Ê≤°ÊúâÁöÑÁõ∏ÂêåÁöÑÊï∞Â≠óÊï∞ÊçÆËåÉÂõ¥Ôºö ÂØπ‰∫é%50ÁöÑÊï∞ÊçÆ,size&lt;=10^4 ÂØπ‰∫é%75ÁöÑÊï∞ÊçÆ,size&lt;=10^5 ÂØπ‰∫é%100ÁöÑÊï∞ÊçÆ,size&lt;=2*10^5 Á§∫‰æã1 ËæìÂÖ•11,2,3,4,5,6,7,0 ËæìÂá∫17 ÊÄùË∑Ø‰ΩøÁî®ÂΩíÂπ∂ÊéíÂ∫èÔºåÂØπÊï∞ÁªÑ‰∏≠ÁöÑ‰∏§‰∏™Âå∫Èó¥ËøõË°åÊØîËæÉÊéíÂ∫èÁöÑÊó∂ÂÄôÂ∞±ÊòØÁªüËÆ°ÈÄÜÂ∫èÂØπÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØËøô‰∏™‰∏§‰∏™Âå∫Èó¥Â∑≤ÁªèÊòØÈ°∫Â∫èÁöÑÔºå‰∏îÊòØ‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫èÁöÑÔºåÂÖ∑‰ΩìÊÄùÊÉ≥Êü•Áúã‰∏™‰∫∫ÂçöÂÆ¢ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: int InversePairs(vector&lt;int&gt; data) &#123; long long res = 0; solve(0, data.size() - 1, data, res); return res % 1000000007; &#125; void solve(int low, int high, vector&lt;int&gt; &amp;data, long long &amp;res) //Ê≥®ÊÑèdata,resË¶Å‰º†ÂºïÁî® &#123; if (low &lt; high) &#123; int mid = (low + high) / 2; solve(low, mid, data, res); solve(mid + 1, high, data, res); merge_sort(low, high, mid, data, res); &#125; &#125; void merge_sort(int begin, int end, int mid, vector&lt;int&gt; &amp;data, long long &amp;res) //Ê≥®ÊÑèdata,resË¶Å‰º†ÂºïÁî® &#123; int temp[200004]; //ËæÖÂä©Êï∞ÁªÑÔºåÂ∞ÜÂéüÊù•ÁöÑÊï∞ÁªÑÊãçÂ•ΩÂ∫èÂ§çÂà∂Âà∞temp‰∏≠ int i = begin; int j = mid + 1; int k = begin; //ËæÖÂä©Êï∞ÁªÑÁöÑÁ¥¢Âºï while (i &lt;= mid &amp;&amp; j &lt;= end) &#123; if (data[i] &gt; data[j]) //‰Ωé‰ΩçÂ§ß‰∫éÈ´ò‰Ωç,ÂèØ‰ª•ËÆ∞ÂΩïÈÄÜÂ∫èÂØπ &#123; res = res + end - j + 1; //Âõ†‰∏∫‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫èÁöÑÔºåÂ¶ÇÊûú‰Ωé‰ΩçÁöÑÊï∞Â§ß‰∫éÈ´ò‰ΩçÔºåÈÇ£‰πàÂΩìÂâçÁöÑÊï∞ËÇØÂÆöÂ§ß‰∫éÈ´ò‰ΩçÂêéÈù¢ÁöÑÊï∞ temp[k++] = data[i++]; &#125; else temp[k++] = data[j++]; &#125; //Â∞ÜÂâ©‰ΩôÁöÑÊï∞Â§çÂà∂Âà∞tempÊï∞ÁªÑÁöÑÂêéÈù¢ while (i &lt;= mid) temp[k++] = data[i++]; while (j &lt;= end) temp[k++] = data[j++]; //Êõ¥Êñ∞dataÊï∞ÁªÑ for (int i = begin; i &lt;= end; i++) &#123; data[i] = temp[i]; //Ê≥®ÊÑèÔºåÊàë‰ª¨ÁöÑtempÊï∞ÁªÑÊòØ‰ªék = beginÂºÄÂßãÊìç‰ΩúÁöÑ &#125; &#125;&#125;;int main()&#123; vector&lt;int&gt; data = &#123;1, 2, 3, 4, 5, 6, 7, 0&#125;; Solution so; cout &lt;&lt; so.InversePairs(data) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Á¨¨‰∏Ä‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÂ≠óÁ¨¶]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Âú®‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤(0&lt;=Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶&lt;=10000ÔºåÂÖ®ÈÉ®Áî±Â≠óÊØçÁªÑÊàê)‰∏≠ÊâæÂà∞Á¨¨‰∏Ä‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÂ≠óÁ¨¶,Âπ∂ËøîÂõûÂÆÉÁöÑ‰ΩçÁΩÆ, Â¶ÇÊûúÊ≤°ÊúâÂàôËøîÂõû -1ÔºàÈúÄË¶ÅÂå∫ÂàÜÂ§ßÂ∞èÂÜôÔºâ ÊÄùË∑ØÂìàÂ∏åË°® AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536#include &lt;iostream&gt;using namespace std;class Solution&#123;public: int FirstNotRepeatingChar(string str) &#123; if (str.size() == 0) return -1; int table[256]; for (int i = 0; i &lt; 256; i++) table[i] = 0; for (int i = 0; i &lt; str.size(); i++) &#123; table[str[i]]++; &#125; for (int i = 0; i &lt; str.size(); i++) &#123; if (table[str[i]] == 1) &#123; return i; &#125; &#125; return -1; &#125;&#125;;int main()&#123; string str = "googgle"; Solution so; cout &lt;&lt; so.FirstNotRepeatingChar(str) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∏ëÊï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%B8%91%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÊääÂè™ÂåÖÂê´Ë¥®Âõ†Â≠ê2„ÄÅ3Âíå5ÁöÑÊï∞Áß∞‰Ωú‰∏ëÊï∞ÔºàUgly NumberÔºâ„ÄÇ‰æãÂ¶Ç6„ÄÅ8ÈÉΩÊòØ‰∏ëÊï∞Ôºå‰ΩÜ14‰∏çÊòØÔºåÂõ†‰∏∫ÂÆÉÂåÖÂê´Ë¥®Âõ†Â≠ê7„ÄÇ ‰π†ÊÉØ‰∏äÊàë‰ª¨Êää1ÂΩìÂÅöÊòØÁ¨¨‰∏Ä‰∏™‰∏ëÊï∞„ÄÇÊ±ÇÊåâ‰ªéÂ∞èÂà∞Â§ßÁöÑÈ°∫Â∫èÁöÑÁ¨¨N‰∏™‰∏ëÊï∞„ÄÇ ÊÄùË∑Ø AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;vector&gt;using namespace std;/*bool checked(int n)&#123; while (n % 2 == 0) n = n / 2; while (n % 3 == 0) n = n / 3; while (n % 5 == 0) n = n / 5; if (n == 1) return true; else return false;&#125;class Solution&#123;public: int GetUglyNumber_Solution(int index) &#123; int res; if (index &lt;=0) return 0; int number = 1; int temp = 1; while (temp &lt;= index) &#123; if (checked(number)) &#123; temp++; &#125; number++; &#125; return number-1; &#125;&#125;;*/class Solution&#123;public: int GetUglyNumber_Solution(int index) &#123; if (index &lt; 7) return index; int p2 = 0; //Áª¥Êä§‰∏â‰∏™ÈòüÂàóÁöÑÊåáÈíà int p3 = 0; int p5 = 0; vector&lt;int&gt; res; int new_number = 1; res.push_back(new_number); while (res.size() &lt; index) &#123; new_number = min(res[p2]*2, min(res[p3]*3, res[p5]*5)); if (res[p2]*2 == new_number) p2++; if (res[p3]*3 == new_number) p3++; if (res[p5]*5 == new_number) p5++; res.push_back(new_number); &#125; return res[index - 1]; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.GetUglyNumber_Solution(7); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ËÆ∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊääÊï∞ÁªÑÊéíÊàêÊúÄÂ∞èÁöÑÊï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Ê≠£Êï¥Êï∞Êï∞ÁªÑÔºåÊääÊï∞ÁªÑÈáåÊâÄÊúâÊï∞Â≠óÊãºÊé•Ëµ∑Êù•ÊéíÊàê‰∏Ä‰∏™Êï∞ÔºåÊâìÂç∞ËÉΩÊãºÊé•Âá∫ÁöÑÊâÄÊúâÊï∞Â≠ó‰∏≠ÊúÄÂ∞èÁöÑ‰∏Ä‰∏™„ÄÇ‰æãÂ¶ÇËæìÂÖ•Êï∞ÁªÑ{3Ôºå32Ôºå321}ÔºåÂàôÊâìÂç∞Âá∫Ëøô‰∏â‰∏™Êï∞Â≠óËÉΩÊéíÊàêÁöÑÊúÄÂ∞èÊï∞Â≠ó‰∏∫321323„ÄÇ ÊÄùË∑Ø È¶ñÂÖàintÁ±ªÂûã‰∏çÂ•ΩÊØîËæÉ‚ÄúÂ§ßÂ∞è‚Äù, ÂÖ∂Ê¨°ÊãºÊé•ÁöÑÊï∞Â≠ó‰∏çÁü•ÈÅìintËÉΩ‰∏çËÉΩÂ≠ò‰∏ã,ËÄå‰∏îÁªìÊûú‰πüÊòØreturn string ÊâÄ‰ª•Â∞ÜintËΩ¨Êç¢‰∏∫stringÔºåÁÑ∂ÂêéÂØπstringËøõË°åÊéíÂ∫èÔºåÁî±‰∫é‰∏çËÉΩ‰øùËØÅstring‰πãÈó¥ÁöÑÈïøÂ∫¶Áõ∏ÂêåÔºåÈÇ£‰πàÂ∞Ü‰∏§‰∏™Â≠óÁ¨¶‰∏≤Âä†Ëµ∑Êù•Â∞±‰øùËØÅÊéíÂ∫èÁöÑÁÆÄÂçïÂÆûÁé∞„ÄÇ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;#include &lt;string.h&gt;using namespace std;bool tmp(string a, string b)&#123; return (a+b) &lt; (b+a); //Â¶ÇÊûúÂ∞±‰∏çÁî®Á∫†Áªìstring.size()‰∏çÂêåÁöÑÈóÆÈ¢ò==&gt; ‰æãÂ¶Ç 3 32 34&#125;class Solution&#123;public: string PrintMinNumber(vector&lt;int&gt; numbers) &#123; vector&lt;string&gt;arr; for (int i = 0; i &lt; numbers.size(); i++) &#123; arr.push_back(to_string(numbers[i])); //int ËΩ¨Êç¢‰∏∫ string &#125; sort(arr.begin(), arr.end(), tmp); string res = ""; for (vector&lt;string&gt;::iterator it = arr.begin(); it != arr.end(); it++) &#123; // cout &lt;&lt; *it &lt;&lt; endl; res += *it; &#125; return res; &#125;&#125;;int main()&#123; vector&lt;int&gt; numbers = &#123;32, 3, 321&#125;; Solution so; /* ‰∏çËÉΩÂØπ‰∏Ä‰∏™Á©∫ÁöÑvectorÁõ¥Êé•ËµãÂÄºÔºåÂè™ËÉΩPush_back int i = 0; vector&lt;string&gt;tmp; tmp.push_back("hello"); tmp[0] = to_string(numbers[0]); cout &lt;&lt; tmp[0]; */ cout &lt;&lt; so.PrintMinNumber(numbers) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Êï∞Â≠ó‰∏≠Âá∫Áé∞1ÁöÑÊ¨°Êï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%95%B0%E5%AD%97%E4%B8%AD%E5%87%BA%E7%8E%B01%E7%9A%84%E6%AC%A1%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Ê±ÇÂá∫1~13ÁöÑÊï¥Êï∞‰∏≠1Âá∫Áé∞ÁöÑÊ¨°Êï∞,Âπ∂ÁÆóÂá∫100~1300ÁöÑÊï¥Êï∞‰∏≠1Âá∫Áé∞ÁöÑÊ¨°Êï∞Ôºü‰∏∫Ê≠§‰ªñÁâπÂà´Êï∞‰∫Ü‰∏Ä‰∏ã1~13‰∏≠ÂåÖÂê´1ÁöÑÊï∞Â≠óÊúâ1„ÄÅ10„ÄÅ11„ÄÅ12„ÄÅ13Âõ†Ê≠§ÂÖ±Âá∫Áé∞6Ê¨°,‰ΩÜÊòØÂØπ‰∫éÂêéÈù¢ÈóÆÈ¢ò‰ªñÂ∞±Ê≤°Ëæô‰∫Ü„ÄÇACMerÂ∏åÊúõ‰Ω†‰ª¨Â∏ÆÂ∏Æ‰ªñ,Âπ∂ÊääÈóÆÈ¢òÊõ¥Âä†ÊôÆÈÅçÂåñ,ÂèØ‰ª•ÂæàÂø´ÁöÑÊ±ÇÂá∫‰ªªÊÑèÈùûË¥üÊï¥Êï∞Âå∫Èó¥‰∏≠1Âá∫Áé∞ÁöÑÊ¨°Êï∞Ôºà‰ªé1 Âà∞ n ‰∏≠1Âá∫Áé∞ÁöÑÊ¨°Êï∞Ôºâ„ÄÇ ÊÄùË∑Ø Â¶ÇÊûúÂØπÊØè‰∏™Êï∞ÈÉΩËøõË°åÂà§Êñ≠Ôºå‰πüÂ∞±ÊòØÈÄöËøáËÆ°ÁÆóÂæóÂà∞‰∏Ä‰∏™Êï∞ÁöÑÊØè‰∏Ä‰∏™‰ΩçÊòØÂê¶‰∏∫1ÔºåËøôÊ†∑Â§çÊùÇÂ∫¶Â§™Â§ß ÊâæËßÑÂæãÔºö ‰∏™‰Ωç Âá∫Áé∞1ÁöÑÊ¨°Êï∞Êù•ËØ¥ÔºåËßÑÂæã‰∏∫Ôºöres = (n/10)*1 + (n % 10 != 0? 1:0)Ôºõ‰æãÂ¶ÇÂØπ‰∫éÊï∞Â≠ó33Êù•ËØ¥Ôºå1~30‰πãÈó¥ÁöÑÊï∞Âú®‰∏™‰Ωç‰∏∫Êï∞Â≠ó1ÁöÑÊ¨°Êï∞‰∏∫30Ê¨°ÔºåËÄåÂâ©‰∏ã‰ΩôÊï∞‰πüÂ∞±ÊòØ3ÊòØÂ§ß‰∫é1ÁöÑÔºåÂõ†Ê≠§Âú®Âä†‰∏ÄÊ¨°1ÔºåÊâÄ‰ª•‰∏™‰ΩçÁöÑÊï∞Â≠ó1ÁöÑ‰∏™Êï∞‰∏∫30 + 1 = 31Ôºõ ÂçÅ‰Ωç Âá∫Áé∞1ÁöÑÊ¨°Êï∞Êù•ËØ¥ÔºåËßÑÂæã‰∏∫Ôºå$res = (n/100)*10 + \begin{cases} 0&amp; \text{(n %100 &lt; 10)} \\ 10&amp; \text{(n%100&gt;19)} \\ n%100-10+1&amp; \text{ÂÖ∂‰ªñ} \end{cases}$Ôºõ ‰æãÂ¶ÇÊï∞Â≠ó123Ôºå110~119‰πãÈó¥ÂçÅ‰ΩçÂá∫Áé∞1ÁöÑ‰∏™Êï∞‰∏∫10‰∏™ÔºåËÄåÂâ©‰∏ãÁöÑ123%10 = 23 &gt; 19(‰πüÂ∞±ÊòØ10~19)‰πüÂ≠òÂú®10‰∏™Êï∞ÔºåÂõ†Ê≠§Âú®ÂçÅ‰ΩçÂá∫Áé∞ÁöÑÊï∞Â≠ó1ÁöÑ‰∏™Êï∞‰∏∫20Ê¨° Áôæ‰Ωç Âá∫Áé∞1ÁöÑÊ¨°Êï∞Êù•ËØ¥ÔºåËßÑÂæã‰∏∫Ôºå$res = (n/1000) * 100 + \begin{cases} 0&amp; \text{n%1000&lt;100} \\ 100&amp; \text{n%1000&gt;199} \\ n%1000-100+1&amp; \text{ÂÖ∂‰ªñ} \end{cases}$ ÊÄªÁªìÔºåÂÖ¨Âºè‰∏∫$res = (n/(i\times10) \times i) + \begin{cases} 0&amp; \text{n%(i10) &lt; i} \\ i&amp; \text{n%(i10)&gt;(2i-1)} \\ n%(i10)-i+1&amp; \text{ÂÖ∂‰ªñ} \end{cases}$ (iË°®Á§∫Á¨¨Âá†‰Ωç) Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(\lg n)$„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536#include &lt;iostream&gt;using namespace std;class Solution&#123;public: int NumberOf1Between1AndN_Solution(int n) &#123; if(n &lt; 0) return 0; int res = 0; for (int i = 1; i &lt;= n; i = i * 10) &#123; int k = n % (i * 10); int temp; if (k &lt; i) temp = 0; else if (k &gt; 2 * i - 1) temp = i; else temp = k - i + 1; res += n / (i * 10) * i + temp; cout &lt;&lt; res &lt;&lt;endl; &#125; return res; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.NumberOf1Between1AndN_Solution(123) &lt;&lt; endl; // return 0; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ËÆ∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ËøûÁª≠Â≠êÊï∞ÁªÑÁöÑÊúÄÂ§ßÂíå]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞HZÂÅ∂Â∞î‰ºöÊãø‰∫õ‰∏ì‰∏öÈóÆÈ¢òÊù•ÂøΩÊÇ†ÈÇ£‰∫õÈùûËÆ°ÁÆóÊú∫‰∏ì‰∏öÁöÑÂêåÂ≠¶„ÄÇ‰ªäÂ§©ÊµãËØïÁªÑÂºÄÂÆå‰ºöÂêé,‰ªñÂèàÂèëËØù‰∫Ü:Âú®Âè§ËÄÅÁöÑ‰∏ÄÁª¥Ê®°ÂºèËØÜÂà´‰∏≠,Â∏∏Â∏∏ÈúÄË¶ÅËÆ°ÁÆóËøûÁª≠Â≠êÂêëÈáèÁöÑÊúÄÂ§ßÂíå,ÂΩìÂêëÈáèÂÖ®‰∏∫Ê≠£Êï∞ÁöÑÊó∂ÂÄô,ÈóÆÈ¢òÂæàÂ•ΩËß£ÂÜ≥„ÄÇ‰ΩÜÊòØ,Â¶ÇÊûúÂêëÈáè‰∏≠ÂåÖÂê´Ë¥üÊï∞,ÊòØÂê¶Â∫îËØ•ÂåÖÂê´Êüê‰∏™Ë¥üÊï∞,Âπ∂ÊúüÊúõÊóÅËæπÁöÑÊ≠£Êï∞‰ºöÂº•Ë°•ÂÆÉÂë¢Ôºü‰æãÂ¶Ç:{6,-3,-2,7,-15,1,2,2},ËøûÁª≠Â≠êÂêëÈáèÁöÑÊúÄÂ§ßÂíå‰∏∫8(‰ªéÁ¨¨0‰∏™ÂºÄÂßã,Âà∞Á¨¨3‰∏™‰∏∫Ê≠¢)„ÄÇÁªô‰∏Ä‰∏™Êï∞ÁªÑÔºåËøîÂõûÂÆÉÁöÑÊúÄÂ§ßËøûÁª≠Â≠êÂ∫èÂàóÁöÑÂíåÔºå‰Ω†‰ºö‰∏ç‰ºöË¢´‰ªñÂøΩÊÇ†‰ΩèÔºü(Â≠êÂêëÈáèÁöÑÈïøÂ∫¶Ëá≥Â∞ëÊòØ1) ÊÄùË∑Ø Êö¥ÂäõÊâæÂá∫ÊâÄÊúâÁöÑÂ≠êÊï∞ÁªÑ‰∏∫$n(n+1) \over 2$‰∏™Â≠êÊï∞ÁªÑÔºàÊï∞ÁªÑÈïøÂ∫¶‰∏∫NÔºâÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n^2)$; Âä®ÊÄÅËßÑÂàíÊ≥ï Á¥ØÂä†Âà§ÂÆöÊ≥ïÔºöÂ¶ÇÊûúÂΩìÂâçÁ¥ØÂä†ÂÄº&lt;0ÔºåÈÇ£‰πàÂØπ‰∏ã‰∏Ä‰∏™Êï∞ÁöÑÁ¥ØÂä†Âπ∂Ê≤°ÊúâÊèêÂçáÔºåÊâÄ‰ª•Â∞±ËàçÂéªÔºå‰ªéÂΩìÂâçÊï∞ÂºÄÂßãÁ¥ØÂä†„ÄÇÊúüÈó¥Âà§Êñ≠ÊúÄÂ§ßÂÄºÂç≥ÂèØ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: int FindGreatestSumOfSubArray(vector&lt;int&gt; array) &#123; if (array.empty()) return 0; int res = 0x80000000; //-2147483648 int temp = 0; for (int i = 0; i &lt; array.size(); i++) &#123; if (temp &gt; 0) temp += array[i]; else temp = array[i]; if (temp &gt; res) res = temp; &#125; return res; &#125;&#125;;int main()&#123; // vector&lt;int&gt; arr = &#123;6, -3, -2, 7, -15, 1, 2, 2&#125;; vector &lt;int&gt; arr = &#123;-1,-2,-4,-2&#125;; // int test = 0x80000000; // cout &lt;&lt; test &lt;&lt; endl; // cout &lt;&lt; 0x80000000 &lt;&lt; endl; //unsigned Solution so; cout &lt;&lt; so.FindGreatestSumOfSubArray(arr) &lt;&lt; endl; return 0;&#125; Ê≥®ÊÑèÈóÆÈ¢ò123// int test = 0x80000000; -2147483648// cout &lt;&lt; test &lt;&lt; endl;// cout &lt;&lt; 0x80000000 &lt;&lt; endl; //unsigned 2147483648]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊúÄÂ∞èÁöÑK‰∏™Êï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%9C%80%E5%B0%8F%E7%9A%84K%E4%B8%AA%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•n‰∏™Êï¥Êï∞ÔºåÊâæÂá∫ÂÖ∂‰∏≠ÊúÄÂ∞èÁöÑK‰∏™Êï∞„ÄÇ‰æãÂ¶ÇËæìÂÖ•4,5,1,6,2,7,3,8Ëøô8‰∏™Êï∞Â≠óÔºåÂàôÊúÄÂ∞èÁöÑ4‰∏™Êï∞Â≠óÊòØ1,2,3,4,„ÄÇ ÊÄùË∑Ø ÊéíÂ∫è ÊúÄÂ§ßÂ†ÜÔºà‰∏ç‰ºöËá™Â∑±ÂÆûÁé∞Â†ÜÔºâ Âü∫‰∫épartitionÂáΩÊï∞ÁöÑÂø´ÊéíÊÄùÊÉ≥ÁöÑ$O(n)$ÁöÑÁÆóÊ≥ï==Ôºà‰∏ç‰ºöÔºâ==ÔºõpartitionÂáΩÊï∞ÊòØÂÆûÁé∞Âø´ÈÄüÊéíÂ∫èÁÆóÊ≥ïÁöÑÂü∫Á°ÄÔºåÂú®ËØæÊú¨‰∏≠ÊúâÔºå‰ΩÜÊòØÂøòËÆ∞‰∫Üüíîüíîüíîüíîü§£üòÇüòÇü§£ü§£ü§£ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;queue&gt;#include &lt;algorithm&gt;using namespace std;class Solution&#123;public: vector&lt;int&gt; GetLeastNumbers_Solution(vector&lt;int&gt; input, int k) &#123; vector&lt;int&gt; res; if (input.size() == 0 || input.size() &lt; k) return res; sort(input.begin(), input.end()); for (int i = 0; i &lt; k; i++) &#123; res.push_back(input[i]); &#125; return res; &#125;&#125;;int main()&#123; vector&lt;int&gt; input = &#123;4, 5, 1, 6, 2, 7, 3, 8&#125;; vector&lt;int&gt; res; Solution so; res = so.GetLeastNumbers_Solution(input, 4); for (vector&lt;int&gt;::iterator it = res.begin();it != res.end();it++) &#123; cout &lt;&lt; *it &lt;&lt; " "; &#125; cout &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Êï∞ÁªÑ‰∏≠Âá∫Áé∞Ê¨°Êï∞Ë∂ÖËøá‰∏ÄÂçäÁöÑÊï∞Â≠ó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Êï∞ÁªÑ‰∏≠Êúâ‰∏Ä‰∏™Êï∞Â≠óÂá∫Áé∞ÁöÑÊ¨°Êï∞Ë∂ÖËøáÊï∞ÁªÑÈïøÂ∫¶ÁöÑ‰∏ÄÂçäÔºåËØ∑ÊâæÂá∫Ëøô‰∏™Êï∞Â≠ó„ÄÇ‰æãÂ¶ÇËæìÂÖ•‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫9ÁöÑÊï∞ÁªÑ{1,2,3,2,2,2,5,4,2}„ÄÇÁî±‰∫éÊï∞Â≠ó2Âú®Êï∞ÁªÑ‰∏≠Âá∫Áé∞‰∫Ü5Ê¨°ÔºåË∂ÖËøáÊï∞ÁªÑÈïøÂ∫¶ÁöÑ‰∏ÄÂçäÔºåÂõ†Ê≠§ËæìÂá∫2„ÄÇÂ¶ÇÊûú‰∏çÂ≠òÂú®ÂàôËæìÂá∫0„ÄÇ ÊÄùË∑Ø ÂØπËøô‰∏™Êï∞ÁªÑËøõË°åÊéíÂ∫èÔºåÁÑ∂Âêé‰∏≠‰ΩçÊï∞Â∞±ÊòØÁªìÊûúÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(nlogn)$ ÂÆö‰πâ‰∏Ä‰∏™res‰øùÂ≠òÂΩìÂâçÊï∞ÁªÑÁöÑÂÖÉÁ¥†Ôºåtimes‰øùÂ≠òÊï∞Â≠óÂá∫Áé∞ÁöÑÊ¨°Êï∞ÔºåÂΩìÂá∫Áé∞Áõ∏ÂêåÁöÑÊï∞Â≠óÔºåtimes++ÔºåÂê¶Âàôtimes‚Äì„ÄÇÂΩìtimes==0Êó∂ÔºåÊõ¥Êñ∞resÔºå‰øùÂ≠ò‰∏ã‰∏Ä‰∏™Êï∞Â≠óÔºåÂêåÊó∂ËµãÂÄºres=1„ÄÇËøôÊ†∑ÈÅçÂéÜÂÆåÊï∞ÁªÑÂêéÔºåres‰øùÂ≠òÁöÑÂ∞±ÊòØÊï∞ÁªÑ‰∏≠Âá∫Áé∞Ê¨°Êï∞ÊúÄÂ§öÁöÑÂÖÉÁ¥†ÔºåÁÑ∂ÂêéÂú®Âà§Êñ≠ÂÖ∂Âá∫Áé∞ÁöÑÊ¨°Êï∞ÊòØ‰∏çÊòØË∂ÖËøáÊï∞ÁªÑÈïøÂ∫¶ÁöÑ‰∏ÄÂçäÂç≥ÂèØÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n)$. AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: int MoreThanHalfNum_Solution(vector&lt;int&gt; numbers) &#123; if (numbers.size() == 0) return 0; int res = numbers[0]; int times = 1; for (int i = 1; i &lt; numbers.size(); i++) &#123; if (numbers[i] == res) times++; else times--; if (times == 0) &#123; times = 1; res = numbers[i]; &#125; &#125; //Âà§Êñ≠ÊòØÂê¶Á¨¶ÂêàÂá∫Áé∞Ê¨°Êï∞Â§ß‰∫éÊï∞ÁªÑÈïøÂ∫¶ÁöÑ‰∏ÄÂçä times = 0; for (int i = 0; i &lt; numbers.size(); i++) &#123; if (res == numbers[i]) times++; &#125; if (times * 2 &gt; numbers.size()) return res; else return 0; &#125;&#125;;int main()&#123; vector&lt;int&gt; num = &#123;1, 2, 3, 2, 4, 2, 5, 2, 3&#125;; Solution so; cout &lt;&lt; so.MoreThanHalfNum_Solution(num) &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Â≠óÁ¨¶‰∏≤ÁöÑÊéíÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤,ÊåâÂ≠óÂÖ∏Â∫èÊâìÂç∞Âá∫ËØ•Â≠óÁ¨¶‰∏≤‰∏≠Â≠óÁ¨¶ÁöÑÊâÄÊúâÊéíÂàó„ÄÇ‰æãÂ¶ÇËæìÂÖ•Â≠óÁ¨¶‰∏≤abc,ÂàôÊâìÂç∞Âá∫Áî±Â≠óÁ¨¶a,b,cÊâÄËÉΩÊéíÂàóÂá∫Êù•ÁöÑÊâÄÊúâÂ≠óÁ¨¶‰∏≤abc,acb,bac,bca,cabÂíåcba„ÄÇ ËæìÂÖ•ÊèèËø∞:1ËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤,ÈïøÂ∫¶‰∏çË∂ÖËøá9(ÂèØËÉΩÊúâÂ≠óÁ¨¶ÈáçÂ§ç),Â≠óÁ¨¶Âè™ÂåÖÊã¨Â§ßÂ∞èÂÜôÂ≠óÊØç„ÄÇ ÊÄùË∑ØÂÖ®ÊéíÂàó: ÂÆûÁé∞ÁöÑÊÄùË∑ØÂèÇËßÅ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÔºö Âà§Èáç Â≠óÂÖ∏Â∫è ËæìÂÖ•Ê†∑‰æãÁ©∫Â≠óÁ¨¶‰∏≤ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;string.h&gt;#include &lt;algorithm&gt;using namespace std;class Solution&#123;public: vector&lt;string&gt; Permutation(string str) &#123; vector&lt;string&gt; res; if (str == "") //Á©∫Â≠óÁ¨¶ return res; premutation(str, res, 0); //ÈúÄË¶ÅËæìÂá∫Â≠óÂÖ∏Â∫èÔºåÊâÄ‰ª•ËøõË°åÊéíÂ∫è sort(res.begin(), res.end()); return res; &#125; void swap(string &amp;str, int i, int j) &#123; char temp = str[i]; str[i] = str[j]; str[j] = temp; &#125; void premutation(string str, vector&lt;string&gt; &amp;res, int size) &#123; if (size == str.size()) &#123; if (find(res.begin(), res.end(), str) == res.end()) //Âà§Êñ≠ÈáçÂ§ç res.push_back(str); return; &#125; for (int i = size; i &lt; str.size(); i++) &#123; swap(str, i, size); premutation(str, res, size + 1); swap(str, i, size); //ÂõûÊ∫Ø &#125; &#125;&#125;;int main()&#123; string str = "abc"; // string str = ""; // string str = "aab"; Solution so; vector&lt;string&gt; res = so.Permutation(str); for (vector&lt;string&gt;::iterator it = res.begin(); it != res.end(); it++) &#123; cout &lt;&lt; *it &lt;&lt; " "; &#125; cout &lt;&lt; endl;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∫åÂèâÊêúÁ¥¢Ê†ë‰∏éÂèåÂêëÈìæË°®]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%8E%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏ÄÊ£µ‰∫åÂèâÊêúÁ¥¢Ê†ëÔºåÂ∞ÜËØ•‰∫åÂèâÊêúÁ¥¢Ê†ëËΩ¨Êç¢Êàê‰∏Ä‰∏™ÊéíÂ∫èÁöÑÂèåÂêëÈìæË°®„ÄÇË¶ÅÊ±Ç‰∏çËÉΩÂàõÂª∫‰ªª‰ΩïÊñ∞ÁöÑÁªìÁÇπÔºåÂè™ËÉΩË∞ÉÊï¥Ê†ë‰∏≠ÁªìÁÇπÊåáÈíàÁöÑÊåáÂêë„ÄÇ ÊÄùË∑ØÂõ†‰∏∫ËøôÊòØ‰∏Ä‰∏™‰∫åÂèâÊêúÁ¥¢Ê†ëÔºåÂπ∂‰∏îË¶ÅÊ±ÇÂ∞ÜÂÖ∂ÂèòÊàêÊéíÂ∫èÁöÑÂèåÂêëÈìæË°®ÔºåËøôÊ≠£Á¨¶Âêà‰∫åÂèâÊ†ëÁöÑ‰∏≠Â∫èÈÅçÂéÜÊÄùË∑ØÔºåÂΩìÊàë‰ª¨ÈÅçÂéÜÂà∞Ê†πËäÇÁÇπÁöÑÊó∂ÂÄôÔºåÂ∑¶Â≠êÊ†ëÂ∑≤ÁªèÊéíÂ•ΩÂ∫èÔºåÊàë‰ª¨Ë¶ÅÂ∞±ÊòØÂ∞ÜÂ∑¶Â≠êÊ†ëÁöÑÊúÄÂ§ßËäÇÁÇπ‰∏éÊ†πËäÇÁÇπÁõ∏ËøûÔºåËá≥‰∫éÂ¶Ç‰ΩïÂÆûÁé∞Â∑¶Â≠êÊ†ëÁöÑÊéíÂ∫èÔºåÁî®pre‰øùÂ≠ò‰∏ä‰∏Ä‰∏™ËäÇÁÇπÔºå‰∏≠Â∫èÈÅçÂéÜÂà∞ÂΩìÂâçËäÇÁÇπcurÊó∂ÔºåÂ∞±Â∞Üpre-&gt;right = curÔºåcur-&gt;left = preÔºåÁÑ∂ÂêéËøõË°åÊõ¥Êñ∞pre„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889#include &lt;iostream&gt;using namespace std;struct TreeNode&#123; int val; struct TreeNode *left; struct TreeNode *right; TreeNode(int x) : val(x), left(NULL), right(NULL) &#123; &#125;&#125;;//ÂÖàÂ∫èÂàõÂª∫TreeNode *Create_tree()&#123; TreeNode *T; int val; cin &gt;&gt; val; if (val == 0) //Âè∂Â≠êÁªìÁÇπÁî®0Ê†áËÆ∞ return NULL; else &#123; T = new TreeNode(val); T-&gt;left = Create_tree(); T-&gt;right = Create_tree(); &#125; return T;&#125;//ÂÖàÂ∫èÈÅçÂéÜvoid pre_print(TreeNode *T)&#123; if (T) &#123; cout &lt;&lt; T-&gt;val &lt;&lt; " "; pre_print(T-&gt;left); pre_print(T-&gt;right); &#125;&#125;class Solution&#123;public: TreeNode *Convert(TreeNode *pRootOfTree) &#123; if (pRootOfTree == NULL) return NULL; TreeNode *p = NULL; //Âõ†‰∏∫Â∑¶Â≠êÊ†ëÁöÑÊúÄÂêé‰∏Ä‰∏™Â∑¶Â≠©Â≠êÁöÑÂ∑¶ÊåáÈíàÈ°ª‰∏∫Á©∫ convert(pRootOfTree, p); //ÊâæÂà∞ÊúÄÂ∑¶Â≠êÊ†ëÁöÑÊúÄÂ∑¶Â≠©Â≠êÔºåÁÑ∂ÂêéËøîÂõû while (pRootOfTree-&gt;left) &#123; pRootOfTree = pRootOfTree-&gt;left; &#125; return pRootOfTree; &#125; void convert(TreeNode *cur, TreeNode *&amp;pre) &#123; if (cur == NULL) return; convert(cur-&gt;left, pre); cur-&gt;left = pre; if (pre) pre-&gt;right = cur; //Â∞Ü‰∏ä‰∏Ä‰∏™ËäÇÁÇπÊåáÂêëÂΩìÂâçËäÇÁÇπÔºåÊØîÂ¶ÇÊòØ5--&gt; 6 pre = cur; //Êõ¥Êñ∞‰∏ä‰∏Ä‰∏™ËäÇÁÇπ convert(cur-&gt;right, pre); &#125;&#125;;int main()&#123; TreeNode *root = Create_tree(); pre_print(root); cout &lt;&lt; endl; Solution so; TreeNode *res = so.Convert(root); cout &lt;&lt; res-&gt;val &lt;&lt; endl; while (res) &#123; cout &lt;&lt; res-&gt;val &lt;&lt; " "; res = res-&gt;right; &#125; return 0;&#125;/*8 6 5 0 0 7 0 0 10 9 0 0 11 0 08 6 5 7 10 9 11 55 6 7 8 9 10 11*/ ÊÄªÁªì Â≠òÂú®ÈóÆÈ¢òÔºåÂØπ‰∫åÂèâÊ†ëÁöÑÁ∫øÁ¥¢Âåñ‰∏çÁÜüÊÇâÂïä=-=]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Â§çÊùÇÈìæË°®ÁöÑÂ§çÂà∂]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Â§çÊùÇÈìæË°®ÔºàÊØè‰∏™ËäÇÁÇπ‰∏≠ÊúâËäÇÁÇπÂÄºÔºå‰ª•Âèä‰∏§‰∏™ÊåáÈíàÔºå‰∏Ä‰∏™ÊåáÂêë‰∏ã‰∏Ä‰∏™ËäÇÁÇπÔºåÂè¶‰∏Ä‰∏™ÁâπÊÆäÊåáÈíàÊåáÂêë‰ªªÊÑè‰∏Ä‰∏™ËäÇÁÇπÔºâÔºåËøîÂõûÁªìÊûú‰∏∫Â§çÂà∂ÂêéÂ§çÊùÇÈìæË°®ÁöÑhead„ÄÇÔºàÊ≥®ÊÑèÔºåËæìÂá∫ÁªìÊûú‰∏≠ËØ∑‰∏çË¶ÅËøîÂõûÂèÇÊï∞‰∏≠ÁöÑËäÇÁÇπÂºïÁî®ÔºåÂê¶ÂàôÂà§È¢òÁ®ãÂ∫è‰ºöÁõ¥Êé•ËøîÂõûÁ©∫Ôºâ ÊÄùË∑Ø ÂÖàÂ§çÂà∂ÂØπÂ∫îÁöÑËäÇÁÇπÂπ∂ËøûÊé•Âú®ÂØπÂ∫îËäÇÁÇπÁöÑÂêéÈù¢ ËÆæÁΩÆÂêÑ‰∏™ËäÇÁÇπÁöÑrandomÊåáÈíà Â∞ÜÊñ∞ÊóßÈìæË°®ÂàÜÂâ≤ÂºÄÊù•ÔºàËøôÈáåÊàëÊòØ‰∏ÄËÑ∏ËíôËîΩÔºåÊòéÊòéÊàëËøîÂõûÂÜôÁöÑÂáΩÊï∞Ê≤°ÊúâËøîÂõûÂºïÁî®ÔºåÂ∞±ÊòØÈÄöËøá‰∏ç‰∫ÜÊµãËØï‚Ä¶.Ôºâ Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n)$ÔºåÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(1)$ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798#include &lt;iostream&gt;using namespace std;struct RandomListNode&#123; int label; struct RandomListNode *next, *random; RandomListNode(int x) : label(x), next(NULL), random(NULL) &#123; &#125;&#125;;class Solution&#123;public: RandomListNode *Clone(RandomListNode *pHead) &#123; first(pHead); second(pHead); return third(pHead); &#125; void first(RandomListNode *pHead) //Â§çÂà∂ÊØè‰∏™ËäÇÁÇπÔºåÂπ∂Â∞ÜËäÇÁÇπÂ§çÂà∂Âà∞ÂØπÂ∫îËäÇÁÇπÁöÑÂêéÈù¢ &#123; RandomListNode *p = pHead; while (p) &#123; RandomListNode *new_node = new RandomListNode(p-&gt;label); //ÂàõÂª∫Êñ∞ËäÇÁÇπ //Â∞ÜÊñ∞ËäÇÁÇπÂ§çÂà∂Âà∞ÂéüËäÇÁÇπÁöÑÂêéÈù¢ new_node-&gt;next = p-&gt;next; //ËøôÈáå‰∏çËÉΩÂ§çÂà∂ËäÇÁÇπÁöÑrandomÊåáÈíàÔºåÂõ†‰∏∫ÂêéÈù¢ÁöÑÊñ∞ËäÇÁÇπËøòÊ≤°ÊúâÂàõÂª∫ÔºåÂ∞±‰∏çËÉΩËøûÊé•Âú®‰∏ÄËµ∑ new_node-&gt;random = NULL; //ÂÖàËÆæÁΩÆ‰∏∫NULL p-&gt;next = new_node; //ÊåáÈíàÁßªÂä®Âà∞Êñ∞ÁöÑËäÇÁÇπ‰∏ä p = new_node-&gt;next; &#125; &#125; void second(RandomListNode *pHead) //ËøûÊé•ÊØè‰∏™ËäÇÁÇπÁöÑrandomÊåáÈíà &#123; RandomListNode *p = pHead; while (p) &#123; RandomListNode * temp = p-&gt;next; if (p-&gt;random) temp-&gt;random = p-&gt;random-&gt;next; p = temp-&gt;next; &#125; &#125; RandomListNode *third(RandomListNode *pHead) //Â∞ÜÊñ∞Êóß‰∏§‰∏™ÈìæË°®ÂàÜÂâ≤Âá∫Êù• &#123; /* ÊàëËøôËá™Â∑±ÂÜôÁöÑÂ∞±ÊòØÈÄöËøá‰∏ç‰∫ÜÊµãËØïÔºåÊÑüËßâ‰πüÊ≤°ÈóÆÈ¢òÂïä.... if (pHead == NULL) return NULL; RandomListNode * curnode = pHead-&gt;next; RandomListNode * res = curnode; RandomListNode * temp; while (curnode-&gt;next) &#123; temp = curnode-&gt;next; curnode-&gt;next = temp-&gt;next; curnode = temp-&gt;next; &#125; return res; */ if (pHead == NULL) return NULL; RandomListNode * pnew = pHead-&gt;next; RandomListNode *temp; RandomListNode * curnode = pHead; while(curnode-&gt;next) //Â∞ÜÊóßÈìæË°®ÈáçÊñ∞ËøûÊé•Â•ΩÔºåËøôÊ†∑‰πüÂ∞±ÊòØÂ∞ÜÊñ∞ÊóßÈìæË°®ÂàÜÂâ≤ÂºÄÊù•‰∫Ü &#123; temp = curnode-&gt;next; curnode-&gt;next =temp-&gt;next; curnode = temp; &#125; return pnew; &#125;&#125;;int main()&#123; RandomListNode *head = new RandomListNode(1); RandomListNode *p1 = new RandomListNode(2); RandomListNode *p2 = new RandomListNode(3); head-&gt;next = p1; p1-&gt;next = p2; head-&gt;random = p2; p2-&gt;random = p1; Solution so; RandomListNode *pnew = so.Clone(head); while (pnew) &#123; cout &lt;&lt; pnew-&gt;label &lt;&lt; " "; pnew = pnew-&gt;random; &#125; cout &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∫åÂèâÊ†ë‰∏≠Âíå‰∏∫Êüê‰∏ÄÂÄºÁöÑË∑ØÂæÑ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏ÄÈ¢ó‰∫åÂèâÊ†ëÁöÑË∑üËäÇÁÇπÂíå‰∏Ä‰∏™Êï¥Êï∞ÔºåÊâìÂç∞Âá∫‰∫åÂèâÊ†ë‰∏≠ÁªìÁÇπÂÄºÁöÑÂíå‰∏∫ËæìÂÖ•Êï¥Êï∞ÁöÑÊâÄÊúâË∑ØÂæÑ„ÄÇË∑ØÂæÑÂÆö‰πâ‰∏∫‰ªéÊ†ëÁöÑÊ†πÁªìÁÇπÂºÄÂßãÂæÄ‰∏ã‰∏ÄÁõ¥Âà∞Âè∂ÁªìÁÇπÊâÄÁªèËøáÁöÑÁªìÁÇπÂΩ¢Êàê‰∏ÄÊù°Ë∑ØÂæÑ„ÄÇ(Ê≥®ÊÑè: Âú®ËøîÂõûÂÄºÁöÑlist‰∏≠ÔºåÊï∞ÁªÑÈïøÂ∫¶Â§ßÁöÑÊï∞ÁªÑÈù†Ââç) ÊÄùË∑ØDFSÔºåÊ†πÊçÆÂÖàÂ∫èÈÅçÂéÜÁöÑÊÄùÊÉ≥ÔºåÂæÄ‰∏ãÊ∑±ÊêúÔºåÂÖàÊ†πÁªìÁÇπÔºåÁÑ∂ÂêéÂ∑¶Â≠êÊ†ëÔºåÊé•ÁùÄÂè≥Â≠êÊ†ëÔºåÁÑ∂ÂêéÂõûÊ∫ØÔºàÂ∞±ÊòØËøîÂõûÂà∞Ê†πÁªìÁÇπÁöÑÁä∂ÊÄÅÔºâÔºåÂΩìÂèëÁé∞target == 0Âπ∂‰∏î‰ªñÊòØÂè∂Â≠êÁªìÁÇπÂ∞±ÂèØ‰ª•ËøîÂõû‰∫ÜÔºåÈúÄË¶ÅÊ≥®ÊÑèÈ¢òÁõÆË¶ÅÊ±ÇÁöÑÊòØ‰ªéÊ†πÁªìÁÇπÂà∞Âè∂ÁªìÁÇπ„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;struct TreeNode&#123; int val; struct TreeNode *left; struct TreeNode *right; TreeNode(int x) : val(x), left(NULL), right(NULL) &#123; &#125;&#125;;//ÂÖàÂ∫èÂàõÂª∫TreeNode *Create_tree()&#123; TreeNode *T; int val; cin &gt;&gt; val; if (val == 0) //Âè∂Â≠êÁªìÁÇπÁî®0Ê†áËÆ∞ return NULL; else &#123; T = new TreeNode(val); T-&gt;left = Create_tree(); T-&gt;right = Create_tree(); &#125; return T;&#125;//ÂÖàÂ∫èÈÅçÂéÜvoid pre_print(TreeNode *T)&#123; if (T) &#123; cout &lt;&lt; T-&gt;val &lt;&lt; " "; pre_print(T-&gt;left); pre_print(T-&gt;right); &#125;&#125;class Solution&#123;public: vector&lt;vector&lt;int&gt;&gt; FindPath(TreeNode *root, int expectNumber) &#123; if (root == NULL) return &#123;&#125;; vector&lt;int&gt; temp; vector&lt;vector&lt;int&gt;&gt; res; dfs(root, expectNumber, res, temp); return res; &#125; //temp Ôºåres‰∏çÊòØÂÖ®Â±ÄÔºåÊâÄ‰ª•Ë¶ÅÂä†ÂºïÁî® void dfs(TreeNode *root, int target, vector&lt;vector&lt;int&gt;&gt; &amp;res, vector&lt;int&gt; &amp;temp) &#123; //tempË°®Á§∫ÂΩìÂâçËÆ∞ÂΩïÁöÑË∑ØÂæÑÔºåÂ¶ÇÊûúÊ≠£Á°ÆÔºåÂ∞±ÊäätempÂ§çÂà∂Âà∞res‰∏≠ if(root == NULL) return; target = target - root-&gt;val; temp.push_back(root-&gt;val); //Âà§Êñ≠ÊòØÂê¶Â∑≤ÁªèÂä†Êª°‰∫Ü,ÈúÄË¶ÅÊ≥®ÊÑèÈ¢òÁõÆË¶ÅÊ±ÇÁöÑÊòØÂè∂Â≠êÁªìÁÇπ...ÊâÄ‰ª•Ë¶ÅÂä†Âà§Êñ≠ÊòØ‰∏çÊòØÂè∂Â≠êÁªìÁÇπ if(target == 0 &amp;&amp; root-&gt;left== NULL &amp;&amp; root-&gt;right == NULL) &#123; res.push_back(temp); temp.pop_back(); return; &#125; dfs(root-&gt;left, target, res, temp); dfs(root-&gt;right, target, res, temp); target = target + root-&gt;val; //ÂõûÊ∫Ø temp.pop_back(); &#125;&#125;;int main()&#123; TreeNode *root = Create_tree(); // pre_print(root); Solution so; vector&lt;vector&lt;int&gt;&gt; res; res = so.FindPath(root, 22); //‰∫åÁª¥Êï∞ÁªÑÁöÑÈÅçÂéÜ vector&lt;vector&lt;int&gt;&gt;::iterator iter; vector&lt;int&gt;::iterator it; vector&lt;int&gt; temp; for (iter = res.begin(); iter != res.end(); iter++) &#123; //cout &lt;&lt; "ÂìàÂìà" &lt;&lt; endl; temp = *iter; for (it = temp.begin(); it != temp.end(); it++) &#123; cout &lt;&lt; *it &lt;&lt; " "; &#125; cout &lt;&lt; endl; &#125; cout &lt;&lt; endl; return 0;&#125;/*1 2 4 0 0 6 0 0 3 5 0 0 7 0 01 2 6 1 3 5 */]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>‰∫åÂèâÊ†ë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∫åÂèâÊêúÁ¥¢Ê†ëÁöÑÂêéÂ∫èÈÅçÂéÜÂ∫èÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑÔºåÂà§Êñ≠ËØ•Êï∞ÁªÑÊòØ‰∏çÊòØÊüê‰∫åÂèâÊêúÁ¥¢Ê†ëÁöÑÂêéÂ∫èÈÅçÂéÜÁöÑÁªìÊûú„ÄÇÂ¶ÇÊûúÊòØÂàôËæìÂá∫Yes,Âê¶ÂàôËæìÂá∫No„ÄÇÂÅáËÆæËæìÂÖ•ÁöÑÊï∞ÁªÑÁöÑ‰ªªÊÑè‰∏§‰∏™Êï∞Â≠óÈÉΩ‰∫í‰∏çÁõ∏Âêå ÊÄùË∑Ø ‰∫åÂèâÊü•ÊâæÊ†ëÔºàBinary Search TreeÔºâÔºåÔºàÂèàÔºö‰∫åÂèâÊêúÁ¥¢Ê†ëÔºå‰∫åÂèâÊéíÂ∫èÊ†ëÔºâÂÆÉÊàñËÄÖÊòØ‰∏ÄÊ£µÁ©∫Ê†ëÔºåÊàñËÄÖÊòØÂÖ∑Êúâ‰∏ãÂàóÊÄßË¥®ÁöÑ‰∫åÂèâÊ†ëÔºö Ëã•ÂÆÉÁöÑÂ∑¶Â≠êÊ†ë‰∏çÁ©∫ÔºåÂàôÂ∑¶Â≠êÊ†ë‰∏äÊâÄÊúâÁªìÁÇπÁöÑÂÄºÂùáÂ∞è‰∫éÂÆÉÁöÑÊ†πÁªìÁÇπÁöÑÂÄºÔºõ Ëã•ÂÆÉÁöÑÂè≥Â≠êÊ†ë‰∏çÁ©∫ÔºåÂàôÂè≥Â≠êÊ†ë‰∏äÊâÄÊúâÁªìÁÇπÁöÑÂÄºÂùáÂ§ß‰∫éÂÆÉÁöÑÊ†πÁªìÁÇπÁöÑÂÄºÔºõ ÂÆÉÁöÑÂ∑¶„ÄÅÂè≥Â≠êÊ†ë‰πüÂàÜÂà´‰∏∫‰∫åÂèâÊéíÂ∫èÊ†ë„ÄÇ Âà©Áî®‰∫åÂèâÊêúÁ¥¢Ê†ëÁöÑÁâπÁÇπÔºåÂú®ÂêéÂ∫èÂ∫èÂàó‰∏≠ÈÄöËøáÊØîËæÉ‰∏éÊ†πÁªìÁÇπÔºà‰πüÂ∞±ÊòØÊúÄÂêé‰∏Ä‰∏™ÂÄºÔºâÁöÑÂÖ≥Á≥ªÔºåÊâæÂà∞Áõ∏Â∫îÁöÑÂ∑¶Â≠êÊ†ëÂíåÂè≥Â≠êÊ†ëÔºåÂ¶ÇÊûúÂ∑¶Â≠êÊ†ëÊàñËÄÖÂè≥Â≠êÊ†ë‰∏çÁ¨¶Âêà‰∫åÂèâÊêúÁ¥¢Ê†ëÁöÑÂÆö‰πâÔºåÂ∞±‰∏çÊòØ‰∫åÂèâÊêúÁ¥¢Ê†ë‰∫Ü AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: bool VerifySquenceOfBST(vector&lt;int&gt; sequence) &#123; return so(sequence,0,sequence.size()-1); &#125; bool so(vector&lt;int&gt; sequence, int begin, int end) &#123; if (sequence.empty() || begin &gt; end) return false; int root = sequence[end]; int i = begin; for (; i &lt; end; i++)//Ê≥®ÊÑèËøôÈáå‰∏çÂåÖÊã¨endÔºåÂõ†‰∏∫Âè™ÈúÄË¶ÅÊØîËæÉendÂâçÈù¢ÁöÑÊï∞Â≠óËÄåÂ∑≤ &#123; if (sequence[i] &gt; root) break; &#125; int j = i; for (; j &lt; end; j++) //‰ªéjÂºÄÂßãÂ∞±ÊòØÂà§Êñ≠Âè≥Â≠êÊ†ëÊòØÂê¶ÈÉΩÂ§ß‰∫éÊ†πÁªìÁÇπ &#123; if (sequence[j] &lt; root) return false; &#125; bool left = true; if (i &gt; begin) //Âà§Êñ≠ÊòØÂê¶ÊúâÂ∑¶Â≠êÊ†ë so(sequence, begin, i - 1); bool right = true; if (i &lt; end - 1) //Âà§Êñ≠ÊòØÂê¶ÊúâÂè≥Â≠êÊ†ë so(sequence, i, end - 1); return left &amp;&amp; right; &#125;&#125;;int main()&#123; Solution s; vector&lt;int&gt;v = &#123;4,5,2,6,7,3,1&#125;; if (s.VerifySquenceOfBST(v) == true) cout &lt;&lt;"yes" &lt;&lt;endl; else &#123; cout &lt;&lt;"no" &lt;&lt; endl; &#125; return 0;&#125;/*ÊµãËØïÊ†∑‰æãÔºöÂäüËÉΩÊµãËØï- Âè™ÊúâÂè≥Â≠êÊ†ëÁöÑbst &#123;8,7,6,5&#125;- Âè™ÊúâÂ∑¶Â≠êÊ†ëÁöÑbst &#123;1,2,3,4&#125;- ‰∏çÊòØÊêúÁ¥¢Ê†ë &#123;7,4,6,5&#125;- ÊòØÊêúÁ¥¢‰∫åÂèâÊ†ë&#123;4,5,2,6,7,3,1&#125;==„Äã 1,2,3,4,5,6,7ÂπøÂ∫¶ÈÅçÂéÜÁöÑÂÆåÂÖ®‰∫åÂèâÊ†ëÁâπÊÆäÊµãËØïÔºöÁ©∫Â∫èÂàó*/]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>‰∫åÂèâÊ†ë</tag>
        <tag>ÈÄíÂΩí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰ªé‰∏äÂæÄ‰∏ãÊâìÂç∞‰∫åÂèâÊï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞‰ªé‰∏äÂæÄ‰∏ãÊâìÂç∞Âá∫‰∫åÂèâÊ†ëÁöÑÊØè‰∏™ËäÇÁÇπÔºåÂêåÂ±ÇËäÇÁÇπ‰ªéÂ∑¶Ëá≥Âè≥ÊâìÂç∞„ÄÇ ÊÄùË∑ØBFSÔºå‰ΩøÁî®ÈòüÂàóÂÆûÁé∞ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384#include &lt;iostream&gt;#include &lt;queue&gt;#include &lt;vector&gt;using namespace std;struct TreeNode&#123; int val; struct TreeNode *left; struct TreeNode *right; TreeNode(int x) : val(x), left(NULL), right(NULL) &#123; &#125;&#125;;//ÂÖàÂ∫èÂàõÂª∫TreeNode *Create_tree()&#123; TreeNode *T; int val; cin &gt;&gt; val; if (val == 0) //Âè∂Â≠êÁªìÁÇπÁî®0Ê†áËÆ∞ return NULL; else &#123; T = new TreeNode(val); T-&gt;left = Create_tree(); T-&gt;right = Create_tree(); &#125; return T;&#125;//ÂÖàÂ∫èÈÅçÂéÜvoid pre_print(TreeNode *T)&#123; if (T) &#123; cout &lt;&lt; T-&gt;val &lt;&lt; " "; pre_print(T-&gt;left); pre_print(T-&gt;right); &#125;&#125;class Solution&#123;public: vector&lt;int&gt; PrintFromTopToBottom(TreeNode *root) &#123; queue&lt;TreeNode *&gt; q; vector&lt;int&gt; res; if (root == NULL) return res; q.push(root); while (!q.empty()) &#123; res.push_back(q.front()-&gt;val); if (q.front()-&gt;left) q.push(q.front()-&gt;left); if (q.front()-&gt;right) q.push(q.front()-&gt;right); q.pop(); &#125; return res; &#125;&#125;;int main()&#123; TreeNode *root; root = Create_tree(); Solution so; vector&lt;int&gt; res; res = so.PrintFromTopToBottom(root); for (vector&lt;int&gt;::iterator it = res.begin(); it != res.end(); it++) &#123; cout &lt;&lt; *it &lt;&lt; " "; &#125; cout &lt;&lt; endl; return 0;&#125;/*ÊµãËØïÊ†∑‰æãÔºö1 2 4 0 0 5 0 0 3 6 0 0 7 0 01 2 3 4 5 6 7 */]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>‰∫åÂèâÊ†ë</tag>
        <tag>ÈòüÂàó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Ê†àÁöÑÂéãÂÖ•ÂíåÂºπÂá∫Â∫èÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%92%8C%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏§‰∏™Êï¥Êï∞Â∫èÂàóÔºåÁ¨¨‰∏Ä‰∏™Â∫èÂàóË°®Á§∫Ê†àÁöÑÂéãÂÖ•È°∫Â∫èÔºåËØ∑Âà§Êñ≠Á¨¨‰∫å‰∏™Â∫èÂàóÊòØÂê¶ÂèØËÉΩ‰∏∫ËØ•Ê†àÁöÑÂºπÂá∫È°∫Â∫è„ÄÇÂÅáËÆæÂéãÂÖ•Ê†àÁöÑÊâÄÊúâÊï∞Â≠óÂùá‰∏çÁõ∏Á≠â„ÄÇ‰æãÂ¶ÇÂ∫èÂàó1,2,3,4,5ÊòØÊüêÊ†àÁöÑÂéãÂÖ•È°∫Â∫èÔºåÂ∫èÂàó4,5,3,2,1ÊòØËØ•ÂéãÊ†àÂ∫èÂàóÂØπÂ∫îÁöÑ‰∏Ä‰∏™ÂºπÂá∫Â∫èÂàóÔºå‰ΩÜ4,3,5,1,2Â∞±‰∏çÂèØËÉΩÊòØËØ•ÂéãÊ†àÂ∫èÂàóÁöÑÂºπÂá∫Â∫èÂàó„ÄÇÔºàÊ≥®ÊÑèÔºöËøô‰∏§‰∏™Â∫èÂàóÁöÑÈïøÂ∫¶ÊòØÁõ∏Á≠âÁöÑÔºâ ÊÄùË∑Ø ÈúÄË¶ÅÊ≥®ÊÑèÊ†àÁöÑÂéãÂÖ•È°∫Â∫è‰∏çÊòØ‰∏ÄÁõ¥ÈÉΩÊòØÁõ¥Êé•ÂéãÂÖ•Ôºå‰∏≠Èó¥Â§πÊùÇÁùÄÂºπÂá∫Êìç‰Ωú ‰ΩøÁî®‰∏Ä‰∏™ËæÖÂä©Ê†àÔºåÂ∞ÜÂéãÂÖ•Â∫èÂàó‰∏Ä‰∏™‰∏Ä‰∏™ÂéãÂÖ•ÔºåÊØèÊ¨°Âà§Êñ≠Â¶ÇÊûúËæÖÂä©Ê†àÊ†àÈ°∂ÂÖÉÁ¥†Á≠â‰∫éÂºπÂá∫Â∫èÂàóÁöÑÂÄºÔºåÂ∞±ÊääÊ†àÈ°∂ÂÖÉÁ¥†ÂºπÂá∫ÔºåÁÑ∂ÂêéÂºπÂá∫Â∫èÂàóÁöÑÊåáÈíàÂâçÁßª„ÄÇÂ¶ÇÊûúÂ∞ÜÊâÄÊúâÁöÑÂéãÂÖ•Â∫èÂàóÂéãÂÖ•Ê†à‰∏≠ËøòÊ≤°ÊúâÂú®ÂºπÂá∫Â∫èÂàó‰∏≠ÊâæÂà∞‰∏Ä‰∏™ÂèØ‰ª•ÂºπÂá∫ÁöÑÂÄºÔºåÈÇ£‰πàÂ∞±return falseÂï¶„ÄÇ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;stack&gt;using namespace std;class Solution&#123;public: bool IsPopOrder(vector&lt;int&gt; pushV, vector&lt;int&gt; popV) &#123; stack&lt;int&gt; s; int index = 0; for (int i = 0; i &lt; pushV.size(); i++) &#123; s.push(pushV[i]); if (s.top() == popV[index]) &#123; s.pop(); index++; &#125; &#125; while (!s.empty()) //ÊâÄÊúâÁöÑÂÖÉÁ¥†ÂéãÂÖ•ÂÆåÊàêÔºåÂà§Êñ≠ËÉΩÂê¶ÂºπÂá∫ &#123; if (s.top() == popV[index]) &#123; s.pop(); index++; &#125; else return false; &#125; return true; &#125;&#125;;int main()&#123; vector&lt;int&gt; pushv = &#123;1, 2, 3, 4&#125;; vector&lt;int&gt; popv = &#123;4, 3, 2, 1&#125;; Solution so; cout &lt;&lt; so.IsPopOrder(pushv, popv); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÂåÖÂê´minÂáΩÊï∞ÁöÑÊ†à]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÂÆö‰πâÊ†àÁöÑÊï∞ÊçÆÁªìÊûÑÔºåËØ∑Âú®ËØ•Á±ªÂûã‰∏≠ÂÆûÁé∞‰∏Ä‰∏™ËÉΩÂ§üÂæóÂà∞Ê†à‰∏≠ÊâÄÂê´ÊúÄÂ∞èÂÖÉÁ¥†ÁöÑminÂáΩÊï∞ÔºàÊó∂Èó¥Â§çÊùÇÂ∫¶Â∫î‰∏∫OÔºà1ÔºâÔºâ„ÄÇ ÊÄùË∑Ø Â¶ÇÊûúÊàë‰ª¨Â∞ÜÊØè‰∏Ä‰∏™ÊúÄÂ∞èÊï∞ÊîæÂú®Ê†àÈ°∂ÔºåËøôÊ†∑ËÉΩ‰øùËØÅÊØèÊ¨°ÂºπÂá∫ÁöÑÂÖÉÁ¥†ÊòØÊúÄÂ∞èÂÄº‰∏îÂ§çÊùÇÂ∫¶‰∏∫$O(1)$Ôºå‰ΩÜÊòØÂ¶ÇÊûúË¶Å‰ΩøÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÊîæÂú®Ê†àÈ°∂ÔºåËøôÊ†∑Â∞±‰∏çËÉΩÊª°Ë∂≥Ê†àÂÖàËøõÂÖàÂá∫ÁöÑÂéüÂàô Âõ†Ê≠§ÔºöÁî®‰∏Ä‰∏™ËæÖÂä©Ê†àÔºåÊØè‰∏ÄÊ¨°ÂéãÂÖ•ÊúÄÂ∞èÂÖÉÁ¥†ÔºåËé∑ÂèñÊúÄÂ∞èÂÄºÂ∞±ÂºπÂá∫ËæÖÂä©Ê†àÁöÑÊ†àÈ°∂ÂÖÉÁ¥†Âç≥ÂèØ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;iostream&gt;#include &lt;stack&gt;using namespace std;class Solution&#123;public: void push(int value) &#123; s1.push(value); if (s2.empty()) s2.push(value); if (s2.top() &gt;= value) s2.push(value); else s2.push(s2.top()); &#125; void pop() &#123; s1.pop(); s2.pop(); &#125; int top() &#123; return s1.top(); &#125; int min() &#123; return s2.top(); &#125;private: stack&lt;int&gt; s1; stack&lt;int&gt; s2;&#125;;int main()&#123; Solution so; int value; for (int i = 0; i &lt; 3; i++) &#123; cin &gt;&gt; value; so.push(value); &#125; cout &lt;&lt; so.min() &lt;&lt; endl;&#125; ÊÄªÁªì ÊòéÁ°ÆÊ†àÁöÑÊï∞ÊçÆÁªìÊûÑÂÆö‰πâ ËôΩÁÑ∂ÊúâÊó∂ÂÄôÂºÄ‰∏™ËæÖÂä©Ê†àÂ§™Êµ™Ë¥πÁ©∫Èó¥‰∫ÜÔºå‰ΩÜÊòØËøòÊòØË¶ÅËÄÉËôëËøôÁßçÁªìÊûú]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-ÂáΩÊï∞ÂºèÁºñÁ®ã]]></title>
    <url>%2Fpython-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÁºñÁ®ãËØ≠Ë®ÄÈÄöÂ∏∏ÈÄöËøá‰ª•‰∏ãÂá†ÁßçÊñπÂºèÊù•Ëß£ÊûÑÂÖ∑‰ΩìÈóÆÈ¢ò ËøáÁ®ãÂºèÔºöCËØ≠Ë®Ä Â£∞ÊòéÂºèÔºöSQL Èù¢ÂêëÂØπË±°ÔºöjavaÔºåc++ ÂáΩÊï∞ÂºèÁºñÁ®ãÔºöÂ∞Ü‰∏Ä‰∏™ÈóÆÈ¢òÂàÜËß£‰∏∫‰∏ÄÁ≥ªÂàóÂáΩÊï∞ ÂØπ‰∫épythonËÄåË®ÄÔºåpythonÊòØÂ§öËåÉÂºèËØ≠Ë®ÄÔºåÂú®Â§ßÂûãÁ®ãÂ∫è‰∏≠Ôºå‰∏çÂêåÁöÑÈÉ®ÂàÜÂèØËÉΩ‰ºöÈááÁî®‰∏çÂêåÁöÑÊñπÂºèÁºñÂÜôÔºåÊØîÂ¶ÇGUIÂèØËÉΩÊòØÈù¢ÂêëÂØπË±°ÁöÑËÄåÂ§ÑÁêÜÈÄªËæëÂàôÊòØËøáÁ®ãÂºèÊàñËÄÖÂáΩÊï∞Âºè„ÄÇ Âú®ÂáΩÊï∞ÂºèÁ®ãÂ∫èÈáåÔºåËæìÂÖ•‰ºöÁªèËøá‰∏ÄÁ≥ªÂàóÂáΩÊï∞ÔºåÊØè‰∏™ÂáΩÊï∞Êé•ÂèóËæìÂÖ•Âπ∂ËæìÂá∫ÁªìÊûúÔºåÂõ†Ê≠§ÂáΩÊï∞ÂºèÈ£éÊ†ºÂèçÂØπ‰ΩøÁî®Â∏¶ÊúâÂâØ‰ΩúÁî®ÁöÑÂáΩÊï∞ÔºåÂâØ‰ΩúÁî®Â∞±ÊòØÊåá‰øÆÊîπÂÜÖÈÉ®Áä∂ÊÄÅÔºåÊàñËÄÖ‰∏Ä‰∫õÂÖ∂‰ªñÁä∂ÊÄÅÁöÑÂèòÂåñ„ÄÇÂõ†Ê≠§Ê∂àÈô§ÂâØ‰ΩúÁî®ÊÑèÂë≥ÁùÄ‰∏çËÉΩ‰ΩøÁî®ÈöèÁ®ãÂ∫èËøêË°åËÄåÊõ¥Êñ∞ÁöÑÊï∞ÊçÆÁªìÊûÑÔºåÊØè‰∏™ÂáΩÊï∞ÁöÑËæìÂá∫Âè™‰æùËµñ‰∫éËæìÂÖ•„ÄÇ ‰ΩúÁî® ÂΩ¢ÂºèËØÅÊòéÊõ¥Âä†ÂÆπÊòìÔºüÔºüÔºü‰∏ÄËÑ∏ËíôËîΩ Ê®°ÂùóÂåñ ÁªÑÂêàÂåñ Êòì‰∫éË∞ÉËØïÂíåÊµãËØï Ëø≠‰ª£Âô® Ëø≠‰ª£Âô®ÊòØ‰∏Ä‰∏™Ë°®Á§∫Êï∞ÊçÆÊµÅÁöÑÂØπË±°ÔºåËøô‰∏™ÂØπË±°ÊØèÊ¨°Âè™ËøîÂõû‰∏Ä‰∏™ÂÖÉÁ¥† ÂøÖÈ°ªÊîØÊåÅ__next__()ÊñπÊ≥ïÔºå‰∏çÊé•ÂèóÂèÇÊï∞ÔºåÂπ∂ÊÄªÊòØËøîÂõûÊï∞ÊçÆÊµÅ‰∏≠ÁöÑ‰∏ã‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂ¶ÇÊûúÊï∞ÊçÆÊµÅ‰∏≠Ê≤°ÊúâÂÖÉÁ¥†Ôºå__nex__()ÊñπÊ≥ïÂ∞±‰ºöÊäõÂá∫StopIterationÂºÇÂ∏∏]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-‰ΩøÁî®pythonËß£ÈáäÂô®]]></title>
    <url>%2Fpython-%E4%BD%BF%E7%94%A8python%E8%A7%A3%E9%87%8A%E5%99%A8%2F</url>
    <content type="text"><![CDATA[Ë∞ÉÁî®Ëß£ÈáäÂô® ÂëΩ‰ª§Ë°å‰∏ã‰º†ÂÖ•ÂèÇÊï∞ Â∞±ÊòØÁõ∏ÂΩìLinux‰∏ãÁõ¥Êé•ËøêË°åËÑöÊú¨ÁöÑÂëΩ‰ª§ÔºåËøôÈáåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåpythonËß£ÈáäÂô®‰ºöËØªÂèñÂëΩ‰ª§Ë°åÂèÇÊï∞ÔºåËΩ¨Âåñ‰∏∫Â≠óÁ¨¶‰∏≤ÂàóË°®Â≠òÂÖ•sysÊ®°ÂùóÁöÑargvÂèòÈáè‰∏≠„ÄÇargvÊòØ‰∏Ä‰∏™ÂàóË°®ÔºåÂàóË°®ÁöÑÁ¨¨‰∏ÄÈ°πÈªòËÆ§‰∏∫Á©∫Â≠óÁ¨¶‰∏≤ÔºåÂ¶ÇÊûú‰ΩøÁî®-cÊàñËÄÖ-mÔºåÈÇ£‰πàargv[0]Â∞±ÊòØ‰∏∫&#39;-c/-m&#39;,‰πãÂêéÁöÑÂèÇÊï∞‰∏ç‰ºöË¢´Ëß£ÈáäÂô®Ëß£ÈáäÔºåËÄåÊòØÁõ¥Êé•ÁïôÂú®sys.argv‰∏≠ÁªôÂëΩ‰ª§ÊàñËÄÖÊ®°ÂùóÊù•Â§ÑÁêÜ -c commandÔºöcommand‰∏∫python‰ª£Á†ÅÔºåÁî±‰∫épython‰ª£Á†Å‰∏≠ÁªèÂ∏∏‰ºöÂåÖÂê´ÂØπÁªàÁ´ØÊù•ËØ¥ÊØîËæÉÁâπÊÆäÁöÑÂ≠óÁ¨¶ÔºåÊâÄ‰ª•Áî®Ëã±ÊñáÂçïÂºïÂè∑Êã¨Ëµ∑Êù•ÔºåÂ§ö‰∏™pythonËØ≠Âè•Â∞±Áî®ÂàÜÂè∑ÂàÜÂºÄÔºå‰ΩÜÊòØÊàëÂú®windowsÁ≥ªÁªü‰∏äÂá∫Áé∞‰∏Ä‰∫õÊàëÊöÇÊó∂‰∏çËÉΩËß£ÈáäÁöÑÁé∞Ë±°ÔºåÂèØËÉΩÊòØwindows‰∏ãcmdÁ™óÂè£ÁöÑÁºñÁ†Å‰∏çÂêåÊàñËÄÖÊòØÂÖ∂‰ªñÂéüÂõ†ÔºàÊàëÊöÇÊó∂‰∏çÊ∏ÖÊ•öÔºâÔºå‰ΩÜÊòØlinuxÁ≥ªÁªüËÉΩÂ§üÊ≠£Â∏∏ÊâßË°åÔºåÊâÄ‰ª•Âª∫ËÆÆ‰∏çË¶ÅÂú®windows‰∏ã‰ΩøÁî®ÂëΩ‰ª§Ë°å‰º†ÂÖ•ÂèÇÊï∞ÊâßË°åpythonÊñá‰ª∂ÂêßÔºÅ usage: python3 [option] ... [-c cmd | -m mod | file | -] [arg] ...ÔºåÂÖ∂‰∏≠[option]ÁöÑÁî®Ê≥ïÂ∞±ÊòØ‰∏ãÈù¢ÂõæÁâáÁöÑÈÄâÈ°πÔºåÂÖ∑‰ΩìÊìç‰ΩúÊü•ÁúãÁõ∏ÂÖ≥ÊñáÊ°£„ÄÇÈúÄË¶ÅÊ≥®ÊÑèÔºöÂΩì‰ΩøÁî®-m Ê®°ÂùóÂêçÁöÑÊó∂ÂÄôÔºåÊ®°ÂùóÂêéÈù¢‰∏çËÉΩÂä†.pyÁöÑÂêéÁºÄ Âú®windowsÁ≥ªÁªüÁöÑlinuxÂ≠êÁ≥ªÁªü‰∏ãÁöÑÈ™åËØÅ‚ÄîÁ¨¶ÂêàÈ¢ÑÊúüÊâßË°å ‰∫§‰∫íÊ®°Âºè IDLE ËøõÂÖ•‰∫§‰∫íÊ®°ÂºèÔºåÂú®windows‰∏ã‰ΩøÁî®ctrl + zÔºålinux‰ΩøÁî®Ctrl + dÈÄÄÂá∫‰∫§‰∫íÊ®°Âºè Ëß£ÈáäÂô®ÁöÑËøêË°åÁéØÂ¢ÉÊ∫êÊñá‰ª∂Â≠óÁ¨¶ÁºñÁ†Å Âú®python3‰∏≠ÔºåpythonÊñá‰ª∂ÈªòËÆ§ÊòØÁî®utf-8ËøõË°åÁºñÁ†ÅÁöÑ Â¶ÇÊûú‰∏ç‰ΩøÁî®ÈªòËÆ§ÁºñÁ†ÅÔºåÂ∞±ÊòØË¶ÅÂú®pythonÊñá‰ª∂ÁöÑÁ¨¨‰∏ÄË°åÁî≥ÊòéÊñá‰ª∂ÁºñÁ†Å 1# -*- coding: cp1252 -*- Ê≥®ÊÑèÔºöÂΩìÊ∫êÁ†Å‰∏≠‰ª•UNIXÁöÑ‚ÄúShebang‚ÄùË°å(‰πüÂ∞±ÊòØ‰ª•Â≠óÁ¨¶&quot;#!&quot;)ÂºÄÂ§¥Êó∂ÔºåÂ∞±Ë¶ÅÊääÊñá‰ª∂ÁºñÁ†ÅÊîæÂú®Á¨¨‰∫åË°å 12#!/usr/bin/env python3# -*- coding: cp1252 -*- ShebangËøô‰∏™Á¨¶Âè∑ÈÄöÂ∏∏Âú®UnixÁ≥ªÁªüÁöÑËÑöÊú¨‰∏≠Á¨¨‰∏ÄË°åÂºÄÂ§¥‰∏≠ÂÜôÂà∞ÔºåÂÆÉÊåáÊòé‰∫ÜÊâßË°åËøô‰∏™ËÑöÊú¨Êñá‰ª∂ÁöÑËß£ÈáäÁ®ãÂ∫è„ÄÇ unicodeÊîØÊåÅÊâÄÊúâÁöÑÁºñÁ®ãËØ≠Ë®ÄÔºåÊâÄÊúâÁöÑÁ≥ªÁªüÔºåÂ¶ÇÊûúgbkËΩØ‰ª∂ÊîæÂú®Âè™ÊîØÊåÅASCIIÁ†ÅÁöÑÁîµËÑë‰∏äÔºåÂè™Ë¶ÅgbkÂä†ËΩΩÂà∞ÂÜÖÂ≠ò‰∏≠ËΩ¨Êç¢‰∏∫UnicodeÁºñÁ†ÅÔºåÂ∞±ËÉΩÂ§üÊ≠£Â∏∏ÊòæÁ§∫„ÄÇÔºàÂÜÖÂ≠ò‰∏≠unicodeÁºñÁ†ÅÁöÑÔºâ Âú®python3‰∏≠ÔºåstrÂ∞±ÊòØunicodeÁ±ªÂûãÁöÑÂ≠óÁ¨¶ÔºåÂÖ∂‰ªñÁºñÁ†ÅÁöÑÂ≠óÁ¨¶Â∞±ÈªòËÆ§ÊòØbytesÁ±ªÂûãÔºå‰πüÂ∞±ÊòØÂçïÁ∫ØÁöÑ‰∫åËøõÂà∂„ÄÇ encodeÔºàÁºñÁ†ÅÔºâÔºàencode : Unicode ==„Äãutf-8/gbkÔºâ decode(Ëß£Á†Å) Ôºàdecode : utf-8/gbk ==&gt; unicodeÔºâ ‰∏∫‰ªÄ‰πàpython3ÁöÑutf-8ÁöÑÁºñÁ†ÅÊñá‰ª∂ËÉΩÂ§üÂú®windowsÁöÑgbkÁºñÁ†ÅÁöÑÁªàÁ´ØÊòæÁ§∫Âë¢ÔºåËøôÊòØÁî±‰∫épython3Êñá‰ª∂Âä†ËΩΩÂà∞ÂÜÖÂ≠ò‰∏≠‰ºöËΩ¨Êç¢‰∏∫unicodeÁºñÁ†Å„ÄÇ‰ΩÜÊòØÊúâ‰∫õËØ≠Ë®ÄÂ∞±‰∏çËÉΩËΩ¨Êç¢Ôºå‰æãÂ¶ÇÔºöPython2¬∑¬∑¬∑¬∑¬∑]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-È°∫Êó∂ÈíàÊâìÂç∞Áü©Èòµ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Áü©ÈòµÔºåÊåâÁÖß‰ªéÂ§ñÂêëÈáå‰ª•È°∫Êó∂ÈíàÁöÑÈ°∫Â∫è‰æùÊ¨°ÊâìÂç∞Âá∫ÊØè‰∏Ä‰∏™Êï∞Â≠óÔºå‰æãÂ¶ÇÔºåÂ¶ÇÊûúËæìÂÖ•Â¶Ç‰∏ã4 X 4Áü©ÈòµÔºö 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Âàô‰æùÊ¨°ÊâìÂç∞Âá∫Êï∞Â≠ó1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10. ÊÄùË∑Ø Â∞ÜÁü©ÈòµÂΩìÂÅöÁî±Â§ö‰∏™ÂúàÁªÑÊàêÔºåÊØè‰∏™ÊâìÂç∞‰∏Ä‰∏™ÂúàÔºåÊØè‰∏™ÂúàÁöÑËµ∑ÁÇπ‰πüÂ∞±ÊòØ(start,start)ÈÉΩÊª°Ë∂≥ËøôÊ†∑‰∏Ä‰∏™Êù°‰ª∂ÔºåÈÇ£Â∞±ÊòØ(Ë°åÊï∞-1)&gt; start * 2 &amp;&amp; (ÂàóÊï∞-1) &gt; start * 2ÔºåÂõ†Ê≠§ÊääËøô‰∏™ÂΩìÂÅöÂæ™ÁéØÁöÑÁªàÊ≠¢Êù°‰ª∂ÔºåÂú®Âæ™ÁéØ‰∏≠ÊØèÊ¨°ÊâìÂç∞‰∏Ä‰∏™ÂúàÔºåÁõ¥Âà∞ÊâìÂç∞ÂÆåÊâÄÊúâÁöÑÂúà(0,0),(1,1),(2,2)‚Ä¶‚Ä¶ Â¶Ç‰ΩïÊâìÂç∞‰∏ÄÂúàÔºüÂàÜÂà´ÊâìÂç∞Âõõ‰∏™ÊñπÂêëÔºåÂà§Êñ≠ÊØè‰∏™ÊñπÂêëÊòØÂê¶ÊúâÂÄºÈúÄË¶ÅÊâìÂç∞ÔºàÂÖ∑‰ΩìËßÅ‰ª£Á†ÅÔºâ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;void print(vector&lt;vector&lt;int&gt;&gt; matrix, int start, vector&lt;int&gt; &amp;res) //Ê≥®ÊÑèË¶Å‰º†ÂºïÁî®ÔºåÂõ†‰∏∫Ëøô‰∏™resÊòØ‰∏™Â±ÄÈÉ®ÂèòÈáèÔºå‰º†ÂºïÁî®ËøôÊ†∑Â∞±‰ºöÊìç‰ΩúÂêå‰∏Ä‰∏™res&#123; int y = matrix.size() - start - 1; //Ë°®Á§∫Áü©Èòµ‰∏≠Âàó int x = matrix[matrix.size() - 1].size() - start - 1; //Ë°®Á§∫Áü©Èòµ‰∏≠ÁöÑË°å for (int i = start; i &lt;= x; i++) //ÊâìÂç∞‰∏äÈù¢‰∏ÄË°å &#123; // cout &lt;&lt; matrix[start][i] &lt;&lt; " "; res.push_back(matrix[start][i]); &#125; if (start &lt; y) //Ë°®ÊòéÊúâÂ§öË°å &#123; for (int i = start + 1; i &lt;= y; i++) //ÊâìÂç∞Âè≥Ëæπ‰∏ÄÂàó &#123; // cout &lt;&lt; matrix[i][x] &lt;&lt; " "; res.push_back(matrix[i][x]); &#125; &#125; if (start &lt; x &amp;&amp; start &lt; y) //Ë°®ÊòéËá≥Â∞ëÊúâ2Ë°å2Âàó &#123; for (int i = x - 1; i &gt;= start; i--) //ÊâìÂç∞‰∏ãÈù¢‰∏ÄË°å &#123; //Ê≥®ÊÑèÂè≥Ëæπ‰∏ÄÂàóÁöÑÊúÄÂêé‰∏Ä‰∏™Ë¢´ÊâìÂç∞‰∫ÜÔºåÊâÄ‰ª•‰∏ãÈù¢‰∏ÄË°åÁöÑÊúÄÂè≥Ëæπ‰∏Ä‰∏™Â∞±‰∏çÁî®ÂÜçÊ¨°ÊâìÂç∞ÔºåÊâÄ‰ª•i‰ªéx-1ÂºÄÂßã // cout &lt;&lt; matrix[y][i] &lt;&lt; " "; res.push_back(matrix[y][i]); &#125; &#125; if (start &lt; y - 1 &amp;&amp; start &lt; x) //Ë°®ÊòéÂÖ∑Êúâ‰∏âË°å‰∏§ÂàóÁöÑÁªìÊûÑ &#123; for (int i = y - 1; i &gt; start; i--) &#123; // cout &lt;&lt; matrix[i][start] &lt;&lt; " "; res.push_back(matrix[i][start]); &#125; &#125;&#125;class Solution&#123;public: vector&lt;int&gt; printMatrix(vector&lt;vector&lt;int&gt;&gt; matrix) &#123; vector&lt;int&gt; res; if (matrix.size() &lt;= 0 || matrix[matrix.size() - 1].size() &lt;= 0) return res; int start = 0; //ÊØè‰∏ÄÂúàÂºÄÂßãÊâìÂç∞ÁöÑËµ∑ÁÇπ while (matrix.size() &gt; start * 2 &amp;&amp; matrix[matrix.size() - 1].size() &gt; start * 2) &#123; print(matrix, start, res); start++; // exit(0); &#125; return res; &#125;&#125;;int main()&#123; // vector&lt;vector&lt;int&gt;&gt;arr(3, vector&lt;int&gt;(3)); // arr[0] = &#123;1,2,3&#125;; // arr[1] = &#123;4,5,6&#125;; vector&lt;vector&lt;int&gt;&gt; arr = &#123;&#123;1, 2&#125;, &#123;3, 4&#125;, &#123;5, 6&#125;&#125;; Solution so; vector&lt;int&gt; res = so.printMatrix(arr); for (vector&lt;int&gt;::iterator it = res.begin(); it != res.end(); it++) cout &lt;&lt; *it &lt;&lt; " "; cout &lt;&lt; endl; return 0;&#125;//1 2 4 6 5 3 ÊÄªÁªì ÂØπ‰∫éËøôÁßç‰∏çÈúÄË¶ÅÁâπÊÆäÁöÑÊï∞ÊçÆÁªìÊûÑÊàñËÄÖÁÆóÊ≥ïÁöÑÈ¢òÔºåÈúÄË¶ÅÊâæÂà∞ÂÖ∂ÈöêËóèÁöÑËßÑÂæãÔºåÊÑüËßâÊõ¥Èöæ=-=ÔºÅ]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´-scrapyÊ°ÜÊû∂Â≠¶‰π†]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB-scrapy%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[ÁªÑ‰ª∂ ÂºïÊìéÔºàscrapy engineÔºâ Ë∞ÉÂ∫¶Âô®ÔºàschedulerÔºâ ‰∏ãËΩΩÂô®ÔºàdownloadÔºâÔºöËé∑ÂèñÁΩëÈ°µ Áà¨Ëô´Âô®ÔºàspiderÔºâÔºöËß£ÊûêÁΩëÈ°µ ÁÆ°ÈÅìÔºàitem pipelineÔºâÔºöÂ≠òÂÇ®Êï∞ÊçÆ ‰∏ãËΩΩÂô®‰∏≠Èó¥‰ª∂Ôºàdownload middlewaresÔºâ Áà¨Ëô´‰∏≠Èó¥‰ª∂Ôºàspider middlewaresÔºâ Êï∞ÊçÆÊµÅÊï∞ÊçÆÊµÅÁöÑÊµÅÂä®ÊñπÂêë ÂºïÊìéÔºöÂêëÁà¨Ëô´Âô®ËØ∑Ê±ÇÁ¨¨‰∏Ä‰∏™Ë¶ÅÊäìÂèñÁöÑÁΩëÈ°µurl Áà¨Ëô´Âô®ÔºöÊèê‰æõurlÁªôÂºïÊìé ÂºïÊìéÔºöÊé•ÂèóÂà∞ÁΩëÂùÄÔºå‰∫§ÁªôË∞ÉÂ∫¶Âô®ÊéíÂ∫èÂÖ•Èòü Ë∞ÉÂ∫¶Âô®ÔºöÂ∞ÜÂÆÉÂ§ÑÁêÜÊàêËØ∑Ê±ÇrequestÁªôÂºïÊìé ÂºïÊìéÔºöÊé•ÂèóÂà∞requestÔºåÂπ∂ÈÄöËøá‰∏ãËΩΩÂô®‰∏≠Èó¥‰ª∂Áªô‰∏ãËΩΩÂô®‰∏ãËΩΩÔºà‰πüÂ∞±ÊòØËß£ÊûêÁΩëÈ°µÔºâ ‰∏ãËΩΩÂô®ÔºöÊ†πÊçÆrequest‰∏ãËΩΩÈ°µÈù¢ÔºåËøîÂõûÂØπÂ∫îÁöÑÂõûÂ∫îÔºàresponseÔºâÁªôÂºïÊìé ÂºïÊìéÔºöÊé•ÂèóÂà∞responseÔºåÂπ∂ÈÄöËøáÁà¨Ëô´Âô®‰∏≠Èó¥‰ª∂ÁªôÁà¨Ëô´Âô®Â§ÑÁêÜ Áà¨Ëô´Âô®ÔºöÂ§ÑÁêÜresponseÔºåÊèêÂèñÊï∞ÊçÆÔºåËøîÂõûÁªìÊûúitemÁªôÂºïÊìéÔºåÂ¶ÇÊûúÊúâË∑üËøõÁöÑËØ∑Ê±Çrequest‰πü‰ºöÁªôÂºïÊìé ÂºïÊìéÔºöÊé•ÂèóÂà∞itemÔºå‰∫§ÁªôÁÆ°ÈÅìÔºõÊñ∞ÁöÑrequestÁªôË∞ÉÂ∫¶Âô® ÁÆ°ÈÅìÔºöÂ≠òÂÇ®Êï∞ÊçÆ Â¶ÇÊûúÊúâÊñ∞ÁöÑrequestÁªôË∞ÉÂ∫¶Âô®ÔºåÈÇ£‰πà‰ªéÁ¨¨2Ê≠•ÂºÄÂßãÈáçÂ§çÁõ¥Âà∞Ë∞ÉÂ∫¶Âô®Ê≤°ÊúârequestÔºåÂºïÊìéÂ∞±‰ºöÂÖ≥Èó≠Êú¨Ê¨°Áà¨Ëô´„ÄÇ ÂÆâË£Öpip install scrapyÔºå‰∏çËøáÂ•ΩÂÉèÂê¨ËØ¥Â•ΩÂÉè‰ºöÂá∫Áé∞ÈîôËØØÔºå‰ΩÜÊòØÊàëÂøòËÆ∞ÊàëÊÄé‰πàÊàêÂäü‰∫Ü ÂàõÂª∫‰∏Ä‰∏™Êñ∞È°πÁõÆ Áà¨ÂèñÂçöÂÆ¢ÊñáÁ´†ÁöÑÊ†áÈ¢òÔºåÈìæÊé•‰ª•ÂèäÊñáÁ´†ÁöÑÂÜÖÂÆπ scrapy startproject blog ÂÆö‰πâÁà¨Ëô´ÁöÑÁõÆÊ†áÂ≠óÊÆµitems.py‰∏≠ÂÆö‰πâ 123456789import scrapy# ÂÆö‰πâÈúÄË¶Å‰øùÂ≠òÁöÑÂ≠óÊÆµclass BlogItem(scrapy.Item): # define the fields for your item here like: # name = scrapy.Field() title = scrapy.Field() link = scrapy.Field() content = scrapy.Field() ÊåâÁÖßÈªòËÆ§Ê®°ÊùøÂàõÂª∫‰∏Ä‰∏™Áà¨Ëô´ÔºàËé∑ÂèñÁΩëÈ°µÁöÑÊ∫ê‰ª£Á†ÅÔºâ scrapy genspider santonstang www.santostang.comÂÆö‰πâ‰∫Ü‰∏Ä‰∏™Âêç‰∏∫santostangÁöÑÁà¨Ëô´ÔºåÂπ∂Âà∂ÂÆö‰∫ÜÁà¨ÂèñÁöÑurl‰∏∫www.santostang.com santostang.py‰∏∫Áà¨Ëô´ÁöÑ‰ª£Á†ÅÔºåÂÖ∂‰∏≠Êèê‰æõÁöÑparse()ÊñπÊ≥ïÔºöÂèØ‰ª•Ëé∑ÂèñÁΩëÈ°µÁöÑresponse==„Äãresponse.text Â∞Üwww.santostang.comÁΩëÈ°µÁöÑÊ∫ê‰ª£Á†ÅÂÜôÂÖ•Âà∞index.htmlÔºàÊ≥®ÊÑèËøô‰∏™html‰∏éÊï¥‰∏™È°πÁõÆÂ§Ñ‰∫éÂêåÁ∫ßÁªìÊûÑ‰∏≠Ôºâ‰∏≠ 123456789101112131415# -*- coding: utf-8 -*-import scrapy# ÂàõÂª∫ÁöÑÁà¨Ëô´Âô®ÔºåÂøÖÈ°ªË¶ÅÁªßÊâøscrapy.SpiderÁ±ªclass SantostangSpider(scrapy.Spider): name = 'santostang' #Áà¨Ëô´Âô®ÁöÑÂîØ‰∏ÄÂêçÂ≠ó allowed_domains = ['www.santostang.com'] #ÊêúÁ¥¢ÁöÑÂüüÂêçËåÉÂõ¥ÔºåËßÑÂÆöÁà¨Ëô´Âè™‰ºöÁà¨ÂèñËøô‰∏™ÂüüÂêç‰∏ãÁöÑÁΩëÈ°µ start_urls = ['http://www.santostang.com/'] #Áà¨Ëô´Âô®Âú®ÂêØÂä®Êó∂‰ºöÁà¨ÂèñÁöÑurlÂàóË°® def parse(self, response): print(response.text) filename = "index.html" with open(filename,'w', encoding="utf-8") as f: f.write(response.text) ÊâßË°åÁà¨Ëô´ÔºåÂú®È°πÁõÆÁöÑÁõÆÂΩï‰∏ãÊâßË°åscrapy crawl santostang(Áà¨Ëô´Âô®ÁöÑÂêçÂ≠ó) ÊèêÂèñÂÜÖÂÆπÔºå‰øùÂ≠òÊï∞ÊçÆ Â∞ÜÊèêÂèñÁöÑÊï∞ÊçÆÂ∞ÅË£ÖÂà∞Êàë‰ª¨ÂÆö‰πâÁöÑitems.py‰∏≠ÁöÑBlogItemÁ±ª‰∏≠ Áà¨Ëô´Âô®‰ª£Á†Å 123456789101112131415161718192021222324252627282930313233# -*- coding: utf-8 -*-import scrapyimport sysfrom bs4 import BeautifulSoupfrom blog.items import BlogItem# ÂàõÂª∫ÁöÑÁà¨Ëô´Âô®ÔºåÂøÖÈ°ªË¶ÅÁªßÊâøscrapy.SpiderÁ±ªclass SantostangSpider(scrapy.Spider): name = 'santostang' #Áà¨Ëô´Âô®ÁöÑÂîØ‰∏ÄÂêçÂ≠ó allowed_domains = ['www.santostang.com'] #ÊêúÁ¥¢ÁöÑÂüüÂêçËåÉÂõ¥ÔºåËßÑÂÆöÁà¨Ëô´Âè™‰ºöÁà¨ÂèñËøô‰∏™ÂüüÂêç‰∏ãÁöÑÁΩëÈ°µ start_urls = ['http://www.santostang.com/'] #Áà¨Ëô´Âô®Âú®ÂêØÂä®Êó∂‰ºöÁà¨ÂèñÁöÑurlÂàóË°® # def parse(self, response): # print(response.text) # filename = "index.html" # with open(filename,'w', encoding="utf-8") as f: # f.write(response.text) def parse(self, response): items = [] soup = BeautifulSoup(response.text, "lxml") title_list = soup.find_all("h1", class_="post-title") for i in range(len(title_list)): item = BlogItem() title = title_list[i].a.text.strip() link = title_list[i].a["href"] # ÂèòÊàêÂ≠óÂÖ∏ item["title"] = title item["link"] = link items.append(item) return items Â∞ÜÊäìÂèñÂà∞ÁöÑÂÜÖÂÆπËæìÂá∫‰∏∫Êñá‰ª∂ÁöÑÂΩ¢Âºè scrapy crawl Áà¨Ëô´Âêç -o Êñá‰ª∂Âêç.ÂêéÁºÄ ÈááÁî®ÁÆ°ÈÅìpipelinesÂäüËÉΩÂ≠òÂÇ®Êï∞ÊçÆ Êñá‰ª∂Â≠òÊîæË∑ØÂæÑÈóÆÈ¢òÔºåÈ¶ñÂÖàÊàë‰ª¨Êï¥‰∏™È°πÁõÆÊòØblog ÂΩìÊàë‰ª¨‰ΩøÁî®file_path = &quot;blog/result.txt&quot;ÔºåÊñá‰ª∂Â≠òÊîæÂú®blog/result.txt ÂΩìÊàë‰ª¨‰ΩøÁî®file_path = &quot;result.txt&quot;Ôºåresult.txt‰∏éblogÂ§Ñ‰∫éÂêåÁ∫ß ‰ΩøÁî®ÁÆ°ÈÅìÂ≠òÂÇ®Êï∞ÊçÆ pipelines.py 1234567891011121314151617181920# -*- coding: utf-8 -*-# Define your item pipelines here## Don't forget to add your pipeline to the ITEM_PIPELINES setting# See: https://docs.scrapy.org/en/latest/topics/item-pipeline.htmlclass BlogPipeline(object): #‰øùÂ≠òÁöÑÂú∞ÂùÄ,‰øùÂ≠òÂú®Êï¥‰∏™blogÁöÑÊñá‰ª∂Â§π‰∏≠ file_path = "blog/result.txt" def __init__(self): self.article = open(self.file_path, "a+", encoding="utf-8") # ÂÆö‰πâÁÆ°ÈÅìÁöÑÂ§ÑÁêÜÊñπÊ≥ï def process_item(self, item, spider): title = item["title"] link = item["link"] output = title + "\t" + link + "\n" self.article.write(output) return item ‰øÆÊîπsettings.pyÔºåÂêØÂä®ÁÆ°ÈÅìÂäüËÉΩ ÂëΩ‰ª§Ë°åËøêË°åÁà¨Ëô´scrapy crawl Áà¨Ëô´Âêç]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∫åÂèâÊ†ëÁöÑÈïúÂÉè]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Êìç‰ΩúÁªôÂÆöÁöÑ‰∫åÂèâÊ†ëÔºåÂ∞ÜÂÖ∂ÂèòÊç¢‰∏∫Ê∫ê‰∫åÂèâÊ†ëÁöÑÈïúÂÉè„ÄÇ ÊÄùË∑ØËøõË°åÂÖàÂ∫èÈÅçÂéÜÂà∞Êüê‰∏™ËäÇÁÇπÔºåÈ¶ñÂÖàÂà§Êñ≠Ëøô‰∏™ËäÇÁÇπÊòØ‰∏çÊòØÂè∂Â≠êÁªìÁÇπÔºåÂ¶ÇÊûú‰∏çÊòØÔºåÂ∞±Â∞ÜËøô‰∏™ËäÇÁÇπÁöÑÂ∑¶Âè≥Â≠©Â≠êËäÇÁÇπËøõË°å‰∫§Êç¢ÔºåÂΩìÊâÄÊúâÁöÑÈùûÂè∂Â≠êÁªìÁÇπ‰∫§Êç¢ÂÆåÊØïÂêéÂ∞±ÂæóÂà∞ÈïúÂÉè‰∫åÂèâÊ†ë‰∫Ü Á®ãÂ∫èËøêË°åËøáÁ®ãÔºàÂ¶ÇÂõæÔºâ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677#include &lt;iostream&gt;using namespace std;typedef struct TreeNode&#123; int val; struct TreeNode *left; struct TreeNode *right; TreeNode(int x) : val(x), left(NULL), right(NULL) &#123; &#125;&#125; TreeNode;//ÂÖàÂ∫èÂàõÂª∫TreeNode *Create_tree()&#123; TreeNode *T; int val; cin &gt;&gt; val; if (val == 0) //Âè∂Â≠êÁªìÁÇπÁî®0Ê†áËÆ∞ return NULL; else &#123; T = new TreeNode(val); T-&gt;left = Create_tree(); T-&gt;right = Create_tree(); &#125; return T;&#125;//ÂÖàÂ∫èÈÅçÂéÜvoid pre_print(TreeNode *T)&#123; if (T) &#123; cout &lt;&lt; T-&gt;val &lt;&lt; " "; pre_print(T-&gt;left); pre_print(T-&gt;right); &#125;&#125;class Solution&#123;public: void Mirror(TreeNode *pRoot) &#123; if (pRoot == NULL || (pRoot-&gt;left == NULL &amp;&amp; pRoot-&gt;right == NULL)) //Âè∂Â≠êÁªìÁÇπÂ∞±‰∏çÁî®‰∫§Êç¢ return; TreeNode *temp = pRoot-&gt;left; pRoot-&gt;left = pRoot-&gt;right; pRoot-&gt;right = temp; if (pRoot-&gt;left) Mirror(pRoot-&gt;left); if (pRoot-&gt;right) Mirror(pRoot-&gt;right); &#125;&#125;;int main()&#123; TreeNode *root; root = Create_tree(); cout &lt;&lt; "ÂÖàÂ∫èÈÅçÂéÜ‰∏∫Ôºö"; pre_print(root); cout &lt;&lt; endl; cout &lt;&lt; "ÈïúÂÉè‰∫§Êç¢Âêé‰∏∫Ôºö"; Solution so; so.Mirror(root); pre_print(root); return 0;&#125;/*ÊµãËØïÊ†∑‰æã8 6 5 0 0 7 0 0 10 9 0 0 11 0 0ÂÖàÂ∫èÈÅçÂéÜ‰∏∫Ôºö8 6 5 7 10 9 11 ÈïúÂÉè‰∫§Êç¢Âêé‰∏∫Ôºö8 10 11 9 6 7 5 */]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Ê†ë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Ê†ëÁöÑÂ≠êÁªìÊûÑ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏§Ê£µ‰∫åÂèâÊ†ëAÔºåBÔºåÂà§Êñ≠BÊòØ‰∏çÊòØAÁöÑÂ≠êÁªìÊûÑ„ÄÇÔºàpsÔºöÊàë‰ª¨Á∫¶ÂÆöÁ©∫Ê†ë‰∏çÊòØ‰ªªÊÑè‰∏Ä‰∏™Ê†ëÁöÑÂ≠êÁªìÊûÑÔºâ ÊÄùË∑Ø Ê∂âÂèäÂà∞Ê†ëÁöÑÈóÆÈ¢òÔºåÂ§ßÂ§öÈÉΩÂèØ‰ª•Áî®ÈÄíÂΩíÁöÑÊñπÊ≥ïËøõË°åËß£ÂÜ≥ È¶ñÂÖàÂà§Êñ≠ËäÇÁÇπÊòØÂê¶‰∏ÄÊ†∑ÔºåÂ¶ÇÊûú‰∏ÄÊ†∑ÔºåÂ∞±ÈÄíÂΩíÂà§Êñ≠ËäÇÁÇπÁöÑÂ∑¶ËäÇÁÇπÂíåÂè≥ËäÇÁÇπÔºõÂ¶ÇÊûú‰∏ç‰∏ÄÊ†∑ÔºåÂ∞±ËΩ¨ÂéªËäÇÁÇπÁöÑÂ∑¶ËäÇÁÇπÂíåÂè≥ËäÇÁÇπÈÄíÂΩíÂà§Êñ≠ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÂ∞±ÊòØÈÄíÂΩíÁöÑÁªàÊ≠¢Êù°‰ª∂ ÂèØËÉΩroot2Âà∞ËææÁ©∫ÁöÑÊó∂ÂÄôÔºå‰ΩÜÊòØroot1ËøòÊ≤°Êúâ‰∏∫Á©∫Ôºå‰ΩÜÊòØËøôÁßçÊÉÖÂÜµÊòØÁ¨¶ÂêàÊ†ëÁöÑÂ≠êÁªìÊûÑÁöÑÂÆö‰πâÁöÑ ÂΩìroot1Âà∞ËææÁ©∫ÁöÑÊó∂ÂÄôÔºå‰ΩÜÊòØroot2Âç¥ËøòÊ≤°Êúâ‰∏∫Á©∫ÔºåËøôÊó∂Â∞±‰∏çÊòØÊ†ëÁöÑÂ≠êÁªìÊûÑ‰∫Ü=-= AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798#include &lt;iostream&gt;using namespace std;typedef struct TreeNode&#123; int val; struct TreeNode *left; struct TreeNode *right; TreeNode(int x) : val(x), left(NULL), right(NULL) &#123; &#125;&#125; TreeNode;//ÂÖàÂ∫èÂàõÂª∫TreeNode *Create_tree()&#123; TreeNode *T; int val; cin &gt;&gt; val; if (val == 0) //Âè∂Â≠êÁªìÁÇπÁî®0Ê†áËÆ∞ return NULL; else &#123; T = new TreeNode(val); T-&gt;left = Create_tree(); T-&gt;right = Create_tree(); &#125; return T;&#125;//ÂÖàÂ∫èÈÅçÂéÜvoid pre_print(TreeNode *T)&#123; if (T) &#123; cout &lt;&lt; T-&gt;val &lt;&lt; " "; pre_print(T-&gt;left); pre_print(T-&gt;right); &#125;&#125;bool is_part_of_tree(TreeNode *root1, TreeNode *root2)&#123; if (root2 == NULL) //Â≠êÊ†ëÂà§Êñ≠Âà∞Á©∫ÁöÑ‰ΩçÁΩÆ‰∫Ü,ÂèØËÉΩroot1Êï∞Ëøò‰∏çÊòØ‰∏∫Á©∫Ôºå‰ΩÜÊòØËøôÊ†∑‰πüÊòØÁ¨¶Âêàroot2ÊòØroot1ÁöÑÂ≠êÁªìÊûÑÁöÑÂéüÂàô return true; if (root1 == NULL) //Ê†ë‰∏∫Á©∫Ôºå‰ΩÜÊòØÂ≠êÊ†ëËøòÊ≤°Êúâ‰∏∫Á©∫ÔºåÁªìÊûúËØ¥Êòéroot2‰∏çÊòØroot1ÁöÑÂ≠êÁªìÊûÑ return false; if (root1-&gt;val != root2-&gt;val) return false; return is_part_of_tree(root1-&gt;left, root2-&gt;left) &amp;&amp; is_part_of_tree(root1-&gt;right, root2-&gt;right);&#125;//Âà§Êñ≠Ê†ëÁöÑÂ≠êÁªìÊûÑclass Solution&#123;public: bool HasSubtree(TreeNode *pRoot1, TreeNode *pRoot2) &#123; bool res = false; if (pRoot1 &amp;&amp; pRoot2) &#123; if (pRoot1-&gt;val == pRoot2-&gt;val) res = is_part_of_tree(pRoot1, pRoot2); if (!res) res = HasSubtree(pRoot1-&gt;left, pRoot2); //ÈÄíÂΩíÂà§Êñ≠Â∑¶Â≠êÊ†ë if (!res) res = HasSubtree(pRoot1-&gt;right, pRoot2);//ÈÄíÂΩíÂà§Êñ≠Âè≥Â≠êÊ†ë &#125; return res; &#125;&#125;;int main()&#123; TreeNode *root1, *root2; root1 = Create_tree(); cout &lt;&lt; "Á¨¨‰∏Ä‰∏™Ê†ëÁöÑÂÖàÂ∫èÈÅçÂéÜ‰∫åÂèâÊ†ë‰∏∫Ôºö"; pre_print(root1); cout &lt;&lt; endl; root2 = Create_tree(); cout &lt;&lt; "Â≠êÊ†ëÁöÑÂÖàÂ∫èÈÅçÂéÜ‰∏∫Ôºö"; pre_print(root2); cout &lt;&lt; endl; cout &lt;&lt; "Âà§Êñ≠‰∏§‰∏™‰∫åÂèâÊ†ëÊòØÂê¶ÊòØÂµåÂ•óÂÖ≥Á≥ª" &lt;&lt; endl; Solution so; cout &lt;&lt; so.HasSubtree(root1, root2) &lt;&lt; endl; return 0;&#125;/*ÊµãËØïÊ†∑‰æãÔºö2 3 5 0 0 6 0 0 4 0 0Á¨¨‰∏Ä‰∏™Ê†ëÁöÑÂÖàÂ∫èÈÅçÂéÜ‰∫åÂèâÊ†ë‰∏∫Ôºö2 3 5 6 4 3 5 0 0 6 0 0 Â≠êÊ†ëÁöÑÂÖàÂ∫èÈÅçÂéÜ‰∏∫Ôºö3 5 6 Âà§Êñ≠‰∏§‰∏™‰∫åÂèâÊ†ëÊòØÂê¶ÊòØÂµåÂ•óÂÖ≥Á≥ª1*/ ÊÄªÁªì Ë¶ÅÊ≥®ÊÑèÂØπÁ©∫ÊåáÈíàÁöÑÂà§Êñ≠Ôºå‰∏ç‰ªÖÂú®ÈìæË°®‰∏≠ÔºåÂú®Ê†ëÂΩ¢ÁªìÊûÑÊõ¥Ë¶ÅÂä†‰ª•Âá∫Áé∞ ÂØπÊ†ëÔºåÁî®ÈÄíÂΩíÂ§ßÊ≥ï Ë¶ÅÊ≥®ÊÑèÁâπÊÆäÊÉÖÂÜµÁöÑËæìÂÖ•ÊµãËØïÔºåÊØîÂ¶ÇÁ©∫ÊåáÈíàÁ≠âÁ≠â„ÄÇ]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Ê†ë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Âú®O1Êó∂Èó¥Âà†Èô§ÈìæË°®ËäÇÁÇπ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%9C%A8O1%E6%97%B6%E9%97%B4%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÁªôÂÆöÂçïÂêëÈìæË°®ÁöÑÂ§¥ÊåáÈíàÂíå‰∏Ä‰∏™ÁªìÁÇπÊåáÈíàÔºåÂÆö‰πâ‰∏Ä‰∏™ÂáΩÊï∞Âú® $O(1)$ Êó∂Èó¥Âà†Èô§ËØ•ÁªìÁÇπ„ÄÇ ÊÄùË∑Ø Á¨¨‰∏Ä‰∏™ÊÄùË∑ØÂ∞±ÊòØÈ°∫Â∫èÊü•ÊâæÁÑ∂ÂêéÊâæÂà∞Ë¶ÅÂà†Èô§ËäÇÁÇπÁöÑ‰ΩçÁΩÆÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n)$ Â¶ÇÊûúÊÉ≥Ë¶ÅÂú®$O(1)$Êó∂Èó¥ÂÜÖÂà†Èô§ËäÇÁÇπÔºåÁªôÂá∫‰∏Ä‰∏™Ë¶ÅÂà†Èô§ÁöÑËäÇÁÇπÔºåÊàë‰ª¨ÂèØ‰ª•ÂæàÂø´ÊâæÂà∞Ëøô‰∏™ËäÇÁÇπ‰∏ã‰∏Ä‰∏™ËäÇÁÇπ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÂ∞±ÊòØËøô‰∏™ÁÆóÊ≥ïÁöÑÂâçÊèêÂ∞±ÊòØË¶ÅÂà†Èô§ÁöÑËäÇÁÇπÂú®Ëøô‰∏™ÈìæË°®‰∏≠ÔºåÂõ†Ê≠§Âà§Êñ≠‰∏Ä‰∏™ËäÇÁÇπÊòØÂê¶Âú®Ëøô‰∏™ÈìæË°®‰∏≠ËøòÊòØÈúÄË¶Å$O(n)$ÁöÑÊó∂Èó¥ Â¶ÇÊûúËøô‰∏™ËäÇÁÇπÂú®ÈìæË°®‰∏≠ÔºåÈúÄË¶ÅÊ≥®ÊÑèÂ¶ÇÊûúËøô‰∏™ËäÇÁÇπÊòØÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπÔºåÈÇ£‰πàÈúÄË¶ÅÊ≥®ÊÑè‰∏§‰∏™ÊÉÖÂÜµÔºö Âè™Êúâ‰∏Ä‰∏™ËäÇÁÇπÔºåÈÇ£‰πàÂ∞±ÊòØË¶ÅÂà†Èô§ÁöÑËäÇÁÇπÊó¢ÊòØÂ§¥ÁªìÁÇπÂèàÊòØÂ∞æÁªìÁÇπ ÈìæË°®‰∏≠ÊúâÂ§ö‰∏™ËäÇÁÇπÔºåË¶ÅÂà†Èô§ÁöÑËäÇÁÇπÊòØÂ∞æÁªìÁÇπÔºåÈÇ£‰πàÈúÄË¶ÅËä±Ë¥π$O(n)$ÁöÑÊó∂Èó¥Êù•Êü•Êâæ Âõ†Ê≠§Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ÔºåÔºàÂâçÊèêÊòØËøô‰∏™ËäÇÁÇπÊòØÂú®Ëøô‰∏™ÈìæË°®‰∏≠Ôºâ$${(n-1)*O(1) + O(n) \over n} = O(1)$$ ‰ΩÜÊòØÂú®ÈìæË°®‰∏≠ÊâæÂà∞ÊâÄË¶ÅÂà†Èô§ÁöÑËäÇÁÇπËøòÊòØÈúÄË¶Å$O(n)$ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÁöÑ„ÄÇÊâÄ‰ª•ÊàëÊÑüËßâËøô‰∏™‰∏§ÁßçÊÄùË∑ØÈÉΩÂ∑Æ‰∏çÂ§öÔºå‰ΩÜÊòØÂà†Èô§ÁöÑËäÇÁÇπÁöÑËØùÁ¨¨‰∫åÁßçÊÄùË∑ØÂ∞±ËÉΩÂÆûÁé∞$O(1)$Êó∂Èó¥Â§çÊùÇÂ∫¶ÂÜÖÂÆåÊàê„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121#include &lt;iostream&gt;using namespace std;typedef struct ListNode&#123; int values; struct ListNode *next;&#125; ListNode, *L;void ListInsert(L &amp;node)&#123; L p = node; L q = new ListNode; //q‰∏∫Ë¶ÅÊèíÂÖ•ÁöÑËäÇÁÇπ q-&gt;next = NULL; cin &gt;&gt; q-&gt;values; while (p-&gt;next != NULL) &#123; p = p-&gt;next; &#125; q-&gt;next = p-&gt;next; p-&gt;next = q;&#125;void print(L node)&#123; while (node != NULL) &#123; cout &lt;&lt; node-&gt;values &lt;&lt; endl; node = node-&gt;next; &#125;&#125;//Âú®O(1)Êó∂Èó¥ÂÜÖÂà†Èô§ËäÇÁÇπ,ÂâçÊèêÊòØË¶ÅÂà†Èô§ÁöÑËäÇÁÇπÂú®Ëøô‰∏™ÈìæË°®‰∏≠ListNode *delete_node(L phead, ListNode *tobedeleted_node)&#123; if (phead == NULL || tobedeleted_node == NULL) return NULL; //‰∏çÊòØÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπ if (tobedeleted_node-&gt;next != NULL) &#123; ListNode *pnext = tobedeleted_node-&gt;next; tobedeleted_node-&gt;values = pnext-&gt;values; tobedeleted_node-&gt;next = pnext-&gt;next; delete pnext; pnext = NULL; &#125; //ÈìæË°®Âè™Êúâ‰∏Ä‰∏™ËäÇÁÇπÔºåÂà†Èô§Â§¥ÁªìÁÇπÔºà‰πüÊòØÂ∞æÁªìÁÇπÔºâ else if (phead == tobedeleted_node) &#123; delete tobedeleted_node; tobedeleted_node = NULL; phead = NULL; &#125; //ÈìæË°®‰∏≠ÊúâÂ§ö‰∏™ËäÇÁÇπÔºåÂà†Èô§Â∞æÁªìÁÇπ,Âè™ËÉΩÈ°∫Â∫èÁõ¥Êé•Êü•ÊâæÔºåÂõ†‰∏∫Â∞æÁªìÁÇπÊåáÂêë‰∏∫next else &#123; ListNode *pNode = phead; while (pNode-&gt;next != tobedeleted_node) &#123; pNode = pNode-&gt;next; &#125; pNode-&gt;next = NULL; delete tobedeleted_node; tobedeleted_node = NULL; &#125; return phead;&#125;ListNode *find_node(ListNode *L, int value)&#123; ListNode *p = L; while (p != NULL) &#123; if (p-&gt;values == value) return p; p = p-&gt;next; &#125;&#125;int main()&#123; L a; a = new ListNode; a-&gt;next = NULL; a-&gt;values = 99; for (int i = 0; i &lt; 3; i++) &#123; ListInsert(a); &#125; cout &lt;&lt; "ËæìÂá∫ÈìæË°®‰∏∫Ôºö" &lt;&lt; endl; print(a); cout &lt;&lt; "Âà†Èô§Âêé‰∏∫Ôºö" &lt;&lt; endl; print(delete_node(a, find_node(a, 3))); return 0;&#125;/*1 2 3ËæìÂá∫ÈìæË°®‰∏∫Ôºö99123Âà†Èô§Âêé‰∏∫Ôºö9913*//*1 2 3ËæìÂá∫ÈìæË°®‰∏∫Ôºö99123Âà†Èô§Âêé‰∏∫Ôºö9912*/ Âá∫Áé∞ÈóÆÈ¢òÂ•ΩÂÉèLinuxÁöÑbashÂëΩ‰ª§‰∏çËÉΩÈöè‰æøÂá∫Áé∞Êã¨Âè∑ÔºåÂõ†‰∏∫Êú¨Êù•ÊàëÁöÑcÊñá‰ª∂Âêç‰∏∫ÔºöÂú®O(1)Êó∂Èó¥Âà†Èô§ÈìæË°®ËäÇÁÇπÔºå‰ΩÜÊòØÂá∫Áé∞ÁºñËØëÈîôËØØ=-=]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊâìÂç∞1Âà∞ÊúÄÂ§ßÁöÑn‰ΩçÊï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%89%93%E5%8D%B01%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆËæìÂÖ•Êï∞Â≠ónÔºåÊåâÈ°∫Â∫èÊâìÂç∞Âá∫‰ªé1ÊúÄÂ§ßÁöÑn‰ΩçÂçÅËøõÂà∂Êï∞„ÄÇÊØîÂ¶ÇËæìÂÖ•3ÔºåÂàôÊâìÂç∞Âá∫1„ÄÅ2„ÄÅ3‰∏ÄÁõ¥Âà∞ÊúÄÂ§ßÁöÑ3‰ΩçÊï∞Âç≥999„ÄÇ ÊÄùË∑Ø 1Âà∞ÊúÄÂ§ßÁöÑn‰ΩçÂçÅËøõÂà∂Êï∞ÔºåÂÖ∂ÂÆûÂ∞±ÊòØn‰ΩçÊï∞Â≠óÁöÑÂÖ®ÊéíÂàó ÈúÄË¶ÅËÄÉËôëlong long‰∏çËÉΩÂ≠òÊîæÁöÑÊï∞Â≠óÔºåÂè™ËÉΩÁî®È´òÁ≤æÂ∫¶ÁöÑÊÄùÊÉ≥Ôºå‰πüÂ∞±ÊòØÁî®Êï∞ÁªÑÂ≠òÊîæÊï∞Â≠ó Á¨¶ÂêàÊ≠£Â∏∏ÁöÑ‰∫§‰∫íÊñπÂºèÔºå‰πüÂ∞±ÊòØ‰ªéÁ¨¨‰∏Ä‰∏™Èùû0ÁöÑ‰ΩçÁΩÆÂºÄÂßãËæìÂá∫ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;iostream&gt;using namespace std;#define maxsize 100char number[maxsize];void print(char *number) //‰ªéÁ¨¨‰∏Ä‰∏™‰∏ç‰∏∫0ÁöÑ‰ΩçÁΩÆÂºÄÂßãËæìÂá∫&#123; int flag = 0; for (int i = 0; i &lt; maxsize; i++) &#123; if (flag == 0 &amp;&amp; number[i] != '0') flag = 1; if (flag == 1) cout &lt;&lt; number[i]; &#125; cout &lt;&lt; endl;&#125;void print_number(char *number, int index, int n) //ÈÄíÂΩíÁîüÊàê--Êú¨Ë¥®ÂÆûÁé∞ÂÖ®ÊéíÂàó&#123; if (n &lt;= 0) //ÁâπÊÆäËæìÂÖ•Â§ÑÁêÜ return; if (index == n) &#123; print(number); return; &#125; for (int i = 0; i &lt; 10; i++) &#123; number[index] = i + '0'; print_number(number, index + 1, n); &#125;&#125;int main()&#123; print_number(number, 0, 3); return 0;&#125; ÊÄªÁªì ‰π¶‰∏äÂâëÊåáofferÁöÑÂÜôÊ≥ïÂÆûÂú®ÁúãÂæó‰∏ÄËÑ∏ËíôËîΩ=-= Âè™Ë¶ÅÁêÜËß£‰∫ÜÁÆóÊ≥ïÔºåËøòÊòØËá™Â∑±ÂÜôÂêß[ÈÄÉ]]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÂÖ®ÊéíÂàó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÂêàÂπ∂‰∏§‰∏™ÊéíÂ∫èÁöÑÈìæË°®]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏§‰∏™ÂçïË∞ÉÈÄíÂ¢ûÁöÑÈìæË°®ÔºåËæìÂá∫‰∏§‰∏™ÈìæË°®ÂêàÊàêÂêéÁöÑÈìæË°®ÔºåÂΩìÁÑ∂Êàë‰ª¨ÈúÄË¶ÅÂêàÊàêÂêéÁöÑÈìæË°®Êª°Ë∂≥ÂçïË∞É‰∏çÂáèËßÑÂàô„ÄÇ ÊÄùË∑ØÊñ∞Âª∫‰∏Ä‰∏™ÈìæË°®Â§¥ÔºåÁÑ∂ÂêéÊØîËæÉ‰∏§‰∏™ÈìæË°®ÊØè‰∏™ËäÇÁÇπ‰πãÈó¥ÁöÑÂ§ßÂ∞èÂÖ≥Á≥ªÔºåÁÑ∂ÂêéÂ∞ÜËäÇÁÇπÊèíÂÖ•Âà∞Êñ∞ÁöÑÈìæË°®‰∏≠ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233class Solution&#123;public: ListNode *Merge(ListNode *pHead1, ListNode *pHead2) &#123; if (pHead1 == NULL) return pHead2; if (pHead2 == NULL) return pHead1; ListNode *pHead3 = new ListNode(-1); ListNode *p1 = pHead1; ListNode *p2 = pHead2; ListNode *p3 = pHead3; while (p1 &amp;&amp; p2) &#123; if (p1-&gt;val &gt;= p2-&gt;val) &#123; p3-&gt;next = p2; p3 = p2; p2 = p2-&gt;next; &#125; else &#123; p3-&gt;next = p1; p3 = p1; p1 = p1-&gt;next; &#125; &#125; p3-&gt;next = (p1 != NULL) ? p1 : p2; return pHead3-&gt;next; &#125;&#125;; ÊµãËØïËøêË°å‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293#include &lt;iostream&gt;using namespace std;typedef struct ListNode&#123; int values; struct ListNode *next;&#125; ListNode, *L;void ListInsert(L &amp;node)&#123; L p = node; L q = new ListNode; //q‰∏∫Ë¶ÅÊèíÂÖ•ÁöÑËäÇÁÇπ q-&gt;next = NULL; // cin &gt;&gt; q-&gt;values; while (p-&gt;next != NULL) &#123; p = p-&gt;next; &#125; q-&gt;next = p-&gt;next; p-&gt;next = q;&#125;void print(L node)&#123; while (node != NULL) &#123; cout &lt;&lt; node-&gt;values &lt;&lt; endl; node = node-&gt;next; &#125;&#125;class Solution&#123;public: ListNode *Merge(ListNode *pHead1, ListNode *pHead2) &#123; if (pHead1 == NULL) return pHead2; if (pHead2 == NULL) return pHead1; ListNode *pHead3 = new ListNode; ListNode *p1 = pHead1; ListNode *p2 = pHead2; ListNode *p3 = pHead3; while (p1 &amp;&amp; p2) &#123; if (p1-&gt;values &gt;= p2-&gt;values) &#123; p3-&gt;next = p2; p3 = p2; p2 = p2-&gt;next; &#125; else &#123; p3-&gt;next = p1; p3 = p1; p1 = p1-&gt;next; &#125; &#125; p3-&gt;next = (p1 != NULL) ? p1 : p2; return pHead3-&gt;next; &#125;&#125;;int main()&#123; L a, b; a = new ListNode; a-&gt;next = NULL; a-&gt;values = 0; b = new ListNode; b-&gt;next = NULL; a-&gt;values = 1; for (int i = 0;i &lt; 3;i++) &#123; ListInsert(a); &#125; for (int i = 0;i &lt; 3;i++) &#123; ListInsert(b); &#125; cout &lt;&lt; "aÈìæË°®‰∏∫Ôºö" &lt;&lt;endl; print(a); cout &lt;&lt; "bÈìæË°®‰∏∫Ôºö" &lt;&lt;endl; print(b); Solution so; cout &lt;&lt; "ÂêàÂπ∂ÂêéÁöÑÈìæË°®‰∏∫Ôºö"&lt;&lt;endl; print(so.Merge(a,b)); return 0;&#125; Êèê‰∫§ËøáÁ®ã‰∏≠Âá∫Áé∞ÁöÑÈóÆÈ¢ò Âá∫Áé∞ÊÆµÈîôËØØÔºüÔºüÔºüÔºü(ÊàëÊòØ‰∏ÄËÑ∏ÊáµÈÄº)ÔºåÁªìÊûúÂèëÁé∞ÊòØÊàë‰∏ÄÂºÄÂßãÁöÑÂà§Êñ≠ÁâπÊÆäËØ≠Âè•ÁöÑÈóÆÈ¢ò ‰∏ÄÂºÄÂßãÂÜôÁöÑÂà§Êñ≠ËØ≠Âè•ÔºåÁÑ∂ÂêéÊèê‰∫§Âá∫Áé∞ÊÆµÈîôËØØÔºå‰ΩÜÊòØÊàë‰πüÊ≤°ÊúâË∂äÁïåËÆøÈóÆÂïäÔºåËøô‰∏™ÈîôËØØÊöÇÊó∂‰∏çËÉΩËß£ÂÜ≥=-=„ÄÇ 1234if (pHead1 == NULL &amp;&amp; pHead2-&gt;next) return pHead2;if (pHead2 == NULL &amp;&amp; pHead1-&gt;next) return pHead1; Êèê‰∫§Âá∫Áé∞ÁºñËØëÈîôËØØÔºåÂõ†‰∏∫ÊàëÁöÑÊµãËØï‰ª£Á†ÅÂíåËøô‰∏™È¢òÁõÆÁöÑÂèòÈáèÂíåÊï∞ÊçÆÁªìÊûÑÁöÑÂàùÂßãÂåñ‰∏ç‰∏ÄÊ†∑ÔºåËØ¥ÂÆûËØùÔºåÊèê‰∫§‰∏Ä‰∏™ÂáΩÊï∞ÊúâÁÇπÂ§™ÈöæÂèó‰∫Ü=-=]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÂèçËΩ¨ÈìæË°®]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™ÈìæË°®ÔºåÂèçËΩ¨ÈìæË°®ÂêéÔºåËæìÂá∫Êñ∞ÈìæË°®ÁöÑË°®Â§¥„ÄÇ ÊÄùË∑Ø Á¨¨‰∏ÄÁßçÊñπÊ≥ïÂ∞±ÊòØËÆæÁΩÆpreÔºàË°®Á§∫ÂΩìÂâçËäÇÁÇπÁöÑ‰∏ä‰∏Ä‰∏™ËäÇÁÇπÔºâÔºå nextÔºàË°®Á§∫ÂΩìÂâçËäÇÁÇπÁöÑ‰∏ã‰∏Ä‰∏™ËäÇÁÇπÔºâÔºåÂõ†‰∏∫Êàë‰ª¨Ë¶ÅÂèçËΩ¨ÈìæË°®ÔºåÊâÄ‰ª•Á¨¨‰∏Ä‰∏™ËäÇÁÇπÁªèËøáÂèçËΩ¨ÂêéÂ∞±ÊòØÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπÔºåÂõ†Ê≠§‰ªñÊåáÂêë‰∏∫NULLÔºåÂõ†Ê≠§preÂàùÂßãÂåñ‰∏∫NULL, Ê†∏ÂøÉ‰ª£Á†Å: next = ÂΩìÂâçËäÇÁÇπ-&gt;next; pre = ÂΩìÂâçËäÇÁÇπ-&gt;next; //‰πüÂ∞±ÊòØÂºÄÂßãÂèçËΩ¨ÔºåÊú¨Êù•ÊòØ 1‚Äì„Äã2ÔºåÂèòÊàê 2‚Äì„Äã1 pre = phead; //Êõ¥Êñ∞‰∏ã‰∏Ä‰∏™ËäÇÁÇπÁöÑÂâç‰∏Ä‰∏™ËäÇÁÇπ phead = next; //Êõ¥Êñ∞ÂΩìÂâçËäÇÁÇπ‰∏∫‰∏ã‰∏Ä‰∏™ËäÇÁÇπÔºå‰πüÂ∞±ÊòØÂè≥Áßª Âè¶Â§ñ‰∏ÄÁßçÊÄùË∑ØÂ∞±ÊòØËÆæÁΩÆ‰∏§‰∏™ÊåáÈíàp1,p2ÔºåÁÑ∂ÂêéËÆæÁΩÆ‰∏Ä‰∏™p3ÊåáÂêëÂ§¥ÁªìÁÇπÔºåÊ≥®ÊÑè‰∏çÊòØÈ¶ñÂÖÉËäÇÁÇπÔºåËøáÁ®ãÔºö head‚Äì&gt;1‚Äì&gt;2‚Äì&gt;3‚Äì&gt;4 ====&gt; head‚Äì&gt;2‚Äì&gt;1‚Äì&gt;3‚Äì&gt;4‚Ä¶‚Ä¶ ÊúÄÂêéÂèòÊàêhead‚Äì&gt;4‚Äì&gt;3‚Äì&gt;2‚Äì&gt;1 AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889#include &lt;iostream&gt;using namespace std;typedef struct ListNode&#123; int values; struct ListNode *next;&#125; ListNode, *L;void ListInsert(L &amp;node)&#123; L p = node; L q = new ListNode; //q‰∏∫Ë¶ÅÊèíÂÖ•ÁöÑËäÇÁÇπ q-&gt;next = NULL; // cin &gt;&gt; q-&gt;values; while (p-&gt;next != NULL) &#123; p = p-&gt;next; &#125; q-&gt;next = p-&gt;next; p-&gt;next = q;&#125;void print(L node)&#123; while (node != NULL) &#123; cout &lt;&lt; node-&gt;values &lt;&lt; endl; node = node-&gt;next; &#125;&#125;class Solution&#123;public: ListNode *ReverseList(ListNode *pHead) &#123; if (pHead == NULL || pHead-&gt;next == NULL) return pHead; ListNode *pre = NULL; ListNode *next = NULL; while (pHead) &#123; next = pHead-&gt;next; pHead-&gt;next = pre; pre = pHead; pHead = next; &#125; return pre; &#125; ListNode *ReverseList_2(ListNode *phead) &#123; if (phead == NULL || phead-&gt;next == NULL) return phead; ListNode *p1, *p2; p1 = phead; //p1ÊåáÂêëÈ¶ñÂÖÉËäÇÁÇπ p2 = p1-&gt;next; ListNode *p3 = new ListNode; //p3Â∞±ÊòØÁõ∏ÂΩì‰∫éÂ§¥ÁªìÁÇπ p3-&gt;next = phead; while (p2) &#123; p1-&gt;next = p2-&gt;next; p2-&gt;next = p3-&gt;next; p3-&gt;next = p2; p2 = p1-&gt;next; &#125; return p3-&gt;next; &#125;&#125;;int main()&#123; L a; a = new ListNode; a-&gt;next = NULL; a-&gt;values = 99; for (int i = 0; i &lt; 3; i++) &#123; ListInsert(a); //ÂâçÊèíÊ≥ï &#125; print(a); //ÊâìÂç∞ÈìæË°® Solution so; cout &lt;&lt; "ÂèçËΩ¨ÈìæË°®" &lt;&lt; endl; // print(so.ReverseList(a)); print(so.ReverseList_2(a)); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÈìæË°®‰∏≠ÂÄíÊï∞Á¨¨k‰∏™ÁªìÁÇπ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E7%BB%93%E7%82%B9%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™ÈìæË°®ÔºåËæìÂá∫ËØ•ÈìæË°®‰∏≠ÂÄíÊï∞Á¨¨k‰∏™ÁªìÁÇπ„ÄÇ ÊÄùË∑Ø‰ΩøÁî®Âø´ÊÖ¢ÊåáÈíàÔºåÂÖàËÆ©Âø´ÊåáÈíàÂÖàËµ∞kÊ≠•ÔºåÁÑ∂Âêé‰∏§‰∏™ÊåáÈíà‰∏ÄËµ∑Ëµ∞ÔºåÂΩìÂø´ÊåáÈíàËµ∞Âà∞Â∞ΩÂ§¥ÁöÑÊó∂ÂÄôÔºåÊÖ¢ÊåáÈíàÊâÄÊåáÂêëÁöÑËäÇÁÇπÂ∞±ÊòØÂÄíÊï∞Á¨¨k‰∏™ËäÇÁÇπÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n)$,Á©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(1)$. ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢ò ÂΩìk = 0Êó∂ÔºåÊàñËÄÖkÂ§ß‰∫éÈìæË°®ÁöÑÈïøÂ∫¶ ÁªôÂá∫ÁöÑÈìæË°®‰∏∫Á©∫ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;stack&gt;using namespace std;typedef struct ListNode&#123; int values; struct ListNode *next;&#125; ListNode, *L;void ListInsert(L &amp;node)&#123; L p = node; L q = new ListNode; //q‰∏∫Ë¶ÅÊèíÂÖ•ÁöÑËäÇÁÇπ q-&gt;next = NULL; // cin &gt;&gt; q-&gt;values; while (p-&gt;next != NULL) &#123; p = p-&gt;next; &#125; q-&gt;next = p-&gt;next; p-&gt;next = q;&#125;void print(L node)&#123; while (node != NULL) &#123; cout &lt;&lt; node-&gt;values &lt;&lt; endl; node = node-&gt;next; &#125;&#125;class Solution &#123;public: ListNode* FindKthToTail(ListNode* pListHead, unsigned int k) &#123; if (PListHead == NULL || k == 0) return NULL; ListNode * fast = pListHead; ListNode * low = pListHead; while (k &gt; 0 &amp;&amp; fast) &#123; fast = fast-&gt;next; k--; &#125; if (k &gt; 0) //ÂΩìKÂ§ß‰∫é0ÔºåËØ¥Êòé‰∏äÈù¢ÁöÑwhileÁªàÊ≠¢Êù°‰ª∂ÊòØÂõ†‰∏∫fast == NULL,‰πüÂ∞±ÊòØkÊ≤°ÊúâÂáèÂ∞ë0ÔºåÁÑ∂ÂêéÈìæË°®Â∞±Ê≤°‰∫ÜÔºåËØ¥ÊòékÂ§ß‰∫éÈìæË°®ÈïøÂ∫¶ return NULL; while (fast) &#123; fast = fast-&gt;next; low = low-&gt;next; &#125; return low; &#125;&#125;;int main()&#123; L a; a = new ListNode; a-&gt;next = NULL; a-&gt;values = 99; for (int i = 0; i &lt; 3; i++) &#123; ListInsert(a); //ÂâçÊèíÊ≥ï &#125; print(a); //ÊâìÂç∞ÈìæË°® Solution so; a = so.FindKthToTail(a, 2); cout &lt;&lt; a-&gt;values &lt;&lt;endl; return 0;&#125; ÊÄªÁªì ËøôÁßçÈ¢òÊå∫ÂÖ∑ÊúâÂèÇËÄÉÊÑè‰πâÁöÑÔºåÈù¢ÂØπ‰∏çÊîØÊåÅÈöèÊú∫Â≠òÂèñÁöÑÊï∞ÊçÆÁªìÊûÑÊó∂ÔºåÂèØ‰ª•ÈááÁî®Âø´ÊÖ¢ÊåáÈíàÁöÑÂÅöÊ≥ï„ÄÇ]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Ë∞ÉÊï¥Êï∞ÁªÑÁöÑÈ°∫Â∫è‰ΩøÂ•áÊï∞‰Ωç‰∫éÂÅ∂Êï∞ÂâçÈù¢]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E7%9A%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑÔºåÂÆûÁé∞‰∏Ä‰∏™ÂáΩÊï∞Êù•Ë∞ÉÊï¥ËØ•Êï∞ÁªÑ‰∏≠Êï∞Â≠óÁöÑÈ°∫Â∫èÔºå‰ΩøÂæóÊâÄÊúâÁöÑÂ•áÊï∞‰Ωç‰∫éÊï∞ÁªÑÁöÑÂâçÂçäÈÉ®ÂàÜÔºåÊâÄÊúâÁöÑÂÅ∂Êï∞‰Ωç‰∫éÊï∞ÁªÑÁöÑÂêéÂçäÈÉ®ÂàÜÔºåÂπ∂‰øùËØÅÂ•áÊï∞ÂíåÂ•áÊï∞ÔºåÂÅ∂Êï∞ÂíåÂÅ∂Êï∞‰πãÈó¥ÁöÑÁõ∏ÂØπ‰ΩçÁΩÆ‰∏çÂèò„ÄÇ ÊÄùË∑Ø ÂèØ‰ª•Áî®Á©∫Èó¥Êç¢Êó∂Èó¥ÁöÑÂÅöÊ≥ïÔºåÁî®‰∏§‰∏™Êï∞ÁªÑÂàÜÂà´‰øùÂ≠òÂ•áÊï∞ÂíåÂÅ∂Êï∞ÔºåÊúÄÂêéÂú®ËøõË°åÂêàÂπ∂ÔºõÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(n)ÔºõÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n)$Ôºõ ‰ΩøÁî®ÂÜíÊ≥°ÊéíÂ∫èÔºåËøôÊ†∑Ë¶ÅÊ≥®ÊÑèÂ•áÊï∞ÂíåÂ•áÊï∞ÔºåÂÅ∂Êï∞ÂíåÂÅ∂Êï∞‰πãÈó¥ÁöÑÁõ∏ÂØπ‰ΩçÁΩÆ‰∏çÂèòÔºå‰πüÂ∞±ÊòØ‰øùÊåÅÁ®≥ÂÆöÊÄßÔºåËÄåÂÜíÊ≥°ÊéíÂ∫èÂÖ∑ÊúâÁ®≥ÂÆöÊÄßÁöÑÁâπÁÇπÔºå‰∏çËøáÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(n^2)$Ôºå Á©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫$O(1)$Ôºõ Âè¶Â§ñ‰∏ÄÁßçÊÄùË∑ØÂ∞±ÊòØ‰ΩøÁî®‰∏§‰∏™ÊåáÈíàÔºåÂ¶ÇÊûúÁ¨¨‰∏Ä‰∏™ÊåáÈíàÊåáÂêëÁöÑÊï∞ÊòØÂÅ∂Êï∞ÔºàÊ≠§Êó∂‰∏ãÊ†á‰∏∫aÔºâÔºåÂè¶‰∏Ä‰∏™ÊåáÈíàÂ∞±ÊâæÂà∞Á¨¨‰∏Ä‰∏™Â•áÊï∞Âπ∂ÊåáÂêë‰∫Ü‰ªñÔºàÊ≠§Êó∂‰∏ãÊ†á‰∏∫bÔºâÔºåÈÇ£‰πà‰∏ãÊ†á‰∏∫a~b-1‰πãÈó¥ÁöÑÊï∞Â∞±ÈÉΩÊòØÂÅ∂Êï∞ÔºåÁÑ∂ÂêéÂ∞±ÊääËøô‰∏™Âå∫Èó¥ÁöÑÊï∞ÁéãÂæÄÂâçÈù¢ÁßªÂä®‰∏Ä‰∏™Âçï‰ΩçÔºåÁÑ∂ÂêéÂú®ÊääÁ¨¨‰∫å‰∏™ÊåáÈíàÊåáÂêëÁöÑÊï∞Â§çÂà∂Âà∞Á¨¨‰∏Ä‰∏™ÊåáÈíàÊåáÂêëÁöÑ‰ΩçÁΩÆÔºõÊó∂Èó¥Â§çÊùÇÂ∫¶ÔºöÂÅáËÆæ‰∏Ä‰∏™Êï∞ÈúÄË¶ÅÁßªÂä®n‰∏™ÔºåÈÇ£‰πàn‰∏™Êï∞Â≠óÈúÄË¶ÅÁßªÂä®n*nÊ¨°Ôºå‰∏∫$O(n^2)$„ÄÇ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution&#123;public: void reOrderArray(vector&lt;int&gt; &amp;array) &#123; vector&lt;int&gt;odd; //Â•áÊï∞ vector&lt;int&gt;even; //ÂÅ∂Êï∞ for(int i = 0;i &lt; array.size();i++) &#123; if (array[i] % 2 == 1) odd.push_back(array[i]); else &#123; even.push_back(array[i]); &#125; &#125; int len = 0; for (int i = 0;i &lt; odd.size();i++) &#123; array[len++] = odd[i]; &#125; for(int i = 0;i &lt; even.size();i++) &#123; array[len++] = even[i]; &#125; &#125; void reOrderArray_by_bubble_sort(vector&lt;int&gt;&amp;array) &#123; int m = array.size()-1; while (m &gt; 0) &#123; for(int i = 0;i &lt; m;i++) &#123; if (array[i] % 2 == 0 &amp;&amp; array[i+1] %2 ==1) &#123; int temp = array[i]; array[i] = array[i+1]; array[i+1] = temp; &#125; &#125; m--; &#125; &#125;&#125;;int main()&#123; int arr[7] = &#123;1, 2, 3, 4, 5, 6, 7&#125;; vector&lt;int&gt; v(arr, arr + 7); Solution so; so.reOrderArray_by_bubble_sort(v); for (int i = 0; i &lt; v.size(); i++) cout &lt;&lt; v[i] &lt;&lt; endl; return 0;&#125; ÊÄªÁªì Èù¢ÂØπ‰∏Ä‰∫õÊéíÂ∫èÈóÆÈ¢òÔºåÊàë‰ª¨‰ºöÊÉ≥Âà∞ÂêÑÁßçÂêÑÊ†∑ÁöÑÊéíÂ∫èÁÆóÊ≥ïÔºåËøôÊó∂ÂÄôÈúÄË¶ÅËÄÉËôëÂÖ∂Á©∫Èó¥Â§çÊùÇÂ∫¶ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÂíåÂÖ∂Á®≥ÂÆöÊÄß]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
        <tag>ÊéíÂ∫è</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Êï∞ÂÄºÁöÑÊï¥Êï∞Ê¨°Êñπ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ ÁªôÂÆö‰∏Ä‰∏™doubleÁ±ªÂûãÁöÑÊµÆÁÇπÊï∞baseÂíåintÁ±ªÂûãÁöÑÊï¥Êï∞exponent„ÄÇÊ±ÇbaseÁöÑexponentÊ¨°Êñπ„ÄÇ ‰øùËØÅbaseÂíåexponent‰∏çÂêåÊó∂‰∏∫0 ÊÄùË∑Ø 0ÁöÑ0Ê¨°ÊñπÊ≤°ÊúâÊÑèÊÄù Ê≥®ÊÑèÊï∞ÁöÑË¥üÊï∞Ê¨°ÊñπÂèòÊàêÂÄíÊï∞ ‰ªª‰ΩïÊï∞ÁöÑ0Ê¨°ÊñπÁ≠â‰∫é1 0ÁöÑË¥üÊï∞Ê¨°ÊñπÊòØÊ≤°ÊúâÊÑè‰πâÁöÑÔºå‰ΩÜÊòØÊàëÁöÑ‰ª£Á†Å‰∏≠Âè™Ë¶ÅbaseÊòØ0ÔºåÂ∞±ËøîÂõû0Ôºå‰ΩÜÊòØÂÆûÈôÖ‰∏ä0ÁöÑË¥üÊï∞Ê¨°Êú¨Ë¥®‰∏äÊòØÊ≤°Êúâ‰ªª‰ΩïÊÑè‰πâÁöÑ„ÄÇ double baseÂà§Êñ≠baseÊòØÂê¶Á≠â‰∫é0Êó∂‰∏çËÉΩÁõ¥Êé•Âà§Êñ≠base==0ÔºåÂõ†‰∏∫ËÆ°ÁÆóÊú∫‰∏≠ÊµÆÁÇπÊï∞ÊòØ‰∏çÁ≤æÁ°ÆÂ≠òÂÇ®ÁöÑÔºåÂà§Êñ≠‰æùÊçÆÔºö‰∏§‰∏™Êï∞‰πãÂ∑ÆÁöÑÁªùÂØπÂÄºÂ∞è‰∫é‰∏Ä‰∏™ÂæàÂ∞èÁöÑÊï∞ÔºåÊàë‰ª¨Â∞±ËÉΩËÆ§‰∏∫Ëøô‰∏™‰∏§‰∏™Êï∞Áõ∏Á≠â AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041#include &lt;iostream&gt;#include &lt;math.h&gt;using namespace std;bool equal_zero(double a, double b)&#123; //‰∏§‰∏™Êï∞‰πãÂ∑ÆÁöÑÁªùÂØπÂÄºÂ∞è‰∫é‰∏Ä‰∏™ÂæàÂ∞èÁöÑÊï∞ÔºåÊàë‰ª¨Â∞±ËÉΩËÆ§‰∏∫Ëøô‰∏™‰∏§‰∏™Êï∞Áõ∏Á≠â if (a-b &lt; -0.000001 &amp;&amp; a-b &gt; 0.000001) return true; else return false;&#125;class Solution&#123;public: double Power(double base, int exponent) &#123; int temp = abs(exponent); if (equal_zero(base, 0.0)) &#123; return 0; &#125; double res = 1; for (int i = 0; i &lt; temp; i++) &#123; res = res * base; &#125; if (exponent &gt;= 0) return res; else return 1 / res; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.Power(2, -3); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ËÆ∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∫åËøõÂà∂‰∏≠1ÁöÑ‰∏™Êï∞]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞ÔºåËæìÂá∫ËØ•Êï∞‰∫åËøõÂà∂Ë°®Á§∫‰∏≠1ÁöÑ‰∏™Êï∞„ÄÇÂÖ∂‰∏≠Ë¥üÊï∞Áî®Ë°•Á†ÅË°®Á§∫„ÄÇ ÊÄùË∑Ø ÈÅáÂà∞ÁöÑÈóÆÈ¢òÂ∞±ÊòØÊàëÂÜç‰∏ÄÊ¨°ÊÉ≥ÊääËøô‰∏™Êï∞Â≠óËΩ¨Êç¢‰∏∫‰∫åËøõÂà∂Á†ÅÔºå‰ΩÜÊòØÂÖ∂ÂÆûËÆ°ÁÆóÊú∫Â∑≤ÁªèÂ∏ÆÊàë‰ª¨ÂÅö‰∫ÜËøô‰∏™ËøáÁ®ãÔºåËΩ¨Êç¢‰∏∫‰∫åËøõÂà∂Êï∞ÂÖ∂ÂÆûÂ§ßÂ§öÂ∫îÁî®‰∫éÈ´òÁ≤æÂ∫¶‰∏≠ Èâ¥‰∫éËøô‰∏™ÊÉÖÂÜµÔºåÊàë‰ª¨ÂèØ‰ª•Áî®‰ΩçËøêÁÆóÔºå‰ªéËÄåÊØîËæÉÂá∫ËØ•Êï∞Â≠óÁöÑÊØè‰∏Ä‰Ωç1Ôºå‰ΩÜÊòØÈúÄË¶ÅÊ≥®ÊÑèÈô∑ÂÖ•Ê≠ªÂæ™ÁéØÁöÑÈóÆÈ¢òÔºåÂè™Ë¶ÅÈùûÁ©∫Èùû0ÔºåÂæ™ÁéØÂ∞±ÂèØ‰ª•‰∏ÄÁõ¥ÁªßÁª≠ Ëá≥‰∫é‰ª£Á†Å‰∏≠ËÆæÁΩÆÈÄÄÂá∫Âæ™ÁéØÁöÑÊù°‰ª∂Â∞±ÊòØflagË∂ÖÂá∫unsigned intÊâÄËÉΩË°®Á§∫ÁöÑÊï∞ÊçÆËåÉÂõ¥ÔºåÂ∞±‰ºöÂèëÁîüÊà™Êñ≠ÔºåÁÑ∂ÂêéÂè™‰øùÁïô32‰ΩçÔºå‰πüÂ∞±ÊòØunsigned intÂç†4‰∏™Â≠óËäÇÔºåÂèòÊàê0ÁÑ∂ÂêéÂæ™ÁéØÈÄÄÂá∫„ÄÇ AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031#include &lt;iostream&gt;#include &lt;math.h&gt;using namespace std;class Solution&#123;public: int NumberOf1(int n) &#123; int count = 0; unsigned int flag = 1; int times = 0; while (flag) &#123; if (flag &amp; n) count++; flag = flag &lt;&lt; 1; cout &lt;&lt; flag &lt;&lt; endl; times++; &#125; // cout &lt;&lt; "Ê¨°Êï∞‰∏∫" &lt;&lt; times &lt;&lt;endl; return count; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt;so.NumberOf1(13)&lt;&lt;endl;&#125; ÊàëÂÜô‰∏çÂá∫Êù•ÁöÑÁÆóÊ≥ïËßÑÂæãÔºö‰∏Ä‰∏™Êï∞ÂáèÂéª1ÁÑ∂Âêé‰∏éÂéüÊù•ÁöÑÊï∞ËøõË°å‰∏éËøêÁÆóÔºå‰ºöÂ∞ÜËøô‰∏™Êï∞ÊúÄÂè≥ËæπÁöÑ1ÂèòÊàê0ÔºõÔºàËôΩÁÑ∂ÂÜô‰∏çÂá∫Ôºå‰ΩÜËøòÊòØÂ≠¶Â≠¶Âòõ=-=ÔºâËøôÁßçÁÆóÊ≥ïÂ∞±ÊòØ‰∏Ä‰∏™Êï∞ÈáåÈù¢ÊúâÂ§öÂ∞ë‰∏™1Â∞±Âæ™ÁéØÂ§öÂ∞ëÊ¨°Ôºå 12345678910int NumberOf1_2(int n) &#123; int count = 0; while (n) &#123; count++; n = (n-1) &amp; n; &#125; return count; &#125; ÈÅáÂà∞ÁöÑÈóÆÈ¢ò&amp;ÊÄªÁªì unsigned int‰∏éintÂÅöËøêÁÆóÊó∂ÔºåInt‰ºöÂº∫Âà∂ËΩ¨Êç¢‰∏∫Êó†Á¨¶Âè∑Êï¥Êï∞ 1234567unsigned int a = 1,int b = -2;// a b ÈÉΩÊòØÊó†Á¨¶Âè∑Êï¥Êï∞ ËøôÊ†∑ÁºñËØë‰∏ç‰∫ÜÔºåÂèØËÉΩÊòØÊúâÊñ∞ÁâàÊú¨ÂêßÔºåunsigned int a = 1;int b = -2;int c = -2;cout &lt;&lt; b &lt;&lt; endl; //-2if (a + c &gt; 0) //Âõ†Ê≠§b,cÂú®ËÆ°ÁÆóÊú∫‰∏≠ÊòØ‰ª•Ë°•Á†ÅÁöÑÂΩ¢ÂºèÂ≠òÊîæÔºå0xfffffff(1110) ==&gt;Êó†Á¨¶Âè∑Ë°®Á§∫ÁöÑÂ∞±ÊòØ2^32-2 cout &lt;&lt; a + b &lt;&lt; endl; //4294967295 ==&gt;&gt;2^32-1 Ê≥®ÊÑè‰∏Ä‰∏™ÂèòÈáèÁöÑÁ±ªÂûãÔºåÊó†Á¨¶Âè∑Êï¥Êï∞ÂíåÊúâÁ¨¶Âè∑Êï¥Êï∞Ê≠§Â§ñÔºåËøô‰∏™16ËøõÂà∂Êï∞Ë°®Á§∫ÁöÑË¥üÊï∞ÁöÑË°•Á†ÅÔºåÊ≠£Êï∞Â∞±Êó†ÊâÄË∞ì=-= 12345678910int res = 0xffffffff;unsigned int rea = 0xffffffff;cout &lt;&lt; 0xffffffff &lt;&lt;endl;cout &lt;&lt; res &lt;&lt;endl;cout &lt;&lt; rea &lt;&lt;endl;/*4294967295-14294967295*/ ÈÅáÂà∞Âà§Êñ≠‰∫åËøõÂà∂Êï∞Ôºå‰∏çÁî®Âú®Ëá™Â∑±ËΩ¨‰∏∫‰∫åËøõÂà∂Êï∞‰∫ÜÔºåËÆ°ÁÆóÊú∫Â∫ïÂ±Ç‰ºöÂ∏ÆÊàë‰ª¨Â§ÑÁêÜÂÆåÊàêÁöÑÔºåÂè™ÊúâÂú®È´òÁ≤æÂ∫¶Êó∂ÊâçÈúÄË¶ÅËøõË°åËøôÊ†∑ÁöÑÂ§ÑÁêÜ Êù°‰ª∂Âà§Êñ≠Âè™Ë¶ÅÊòØ‰∏ç‰∏∫0ÊàñËÄÖ‰∏ç‰∏∫Á©∫Â∞±ÂèØ‰ª•ËøêË°å ÊúÄÂêé‰∏Ä‰∏™ÈóÆÈ¢òÂ∞±ÊòØÂ∑¶Áßª32ÊàñËÄÖ‰ª•‰∏äÊó∂ÔºåÁºñËØëÂô®Â¶Ç‰ΩïÂ§ÑÁêÜËøô‰∏™Ë∂äÁïåÊÉÖÂÜµ,‰∏ä‰ª£Á†Å=-= 12345678910111213unsigned int test1 = 2147483648;test1 = test1 &lt;&lt; 1;cout &lt;&lt; "test1: " &lt;&lt;test1 &lt;&lt;endl;unsigned int test = 1;test = (test &lt;&lt; 32);unsigned int i = 1;cout &lt;&lt; "test2 :" &lt;&lt;test &lt;&lt; endl;cout &lt;&lt;"test3:" &lt;&lt; (i&lt;&lt;32) &lt;&lt;endl;/*test1: 0test2 :1test3:1*/ ÂØπ‰∏äËø∞‰ª£Á†ÅÁöÑÊÄªÁªìÔºö È¶ñÂÖàËøô‰∏™Âü∫‰∫ég++ÁºñËØëÂô® ÂÖ∂Ê¨°ÔºåÂ¶ÇÊûúÂØπ‰∫éÂ∑¶Áßª1‰ΩçÁöÑÊï∞ÔºåË∂äÁïåÊ∫¢Âá∫ÊåâÁÖßÊà™Êñ≠Â§ÑÁêÜÔºàÂ∞±ÊòØÂè™ÊòØ‰øùÁïô‰Ωé‰ΩçÁöÑ‰∫åËøõÂà∂Êï∞Ôºâ ‰ΩÜÊòØÂ¶ÇÊûúÂ∑¶Áßª32ÊàñËÄÖ‰ª•‰∏äg++ÁºñËØëÂô®Â∞±‰ºöÈªòËÆ§Â§ÑÁêÜ‰∏∫ÔºöÂ∑¶Áßª‰ΩçÊï∞‰∏éËØ•Êï∞ÊçÆÁ±ªÂûã‰ΩçÊï∞ÂÅöÂèñÊ®°ËøêÁÆóÔºå‰æãÂ¶ÇÊó†Á¨¶Âè∑Êï¥Êï∞1 &lt;&lt; 32ÔºåÈÇ£‰πà32 % 32(Êó†Á¨¶Âè∑Êï¥Êï∞4‰∏™Â≠óËäÇ) = 0Ôºå‰πüÂ∞±ÊòØ‰∏çÁßªÂä®ÔºåÁªìÊûúÁ≠â‰∫é1]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>‰ΩçËøêÁÆó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Áü©ÂΩ¢Ë¶ÜÁõñ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Êàë‰ª¨ÂèØ‰ª•Áî®21ÁöÑÂ∞èÁü©ÂΩ¢Ê®™ÁùÄÊàñËÄÖÁ´ñÁùÄÂéªË¶ÜÁõñÊõ¥Â§ßÁöÑÁü©ÂΩ¢„ÄÇËØ∑ÈóÆÁî®n‰∏™21ÁöÑÂ∞èÁü©ÂΩ¢Êó†ÈáçÂè†Âú∞Ë¶ÜÁõñ‰∏Ä‰∏™2*nÁöÑÂ§ßÁü©ÂΩ¢ÔºåÊÄªÂÖ±ÊúâÂ§öÂ∞ëÁßçÊñπÊ≥ïÔºü Ê≥®ÊÑèÈóÆÈ¢ò Êú¨‰æãÊµãËØïÊ†∑‰æã‰∏≠ÔºåÂΩìN = 2Êó∂ÔºåËæìÂá∫‰∏∫2Áßç„ÄÇ„ÄÇ„ÄÇ ÂÅáËÆæf[n]Ë°®Á§∫ÂΩìÂèÇÊï∞‰∏∫nÁöÑÊñπÊ≥ïÊï∞ÔºåÂàôf[n] = f[n-1] + f[n-2]‚Ä¶.ÊñêÊ≥¢ÈÇ£Â•ë ‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;using namespace std;class Solution &#123;public: int rectCover(int number) &#123; // if (number &lt;=0 ) // return 0; // if (number &lt; 3) // return 1; //Ê†∑‰æã‰∏≠2ËæìÂá∫‰∏∫2ÔºåÊ≠£ÊñπÂΩ¢Ê®™Á´ñÊîæ‰∏çÊòØ‰∏Ä‰∏™ÈÅìÁêÜÂêó if (number &lt; 0) return 0; if (number &lt; 3) return number; int res = 0; int a = 1; int b = 2; //ÂØπÂ∫î‰∫éÁ¨¨‰∫åÈ°π for (int i = 3;i &lt;= number;i++) &#123; res = a+b; a = b; b = res; &#125; return res; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.rectCover(3) &lt;&lt;endl; cout &lt;&lt; so.rectCover(4) &lt;&lt;endl; cout &lt;&lt; so.rectCover(5) &lt;&lt;endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈÄíÂΩí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÂèòÊÄÅË∑≥Âè∞Èò∂]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞‰∏ÄÂè™ÈùíËõô‰∏ÄÊ¨°ÂèØ‰ª•Ë∑≥‰∏ä1Á∫ßÂè∞Èò∂Ôºå‰πüÂèØ‰ª•Ë∑≥‰∏ä2Á∫ß‚Ä¶‚Ä¶ÂÆÉ‰πüÂèØ‰ª•Ë∑≥‰∏änÁ∫ß„ÄÇÊ±ÇËØ•ÈùíËõôË∑≥‰∏ä‰∏Ä‰∏™nÁ∫ßÁöÑÂè∞Èò∂ÊÄªÂÖ±ÊúâÂ§öÂ∞ëÁßçË∑≥Ê≥ï„ÄÇ ËßÑÂæãÂ∞±ÊòØÂâçÈù¢ÊØè‰∏Ä‰∏™Ê≠•ÁöÑÁ¥ØÂä†ÁöÑÂÄºÁÑ∂ÂêéÂä†1 AC‰ª£Á†Å1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;using namespace std;class Solution &#123;public: int jumpFloorII(int number) &#123; if (number &lt;3) return number; int a = 3; //1+2 int res = 0; //ÊâæÂà∞‰πãÈó¥ÁöÑËßÑÂæãÔºåÁÑ∂ÂêéÂÆûÁé∞ËøôÁßçËßÑÂæãÁöÑÊú¨Ë¥®ÊòØdp for (int i = 3;i &lt;= number;i++) &#123; res = a; res++; a += res; &#125; return res; &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt;so.jumpFloorII(5) &lt;&lt;endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Âä®ÊÄÅËßÑÂàí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Ë∑≥Âè∞Èò∂]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E8%B7%B3%E5%8F%B0%E9%98%B6%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞‰∏ÄÂè™ÈùíËõô‰∏ÄÊ¨°ÂèØ‰ª•Ë∑≥‰∏ä1Á∫ßÂè∞Èò∂Ôºå‰πüÂèØ‰ª•Ë∑≥‰∏ä2Á∫ß„ÄÇÊ±ÇËØ•ÈùíËõôË∑≥‰∏ä‰∏Ä‰∏™nÁ∫ßÁöÑÂè∞Èò∂ÊÄªÂÖ±ÊúâÂ§öÂ∞ëÁßçË∑≥Ê≥ïÔºàÂÖàÂêéÊ¨°Â∫è‰∏çÂêåÁÆó‰∏çÂêåÁöÑÁªìÊûúÔºâ„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;using namespace std;class Solution &#123;public: int jumpFloor(int number) &#123; if (number &lt; 3) return number; int a = 1; int b = 2; int value; for (int i = 3;i &lt;= number; i++) &#123; value = a + b; a = b; b = value; &#125; return value; //Êú¨È¢òÁî®dp‰πüË°åÔºåÂè™ÊòØ‰∏çÁü•ÈÅìnumberÁöÑÂèñÂÄºÔºåÁî≥ËØ∑‰∏Ä‰∏™Á©∫Èó¥‰πüÊ≤°ÂøÖË¶ÅÔºåËÄå‰∏îdpÁöÑËøáÁ®ãÂÄº‰πüÊ≤°ÊúâÂøÖË¶Å‰øùÂ≠ò‰∏ã &#125;&#125;;int main()&#123; Solution so; cout &lt;&lt; so.jumpFloor(4); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈÄíÂΩí</tag>
        <tag>Âä®ÊÄÅËßÑÂàí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´-Áà¨ÂèñËôéÊâëÊ≠•Ë°åË°óÊï∞ÊçÆ]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB-%E7%88%AC%E5%8F%96%E8%99%8E%E6%89%91%E6%AD%A5%E8%A1%8C%E8%A1%97%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÁî±‰∫éËôéÊâëÈ°µÈù¢ÁöÑÈôêÂà∂ÔºåÂõ†‰∏∫ËÆøÈóÆËôéÊâëÊ≠•Ë°åË°óÁöÑÁ¨¨11‰∏™È°µÈù¢Â∞±ÈúÄË¶ÅÁî®Êà∑ËøõË°åÁôªÂΩïÔºåÈâ¥‰∫éÊ≠§Êó∂ÊäÄÊúØËøòÊ≤°ÊúâÂ≠¶ÂÖ®ÔºåÂè™ËÉΩÁà¨Âèñ1Âà∞10ÁöÑÈ°µÈù¢„ÄÇ ÊäìÂèñ‰ªÄ‰πàÊï∞ÊçÆ Â∏ñÂ≠êÂêçÁß∞ Â∏ñÂ≠êÈìæÊé• ÂèëÂ∏ñ‰∫∫ ÂèëÂ∏ñ‰∫∫ÈìæÊé• ÂèëÂ∏ñÊó∂Èó¥ Â∏ñÂ≠êÂõûÂ§çÊï∞ Â∏ñÂ≠êÊµèËßàÊï∞ ÊúÄÂêéÂõûÂ§çÂ∏ñÂ≠êÁöÑ‰∫∫ ÊúÄÂêéÂõûÂ§çÁöÑÊó∂Èó¥ Â¶Ç‰ΩïÊäìÂèñÊï∞ÊçÆ È¶ñÂÖàÊàë‰ª¨ÂèëÁé∞Ëøô‰∏™È°µÈù¢ÊòØÁî®gzipËøõË°åÂéãÁº©ÁöÑÔºågzipÊòØÁî®utf-8ËøõË°åÁºñÁ†ÅÁöÑÔºå‰πüÂ∞±ÊòØÊàë‰ª¨ÊäìÂèñÁöÑÈ°µÈù¢ÊòØÁî®utf-8ÁºñÁ†ÅÁöÑÔºåËÄår.textËøîÂõûÁöÑÊòØunicodeÁºñÁ†ÅÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ¶ÇÊûúÊàë‰ª¨Áõ¥Êé•Áî®Â∞±‰ºöÂá∫Áé∞‰π±Á†ÅÔºåÂõ†Ê≠§ÔºåÊàë‰ª¨Áî®r.contentÔºåËøîÂõûÁöÑbytesÊï∞ÊçÆÔºàÊäìÂèñÈü≥È¢ëÔºåÊñá‰ª∂ÔºâÔºåÁÑ∂ÂêéÂ∞ÜËøô‰∏™È°µÈù¢‰ªéutf-8Ëß£Á†Å‰∏∫unicodeÁºñÁ†Å 12html = r.contenthtml = html.decode('utf-8') #Â∞Üutf-8Ëß£Á†Å‰∏∫unicode ÊäìÂèñÊï∞ÊçÆÂØπÂ∫îÁöÑÂ≠óÊÆµÁöÑhtmlÊ†áÁ≠æ(‰ª£Á†Å‰∏≠Áúã) Áî®MongodbÂ≠òÊîæÊäìÂèñÂà∞ÁöÑÊï∞ÊçÆ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÔºåÂ∞±ÊòØÂèØËÉΩ‰ºöÂá∫Áé∞Êú¨Êù•Âú®Á¨¨‰∏ÄÈ°µÁöÑÂ∏ñÂ≠êÔºåÁÑ∂ÂêéÂáâ‰∫ÜÂï•ÁöÑÔºåË¢´È°∂Âà∞‰∫ÜÁ¨¨‰∫åÈ°µÔºåÈÇ£‰πàËøôÊó∂ÂÄôÂ∞±‰∏çËÉΩÂ≠òÊîæÂú®Êï∞ÊçÆÂ∫ì‰∏≠ÔºåÊâÄ‰ª•ÊØèÊ¨°ÊèíÂÖ•Êï∞ÊçÆË¶ÅËøõË°åÂà§Êñ≠‰∏Ä‰∏ã ‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394import requestsfrom bs4 import BeautifulSoupimport timefrom pymongo import MongoClientdef get_page(link): data_list = [] headers = &#123; "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0" &#125; r = requests.get(link, headers=headers) html = r.content html = html.decode('utf-8') #Â∞Üutf-8Ëß£Á†Å‰∏∫unicode soup = BeautifulSoup(html, 'lxml') for_list = soup.find('ul', class_="for-list") for_list = for_list.find_all('li') for each_for in for_list: # Â∏ñÂ≠êÂêçÁß∞ for_name = each_for.find('div', class_="titlelink box").a.text.strip() # Â∏ñÂ≠êÈìæÊé• for_link = each_for.find('div', class_="titlelink box").a['href'] for_link = 'https://bbs.hupu.com' + for_link # ‰ΩúËÄÖ for_writer = each_for.find('div', class_="author box").a.text.strip() # ‰ΩúËÄÖÈìæÊé• for_writer_link = each_for.find('div', class_= "author box").a['href'] # Â∏ñÂ≠êÂàõÂª∫Êó∂Èó¥ for_createtime = each_for.find('div', class_= "author box") # Ëé∑ÂèñËäÇÁÇπÁöÑÊâÄÊúâÂ≠êËäÇÁÇπÔºåÁÑ∂ÂêéÂèëÁé∞Êó∂Èó¥Âú®ÂàóË°®‰∏≠Á¨¨6È°π for_createtime = for_createtime.contents for_createtime = for_createtime[5].text.strip() # ÂõûÂ§çÊï∞ for_reply_numbers = each_for.find('span', class_= "ansour box").text.split('/')[0].strip() # ÊµèËßàÊï∞ for_see_numbers = each_for.find('span', class_= "ansour box").text.split('/')[1].strip() # ÊúÄÂêéÂõûÂ§çÁî®Êà∑ for_last_reply_user = each_for.find('div', class_="endreply box").span.text.strip() #ÊúÄÂêéÂõûÂ§çÊó∂Èó¥ for_last_reply_time = each_for.find('div', class_="endreply box").a.text.strip() data_list.append([for_name, for_link, for_writer, for_writer_link, for_createtime, for_reply_numbers,for_see_numbers, for_last_reply_user,for_last_reply_time]) return data_listclass sort_by_Mongodb: def __init__(self, db_host, db_port, db_name, coll_name): self.db_host = db_host self.db_port = db_port self.db_name = db_name self.coll_name = coll_name self.client = MongoClient(host=self.db_host, port=self.db_port) self.db = self.client[self.db_name] self.coll = self.db[self.coll_name] def update(self, query, insert_data): # queryË°®Á§∫Êü•ËØ¢Êù°‰ª∂, insert_dataË°®Á§∫Êõ¥Êñ∞ÁöÑÊï∞ÊçÆÔºåÂÖ∂ÂÆûÂú®Êú¨‰æã‰∏≠Â∞±ÊòØË¶ÅÊèíÂÖ•ÁöÑÊï∞ÊçÆ self.coll.update_one(query, &#123;'$set':insert_data&#125;, upsert=True) # upsert (optional): If True, perform an insert if no documents match the filter.def main(): link = "https://bbs.hupu.com/bxj-" # Ë∂ÖËøáÁ¨¨10‰∏™È°µÈù¢Â∞±ÈúÄË¶ÅÁôªÂΩï‰∫Ü„ÄÇ„ÄÇ„ÄÇ„ÄÇ for i in range(1,11): link_temp = link + str(i) data_list = get_page(link_temp) #ËøîÂõûÁöÑÊòØÂàóË°®ÁöÑÂàóË°® a = sort_by_Mongodb("localhost", 27017, "hupu", "buxingjie") for each in data_list: insert_dict = &#123; "Â∏ñÂ≠êÂêçÁß∞": each[0], "Â∏ñÂ≠êÈìæÊé•": each[1], "ÂèëÂ∏ñ‰∫∫": each[2], "ÂèëÂ∏ñ‰∫∫ÈìæÊé•": each[3], "ÂèëÂ∏ñÊó∂Èó¥": each[4], "Ë¥¥Â≠êÂõûÂ§çÊï∞": each[5], "Â∏ñÂ≠êÊµèËßàÊï∞": each[6], "ÊúÄÂêéÂõûÂ§çÂ∏ñÂ≠êÁöÑ‰∫∫": each[7], "ÊúÄÂêéÂõûÂ§çÊó∂Èó¥": each[8] &#125; # Â∏ñÂ≠êÈìæÊé•ËÇØÂÆöÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåÂõ†Ê≠§ÊääËøô‰∏™‰Ωú‰∏∫Á≠õÈÄâÊù°‰ª∂ a.update(&#123;"Â∏ñÂ≠êÈìæÊé•": each[1]&#125;, insert_dict) print("Á¨¨"+ str(i)+ "È°µÈù¢Â≠òÂèñÂÆåÊàêÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅ") time.sleep(2)if __name__ == "__main__": main() ÁªìÊûúÊà™Âõæ ‰∏ÄÂÖ±ÊäìÂèñÂà∞1151Êù°Ë¥¥Â≠êÔºåÂØπ‰∫é10‰∏™È°µÈù¢Êù•ËØ¥ÔºåÂ•ΩÂÉèÂ∑Æ‰∏çÂ§öÂêß~]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊñêÊ≥¢ÈÇ£Â•ëÂ∫èÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%BA%8F%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Â§ßÂÆ∂ÈÉΩÁü•ÈÅìÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÂàóÔºåÁé∞Âú®Ë¶ÅÊ±ÇËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞nÔºåËØ∑‰Ω†ËæìÂá∫ÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÂàóÁöÑÁ¨¨nÈ°πÔºà‰ªé0ÂºÄÂßãÔºåÁ¨¨0È°π‰∏∫0Ôºâ„ÄÇ n&lt;=39 AC‰ª£Á†Å12345678910111213141516171819202122232425262728293031#include &lt;iostream&gt;using namespace std;class Solution &#123;public: int Fibonacci(int n) &#123; //ÈáçÂ§çËÆ°ÁÆóÁöÑ‰∏úË•øÂ§™Â§ö // int res[2] = &#123;0,1&#125;; // if (n &lt; 2) // return res[n]; // return Fibonacci(n-1) + Fibonacci(n-2); int dp[39]; dp[0] = 0; dp[1] = 1; for (int i = 2;i &lt;=n;i++) &#123; dp[i] = dp[i-1] + dp[i-2]; &#125; return dp[n]; &#125;&#125;;int main()&#123; int n = 39; Solution a; cout &lt;&lt; a.Fibonacci(n); return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈÄíÂΩí</tag>
        <tag>Âä®ÊÄÅËßÑÂàí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊóãËΩ¨Êï∞ÁªÑÁöÑÊúÄÂ∞èÊï∞Â≠ó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Êää‰∏Ä‰∏™Êï∞ÁªÑÊúÄÂºÄÂßãÁöÑËã•Âπ≤‰∏™ÂÖÉÁ¥†Êê¨Âà∞Êï∞ÁªÑÁöÑÊú´Â∞æÔºåÊàë‰ª¨Áß∞‰πã‰∏∫Êï∞ÁªÑÁöÑÊóãËΩ¨„ÄÇ ËæìÂÖ•‰∏Ä‰∏™ÈùûÈÄíÂáèÊéíÂ∫èÁöÑÊï∞ÁªÑÁöÑ‰∏Ä‰∏™ÊóãËΩ¨ÔºåËæìÂá∫ÊóãËΩ¨Êï∞ÁªÑÁöÑÊúÄÂ∞èÂÖÉÁ¥†„ÄÇ ‰æãÂ¶ÇÊï∞ÁªÑ{3,4,5,1,2}‰∏∫{1,2,3,4,5}ÁöÑ‰∏Ä‰∏™ÊóãËΩ¨ÔºåËØ•Êï∞ÁªÑÁöÑÊúÄÂ∞èÂÄº‰∏∫1„ÄÇ NOTEÔºöÁªôÂá∫ÁöÑÊâÄÊúâÂÖÉÁ¥†ÈÉΩÂ§ß‰∫é0ÔºåËã•Êï∞ÁªÑÂ§ßÂ∞è‰∏∫0ÔºåËØ∑ËøîÂõû0„ÄÇ ÊÄùË∑Ø Áõ¥Êé•ÈÅçÂéÜÔºå‰ΩÜÊòØÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(n) Ê†πÊçÆÊóãËΩ¨Êï∞ÁªÑÁöÑÁâπÁÇπÔºåÂèØ‰ª•ÂàÜ‰∏∫Â∞ÜÊï¥‰∏™Â∫èÂàóÂàÜÊàê‰∏§‰∏™ÈÄíÂ¢ûÊï∞ÁªÑÔºåËÄåÊúÄÂ∞èÂÄºÂ∞±ÊòØËøô‰∏™‰∏§‰∏™Êï∞ÁªÑÁöÑÂàÜÂâ≤Á∫øÔºåÁî±‰∫é‰ªñ‰ª¨ÊòØÊúâÂ∫èÁöÑÔºåÂõ†ËÄå‰ΩøÁî®‰∫åÂàÜÊü•Êâæ Â¶Ç‰Ωï‰∫åÂàÜÔºöÁî®p1Âíåp2ÊåáÈíàÊåáÂêëÂ∫èÂàóÁöÑÈ¶ñÂ∞æÔºåÂ¶ÇÊûú‰∏≠Èó¥ÂÄºÂ§ß‰∫éÁ≠â‰∫ép1ÊâÄ‰ª•ÊåáÂêëÁöÑÂÄºÔºåËØ¥Êòé‰∏≠Èó¥ÂÄºÂ§Ñ‰∫éÂâçÈù¢ÁöÑÈÄíÂ¢ûÂ∫èÂàó‰∏≠ÔºåÂõ†Ê≠§p1ÊåáÈíàÊõ¥Êñ∞‰∏∫‰∏≠Èó¥ÂÄºÁöÑ‰∏ãÊ†áÔºõËã•‰∏≠Èó¥ÂÄºÂ∞è‰∫éÁ≠â‰∫ép2ÊâÄÊåáÂêëÁöÑÂÄºÔºåËØ¥Êòé‰∏≠Èó¥ÂÄºÂ§Ñ‰∫éÂêéÈù¢ÁöÑÈÄíÂ¢ûÂ∫èÂàó‰∏≠ÔºåÂõ†Ê≠§p2Êõ¥Êñ∞‰∏∫‰∏≠Èó¥ÂÄºÁöÑ‰∏ãÊ†á ÁâπÊÆäÊÉÖÂÜµÔºöÂ¶ÇÊûúÊóãËΩ¨ÂêéÁöÑÊï∞ÁªÑËøòÊòØÊï∞ÁªÑÊú¨Ë∫´ ÁâπÊÆäÊÉÖÂÜµÔºö‰∏≠Èó¥ÂÄºÁ≠â‰∫éÈ¶ñÁ≠â‰∫éÂ∞æÔºåËøôÊ†∑Â∞±‰∏çËÉΩÂå∫ÂàÜ‰∏≠Èó¥ÂÄºÂ§Ñ‰∫éÂâçÈù¢ÁöÑÂ∫èÂàóËøòÊòØÂêéÈù¢ÁöÑÂ∫èÂàóÔºåÁÆóÊ≥ïÈÄÄÂåñ‰∏∫È°∫Â∫èÈÅçÂéÜ Êó∂Èó¥Â§çÊùÇÂ∫¶Á∫¶‰∏∫O(logn) AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;class Solution &#123;public: int minNumberInRotateArray(vector&lt;int&gt; rotateArray) &#123; if (rotateArray.size() == 0) return 0; //Â¶ÇÊûúÊòØÊï∞ÁªÑÊú¨Ë∫´ int p1 = 0; int p2 = rotateArray.size()-1; int res = p1; //ÂΩìÁ¨¨‰∏Ä‰∏™Êï∞Â∞è‰∫éÊúÄÂêé‰∏Ä‰∏™Êï∞ÔºåÈÇ£‰πàÂæ™ÁéØËøõ‰∏çÂéªÔºåreturn while (rotateArray[p1] &gt;= rotateArray[p2]) &#123; if(p2 - p1 == 1) &#123; res = p2; break; &#125; res = (p1 + p2) /2; if (rotateArray[res] == rotateArray[p1] &amp;&amp; rotateArray[p1] == rotateArray[p2]) &#123; //ÁâπÊÆäÊÉÖÂÜµ 1 0 1 1 1 Âè™ËÉΩÈ°∫Â∫èÊü•Êâæ int temp = rotateArray[p1]; for (int i = p1 + 1; i &lt;= p2;i++) &#123; if (temp &gt; rotateArray[i]) &#123; temp = rotateArray[i]; &#125; &#125; return temp; //ËøîÂõûÊúÄÂ∞èÂÄº &#125; else if (rotateArray[res] &gt;= rotateArray[p1]) //ËØ¥Êòé‰∏≠Èó¥ÂÄºÂú®ÂâçÈù¢ÁöÑÈÄíÂ¢ûÂ∫èÂàó‰∏≠ &#123; p1 = res; &#125; else if (rotateArray[res] &lt;= rotateArray[p2]) //ËØ¥Êòé‰∏≠Èó¥ÂÄºÂú®ÂêéÈÄíÂ¢ûÂ∫èÂàó‰∏≠ &#123; p2 = res; &#125; &#125; return rotateArray[res]; &#125;&#125;;int main()&#123; int data[5] = &#123;1,0,1,1,1&#125;; vector&lt;int&gt;v(data, data+5); Solution a; cout &lt;&lt; a.minNumberInRotateArray(v); return 0;&#125; ÊÄªÁªì Âá°ÊòØÂê´ÊúâÁâπÊÆäÊÄßË¥®ÁöÑÊï∞ÊçÆÁªìÊûÑÔºåËÇØÂÆö‰ºöÊúâ‰ºòÂåñÁöÑÊÄùÊÉ≥Â≠òÂú®=-=]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-Áî®‰∏§‰∏™Ê†àÂÆûÁé∞ÈòüÂàó]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Áî®‰∏§‰∏™Ê†àÊù•ÂÆûÁé∞‰∏Ä‰∏™ÈòüÂàóÔºåÂÆåÊàêÈòüÂàóÁöÑPushÂíåPopÊìç‰Ωú„ÄÇ ÈòüÂàó‰∏≠ÁöÑÂÖÉÁ¥†‰∏∫intÁ±ªÂûã ÊÄùË∑Ø‰∏Ä‰∏™Ê†àÁî®Êù•Â≠òÊîæÔºåÂè¶‰∏Ä‰∏™Ê†àÁî®Êù•ËæìÂá∫ÔºåËæìÂá∫ÁöÑÊó∂ÂÄôÊ≥®ÊÑèË¶ÅÂ∞ÜËæìÂá∫Ê†àÁöÑÂÖ®ÈÉ®ÂÜÖÂÆπËæìÂá∫ÂÆåÊØïÂêéÊâçËÉΩÂ°´ÂÖÖÊï∞ÊçÆ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;iostream&gt;#include &lt;stack&gt;using namespace std;class Solution&#123;public: void push(int node) &#123; stack1.push(node); &#125; int pop() &#123; while (1) &#123; if (!stack2.empty()) &#123; int y = stack2.top(); stack2.pop(); return y; &#125; while (!stack1.empty()) &#123; stack2.push(stack1.top()); stack1.pop(); &#125; &#125; &#125;private: stack&lt;int&gt; stack1; stack&lt;int&gt; stack2;&#125;;int main()&#123; Solution a; cout &lt;&lt; "11122" &lt;&lt; endl; a.push(1); a.push(2); cout &lt;&lt; a.pop() &lt;&lt; endl; a.push(3); cout &lt;&lt; a.pop() &lt;&lt;endl; cout &lt;&lt; a.pop() &lt;&lt;endl; cout &lt;&lt; "111" &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÈáçÂª∫‰∫åÂèâÊ†ë]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer%E4%B9%8B%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•Êüê‰∫åÂèâÊ†ëÁöÑÂâçÂ∫èÈÅçÂéÜÂíå‰∏≠Â∫èÈÅçÂéÜÁöÑÁªìÊûúÔºåËØ∑ÈáçÂª∫Âá∫ËØ•‰∫åÂèâÊ†ë„ÄÇÂÅáËÆæËæìÂÖ•ÁöÑÂâçÂ∫èÈÅçÂéÜÂíå‰∏≠Â∫èÈÅçÂéÜÁöÑÁªìÊûú‰∏≠ÈÉΩ‰∏çÂê´ÈáçÂ§çÁöÑÊï∞Â≠ó„ÄÇ‰æãÂ¶ÇËæìÂÖ•ÂâçÂ∫èÈÅçÂéÜÂ∫èÂàó{1,2,4,7,3,5,6,8}Âíå‰∏≠Â∫èÈÅçÂéÜÂ∫èÂàó{4,7,2,1,5,3,8,6}ÔºåÂàôÈáçÂª∫‰∫åÂèâÊ†ëÂπ∂ËøîÂõû„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;typedef struct TreeNode&#123; int val; TreeNode *left; TreeNode *right; TreeNode(int x) &#123; val = x; left = NULL; right = NULL; &#125;&#125; TreeNode;TreeNode *fun(int *pre, int *mid, int len)&#123; if (len == 0) return NULL; int index; TreeNode *p = new TreeNode(pre[0]); for (int i = 0; i &lt; len; i++) &#123; if (pre[0] == mid[i]) &#123; index = i; break; &#125; &#125; p-&gt;left = fun(pre + 1, mid, index); p-&gt;right = fun(pre + index + 1, mid + index + 1, len - index - 1); return p;&#125;// TreeNode *head;class Solution&#123;public: TreeNode *reConstructBinaryTree(vector&lt;int&gt; pre, vector&lt;int&gt; vin) &#123; if (pre.size() == 0 || vin.size() == 0) return nullptr; int *pre_tree = new int[pre.size()]; int *vin_tree = new int[vin.size()]; for (int i = 0; i &lt; pre.size(); i++) &#123; pre_tree[i] = pre[i]; vin_tree[i] = vin[i]; &#125; return fun(pre_tree, vin_tree, pre.size()); // return fun(pre, vin, 0, pre.size(), 0,vin.size()); &#125;&#125;;void print(TreeNode *root)&#123; //ÂêéÂ∫èÈÅçÂéÜ if (root != NULL) &#123; print(root-&gt;left); print(root-&gt;right); cout &lt;&lt; root-&gt;val; &#125;&#125;int main()&#123; Solution a; int Tree_pre[8] = &#123;1,2,4,7,3,5,6,8&#125;; int Tree_vin[8] = &#123;4,7,2,1,5,3,8,6&#125;; vector&lt;int&gt;pre(Tree_pre, Tree_pre+8); //Áî®Êï∞ÁªÑÂàùÂßãÂåñÂêëÈáè vector&lt;int&gt;vin(Tree_vin, Tree_vin+8); TreeNode *p = a.reConstructBinaryTree(pre, vin); print(p); return 0;&#125; ÊÄªÁªì ÊÑüËßâËøô‰∏™ojÂ•ΩÈ∫ªÁÉ¶ÔºåÂÜô‰∏™ÂáΩÊï∞ÁöÑÂèÇÊï∞ÈÉΩË¶Å‰∏•Ê†ºË¶ÅÊ±Ç ÂØπ‰∫é‰∫åÂèâÊ†ëÁöÑÊûÑÂª∫ËøôÂè™ÊòØ‰∏™ÁÆÄÂçïÁöÑÈ¢òÁõÆ=-=ÔºåÂ•ΩÂÉèÊ≤°Âï•ÊÄªÁªìÁöÑ„ÄÇ„ÄÇ]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>‰∫åÂèâÊ†ë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰ªéÂ∞æÂà∞Â§¥ÊâìÂç∞ÈìæË°®]]></title>
    <url>%2F%E9%94%AE%E5%80%BCoffer%E4%B9%8B%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËæìÂÖ•‰∏Ä‰∏™ÈìæË°®ÔºåÊåâÈìæË°®‰ªéÂ∞æÂà∞Â§¥ÁöÑÈ°∫Â∫èËøîÂõû‰∏Ä‰∏™ArrayList„ÄÇ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;stack&gt;using namespace std;typedef struct ListNode&#123; int values; struct ListNode *next;&#125; ListNode, *L;void ListInsert(L &amp;node)&#123; L p = node; L q = new ListNode; //q‰∏∫Ë¶ÅÊèíÂÖ•ÁöÑËäÇÁÇπ q-&gt;next = NULL; // cin &gt;&gt; q-&gt;values; while (p-&gt;next != NULL) &#123; p = p-&gt;next; &#125; q-&gt;next = p-&gt;next; p-&gt;next = q;&#125;void print(L node)&#123; while (node != NULL) &#123; cout &lt;&lt; node-&gt;values &lt;&lt; endl; node = node-&gt;next; &#125;&#125;class Solution&#123;public: vector&lt;int&gt; printListFromTailToHead(ListNode *head) &#123; vector&lt;int&gt; result; stack&lt;int&gt; s; if (head == NULL) return result; while (head != NULL) &#123; s.push(head-&gt;values); head = head-&gt;next; &#125; while (!s.empty()) &#123; // cout &lt;&lt; s.top(); result.push_back(s.top()); s.pop(); &#125; return result; &#125; //‰ΩøÁî®ÈÄíÂΩíÂÆûÁé∞ void fun(L node) &#123; if (node != NULL) &#123; fun(node-&gt;next); cout &lt;&lt; node-&gt;values &lt;&lt; endl; &#125; &#125;&#125;;int main()&#123; L a; a = new ListNode; a-&gt;next = NULL; a-&gt;values = 99; for (int i = 0; i &lt; 3; i++) &#123; ListInsert(a); &#125; print(a); cout &lt;&lt; "ÂèçÂêëËæìÂá∫" &lt;&lt; endl; Solution A; A.fun(a); return 0;&#125; ÊÄªÁªì Áî®Ê†àÊú¨Ë¥®‰∏äÈÉΩÂèØ‰ª•Áî®ÈÄíÂΩíËæìÂá∫]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>ÈìæË°®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-ÊõøÊç¢Á©∫Ê†º]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ËØ∑ÂÆûÁé∞‰∏Ä‰∏™ÂáΩÊï∞ÔºåÂ∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤‰∏≠ÁöÑÊØè‰∏™Á©∫Ê†ºÊõøÊç¢Êàê‚Äú%20‚Äù„ÄÇ‰æãÂ¶ÇÔºåÂΩìÂ≠óÁ¨¶‰∏≤‰∏∫We Are Happy.ÂàôÁªèËøáÊõøÊç¢‰πãÂêéÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫We%20Are%20Happy„ÄÇ ÊÄùË∑ØÂ¶ÇÊûú‰ªéÂâçÈù¢ÂºÄÂßãÈÅçÂéÜÁÑ∂ÂêéÊõøÊç¢ÔºåËøôÊ†∑‰ºöÂØºËá¥ÂêéÈù¢ÁöÑÂ≠óÁ¨¶Ë¢´ÊõøÊç¢ÔºåÊâÄ‰ª•Ë¶ÅÂ∞ÜÂêéÈù¢ÁöÑÂ≠óÁ¨¶ÂæÄÂêéÁßªÂä®2‰∏™Âçï‰ΩçÔºåÊõøÊç¢‰∏Ä‰∏™Á©∫Ê†ºÔºåÂÅáËÆæÂêéÈù¢ÁßªÂä®ÁöÑÂ≠óÁ¨¶‰∏∫nÔºåÈÇ£‰πàÂ§çÊùÇÂ∫¶‰∏∫O(n)ÔºåÂ¶ÇÊûúÊúâN‰∏™Á©∫Ê†ºÔºåÈÇ£‰πàÂ§çÊùÇÂ∫¶Â∞±ÊòØO(N*n); Â¶ÇÊûú‰ªéÂêéÈù¢ÂºÄÂßãÈÅçÂéÜÁÑ∂ÂêéÊõøÊç¢ÔºåÂÖàÈÅçÂéÜÂ≠óÁ¨¶‰∏≤ÁªüËÆ°Â≠óÁ¨¶‰∏≤‰∏≠Á©∫Ê†ºÁöÑ‰∏™Êï∞ÔºåËøôÊ†∑ÂéüÊù•Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶len+Á©∫Ê†ºÊï∞*2Â∞±ÊòØÊñ∞ÁöÑÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶ÔºåËøôÊ†∑Áî®‰∏§‰∏™ÊåáÈíàÂàÜÂà´ÊåáÂêë‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÊú´Â∞æÔºàp1ÊåáÂêëÂéüÊù•Â≠óÁ¨¶‰∏≤ÁöÑÊú´Â∞æÔºåp2ÊåáÂêëÊñ∞Â≠óÁ¨¶‰∏≤ÁöÑÊú´Â∞æÔºâÔºåÁÑ∂Âêé‰ªéÂéüÊù•Â≠óÁ¨¶‰∏≤ÁöÑÊú´Â∞æËøõË°åÈÅçÂéÜÔºåÂ∞Üp1ÊåáÂêëÁöÑÂÜÖÂÆπÂ§çÂà∂Áªôp2.Êï¥‰∏™ËøáÁ®ãÂè™ÈúÄË¶ÅÈÅçÂéÜÂéüÊù•ÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶O(n). AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include &lt;iostream&gt;#include &lt;stdio.h&gt;using namespace std;class a&#123;public: void solution(char * str, int length) &#123; if (str == NULL &amp;&amp; length &lt;=0) return; int p1; int p2; int number_size = 0; for (int i = 0;i &lt; length;i++) &#123; if (str[i] == ' ') number_size++; &#125; p2 = length + number_size * 2; p1 = length; for(int i = length; i &gt; 0; i--) &#123; if (str[p1-1] != ' ') &#123; str[p2-1] = str[p1-1]; p2--; p1--; &#125; else &#123; str[p2-1] = '0'; str[p2-2] = '2'; str[p2-3] = '%'; p1--; p2 = p2-3; &#125; &#125; // printf("%s", str); &#125;&#125;;int main()&#123; char *str = "we are happy."; // char str[] = "we are happy."; Ê≥®ÊÑèËøôÈáå‰∏çËÉΩÁî®str[],ËøôÊ†∑Âè™‰ºöÂàÜÈÖç14Â≠óËäÇÁöÑÈïøÂ∫¶ÔºåÂõ†‰∏∫Ë¶ÅÊâ©Â±ïÔºåÂ∞±ÊòØÂá∫Áé∞Êï∞ÁªÑË∂äÁïåÔºåÊ†àÊ∫¢Âá∫ a A; A.solution(str, 14); return 0;&#125; ÊÄªÁªì ÂØπ‰∫éÂ≠óÁ¨¶‰∏≤ÁöÑÊìç‰ΩúÔºåË¶ÅÂà§Êñ≠ÊòØ‰∏çÊòØÁ©∫ÁöÑÔºåË¶ÅÂ≠¶‰ºöËΩ¨Êç¢ËßÜËßí Â¶ÇÊûúË¶ÅÂêàÂπ∂‰∏§‰∏™Êï∞ÁªÑÊàñËÄÖÂ≠óÁ¨¶‰∏≤ÔºåÂ¶ÇÊûú‰ªéÂâçÂæÄÂêé‰ºöÈáçÂ§çÁßªÂä®Â§ö‰∏™Êï∞Â≠óÔºåÈÇ£‰πàÂèØ‰ª•ËÄÉËôë‰ªéÂêéÂæÄÂâçËøõË°åÂêàÂπ∂ ÂØπ‰∫éÂ≠óÁ¨¶‰∏≤ÁöÑ‰∏Ä‰∫õÊñ∞ÁöÑËÆ§ËØÜ 1234567891011121314151617181920212223242526272829303132#include &lt;iostream&gt;using namespace std;int main()&#123; char str1[] = "hello"; char str2[] = "hello"; char * str3 = "hello"; char * str4 = "hello"; if (str1 == str2) &#123; cout &lt;&lt; "yes" &lt;&lt; endl; &#125; else &#123; cout &lt;&lt; "no" &lt;&lt;endl; &#125; if (str3 == str4) &#123; cout &lt;&lt; "yes" &lt;&lt; endl; &#125; else &#123; cout &lt;&lt; "no" &lt;&lt;endl; &#125;// c++‰∏≠‰∏∫‰∫ÜËäÇÁúÅÂÜÖÂ≠òÔºåÂ∞ÜÂ∏∏ÈáèÂ≠óÁ¨¶‰∏≤ÊîæÂú®ÂçïÁã¨ÁöÑ‰∏Ä‰∏™ÂÜÖÂ≠òÂå∫ÂüüÔºåÂΩìÂá†‰∏™ÊåáÈíàËµãÂÄºÁªôÁõ∏ÂêåÁöÑÂ∏∏ÈáèÂ≠óÁ¨¶‰∏≤Ôºå‰ªñ‰ª¨ÂÆûÈôÖ‰∏ä‰ºöÊåáÂêëÁõ∏ÂêåÁöÑÂÜÖÂ≠òÂú∞ÂùÄ// str1 str2ÊòØ‰∏§‰∏™Â≠óÁ¨¶‰∏≤Êï∞ÁªÑÔºå‰∏∫‰ªñ‰ª¨ÂàÜÈÖç‰∫Ü6‰∏™Â≠óËäÇÔºåÊ≥®ÊÑèÊØè‰∏™Â≠óÁ¨¶‰∏≤ÂêéÈù¢Êúâ\0ÁªìÊùüÊ†áÂøóÔºåÁÑ∂ÂêéÊäähelloËµãÂÄºÂà∞Êï∞ÁªÑ‰∏≠ÔºåËøôÊòØ‰∏§‰∏™ÂàùÂßãÂú∞ÂùÄ‰∏çÂêåÁöÑÊï∞ÁªÑÔºåÊâÄ‰ª•str1Âíåstr2ÊòØ‰∏§‰∏™‰∏çÂêåÁöÑÂÄº return 0;&#125;]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂâëÊåáoffer-‰∫åÁª¥Êï∞ÁªÑ‰∏≠ÁöÑÊü•Êâæ]]></title>
    <url>%2F%E5%89%91%E6%8C%87offer-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Âú®‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑ‰∏≠ÔºàÊØè‰∏™‰∏ÄÁª¥Êï∞ÁªÑÁöÑÈïøÂ∫¶Áõ∏ÂêåÔºâÔºåÊØè‰∏ÄË°åÈÉΩÊåâÁÖß‰ªéÂ∑¶Âà∞Âè≥ÈÄíÂ¢ûÁöÑÈ°∫Â∫èÊéíÂ∫èÔºåÊØè‰∏ÄÂàóÈÉΩÊåâÁÖß‰ªé‰∏äÂà∞‰∏ãÈÄíÂ¢ûÁöÑÈ°∫Â∫èÊéíÂ∫è„ÄÇËØ∑ÂÆåÊàê‰∏Ä‰∏™ÂáΩÊï∞ÔºåËæìÂÖ•ËøôÊ†∑ÁöÑ‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑÂíå‰∏Ä‰∏™Êï¥Êï∞ÔºåÂà§Êñ≠Êï∞ÁªÑ‰∏≠ÊòØÂê¶Âê´ÊúâËØ•Êï¥Êï∞„ÄÇ ÊÄùË∑ØÔºö Êö¥ÂäõÊü•ÊâæÔºåÂ§çÊùÇÂ∫¶O(n*m) Êï∞ÁªÑÂú®ÊüêÁßçÁ®ãÂ∫¶ÊòØÊúâÂ∫èÁöÑÔºåÂèØ‰ª•‰ªéÂè≥‰∏äËßíÊàñËÄÖÂ∑¶‰∏ãËßíÂºÄÂßãÂà§Êñ≠Á≠õÈÄâÔºåÈÄêÊ∏êÁº©Â∞èËåÉÂõ¥ÔºåÊúÄÂùèÁöÑÂ§çÊùÇÂ∫¶O(n + m) AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445class Solution&#123;public: // bool Find(int target, vector&lt;vector&lt;int&gt;&gt; array) &#123; // for (int i = 0;i &lt; array.size();i++) // &#123; // for (int j = 0;j &lt; array[i].size();j++) // &#123; // if (target == array[i][j]) // return true; // &#125; // &#125; // return false; // &#125; bool Find(int target, vector&lt;vector&lt;int&gt;&gt; array) &#123; int row = array.size(); //Ë°åÊï∞ int col = array[row-1].size(); //ÂàóÊï∞ Ê≥®ÊÑèËøôÈáåÊ±ÇË¶ÅÂ∞Ürow-1 //cout &lt;&lt; row &lt;&lt; " " &lt;&lt; col &lt;&lt; endl; if (row &gt;0 &amp;&amp; col &gt;0) &#123; row = 0; col = col-1; while (row &lt;= array.size()-1 &amp;&amp; col &gt;= 0) &#123; if (array[row][col] == target) &#123; //cout &lt;&lt; "ÊâæÂà∞‰∫Üe" &lt;&lt;endl; return true; &#125; else if (array[row][col] &gt; target) col--; else &#123; row++; &#125; &#125; &#125; //cout &lt;&lt; "Ê≤°Êúâ" ; return false; &#125;&#125;; ÊÄªÁªìÔºö Â•ΩÂÉèÊ≤°‰ªÄ‰πàÂèØ‰ª•ÊÄªÁªìÁöÑÔºåÂ≠¶Âà∞ÁöÑÂ∞±ÊòØvectorÂÆö‰πâ‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑÔºåvector&lt;vector&lt;int&gt;&gt; array(4, vector&lt;int&gt;(4)); //ÂÆö‰πâ‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑ4x4]]></content>
      <categories>
        <category>OJ</category>
        <category>ÂâëÊåáoffer</category>
      </categories>
      <tags>
        <tag>Êï∞ÁªÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[c++‰πãvectorÁöÑ‰ΩøÁî®]]></title>
    <url>%2Fc%2B%2B%E4%B9%8Bvector%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[ÂÜÖÁΩÆÂáΩÊï∞ at(size_type n)ÂáΩÊï∞ ËøîÂõûÂØπÂêëÈáè‰∏≠‰∏∫‰ΩçÁΩÆnÂ§ÑÂÖÉÁ¥†ÁöÑÂºïÁî®,referenceÊàñËÄÖÂ¶ÇÊûúÂêëÈáè‰∏≠ÂÖÉÁ¥†‰∏∫constÔºåÂàôËøîÂõûconst reference. 12345678910// vectorÁöÑÂáΩÊï∞atËøîÂõû‰∏Ä‰∏™ÂÆπÂô®ÂÜÖÂÆπÂØπË±°ÁöÑÂºïÁî®vector &lt;int&gt;a(8); for (int i = 0;i &lt; 8;i++)&#123; a.at(i) = i;&#125;for (int i = 0; i&lt; a.size();i++)&#123; cout &lt;&lt; a.at(i) &lt;&lt;endl;&#125; ÂàùÂßãÂåñ Áî®Êï∞ÁªÑÂàùÂßãÂåñ 123456int Tree_pre[8] = &#123;1,2,4,7,3,5,6,8&#125;;int Tree_vin[8] = &#123;4,7,2,1,5,3,8,6&#125;;vector&lt;int&gt;pre(Tree_pre, Tree_pre+8); //Áî®Êï∞ÁªÑÂàùÂßãÂåñÂêëÈáèvector&lt;int&gt;vin(Tree_vin, Tree_vin+8); Áî®vectorÂàùÂßãÂåñ‰∫åÁª¥Êï∞ÁªÑÔºà‰ª•‰∏ãÊñπÊ≥ïÊòØÂü∫‰∫éc++11Ê†áÂáÜÔºåc++98‰∏çÊîØÊåÅÔºâ 12345// vector&lt;vector&lt;int&gt;&gt;arr(3, vector&lt;int&gt;(3));// arr[0] = &#123;1,2,3&#125;;// arr[1] = &#123;4,5,6&#125;;// arr[2] = &#123;7,8,9&#125;;vector&lt;vector&lt;int&gt;&gt; arr = &#123;&#123;1, 2&#125;, &#123;3, 4&#125;, &#123;5, 6&#125;&#125;; ÈÅçÂéÜvector ‰ΩøÁî®Ëø≠‰ª£Âô® 12for (vector&lt;int&gt;::iterator it = res.begin(); it != res.end(); it++) cout &lt;&lt; *it &lt;&lt; " "; Âà§Êñ≠Êüê‰∏™ÂÖÉÁ¥†ÊòØÂê¶Âú®vector‰∏≠ 12if (find(res.begin(), res.end(), str) == res.end()) //Âà§Êñ≠ÈáçÂ§ç res.push_back(str); ÂØπvectorËøõË°åÊéíÂ∫èÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂΩìvector‰∏≠ÊòØËá™ÂÆö‰πâÁöÑÁ±ªÂûãÔºåÈúÄË¶ÅÈáçËΩΩ== 1sort(res.begin(), res.end()); Ê≥®ÊÑè‰∏çËÉΩÂØπ‰∏Ä‰∏™Á©∫ÁöÑvectorËøõË°åËµãÂÄºÊìç‰Ωú 123456//‰∏çËÉΩÂØπ‰∏Ä‰∏™Á©∫ÁöÑvectorÁõ¥Êé•ËµãÂÄºÔºåÂè™ËÉΩPush_backint i = 0;vector&lt;string&gt;tmp;tmp.push_back("hello");tmp[0] = to_string(numbers[0]);cout &lt;&lt; tmp[0]; ‰∫åÁª¥vectorÁöÑÈÅçÂéÜÊìç‰Ωú 12345678for (vector&lt;vector&lt;int&gt;&gt;::iterator it = res.begin();it != res.end();it++)&#123; vector&lt;int&gt;i = *it; for (vector&lt;int&gt;::iterator j = i.begin();j != i.end();j++) cout &lt;&lt; *j &lt;&lt; " "; cout &lt;&lt; endl;&#125;]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´‰πãÊï∞ÊçÆÂ≠òÂÇ®]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%2F</url>
    <content type="text"><![CDATA[Êï∞ÊçÆÂ≠òÂÇ®ÁöÑ‰∏§ÁßçÊñπÂºè Â≠òÂÇ®Âú®Êñá‰ª∂‰∏≠ÔºåÂåÖÊã¨TXTÊñá‰ª∂ÂíåCSVÊñá‰ª∂ Â≠òÂÇ®Âú®Êï∞ÊçÆÂ∫ì‰∏≠ÔºåÂåÖÊã¨MySQLÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ìÂíåMongoDBÊï∞ÊçÆÂ∫ì Êñá‰ª∂ÊâìÂºÄÊñπÂºè ËØªÂÜôÊñπÂºè ÂèØÂê¶ËØªÂÜô Ëã•Êñá‰ª∂‰∏çÂ≠òÂú® ÂÜôÂÖ•ÊñπÂºè w ÂÜôÂÖ• ÂàõÂª∫ Ë¶ÜÁõñÂÜôÂÖ• w+ ËØªÂèñ+ÂÜôÂÖ• ÂàõÂª∫ Ë¶ÜÁõñÂÜôÂÖ• a ÂÜôÂÖ• ÂàõÂª∫ ËøΩÂä†ÂÜôÂÖ• a+ ËØªÂèñ+ÂÜôÂÖ• ÂàõÂª∫ ËøΩÂä†ÂÜôÂÖ• r ËØªÂèñ Êä•Èîô ‰∏çÂèØÂÜôÂÖ• r+ ËØªÂèñ+ÂÜôÂÖ• Êä•Èîô Ë¶ÜÁõñÂÜôÂÖ• 12345678910111213141516171819202122232425262728293031323334353637# output = '\t'.join(['name', 'age', 'gender'])# print(output)# # name age genderimport csvdef txt(): with open('Â≠¶‰π†Âº∫ÂõΩ.txt', "r", encoding='utf-8') as f: result = f.read().splitlines(keepends=True) # keependsË°®Á§∫‰øùÁïôÊç¢Ë°åÁ¨¶ÔºåËøîÂõû‰∏Ä‰∏™ÂàóË°® # result = f.read() print(result) f.close()def Csv(): # with open('test.csv', 'r', encoding='utf-8') as f: with open('test.csv', newline='',encoding='utf-8-sig') as f: csv_read = csv.reader(f) for row in csv_read: print(row)"""Âú®utf-8ÁºñÁ†ÅÊñá‰ª∂‰∏≠BOMÂú®Êñá‰ª∂Â§¥ÈÉ®ÔºåÂç†Áî®‰∏â‰∏™Â≠óËäÇÔºåÁî®Êù•Ê†áÁ§∫ËØ•Êñá‰ª∂Â±û‰∫éutf-8ÁºñÁ†Å['\ufeff1', '2', '3', '4', '5']['11', '22', '33', '44', '55']['111', '222', '333', '444', '555']"""def Write_csv(): list_data = [1,2,4,5] with open('write_csv.csv', 'a+', encoding='utf-8') as f: csv_writer = csv.writer(f) csv_writer.writerow(list_data) # Â∞ÜÂàóË°®‰∏≠ÁöÑÊï∞ÁªÑÂÜôÂÖ•‰∏ÄË°å‰∏≠ if __name__ == "__main__": # pass # Csv() Write_csv() Â∞ÜÊï∞ÊçÆÂ≠òÊîæÂú®mysqlÊï∞ÊçÆÂ∫ì ÂàõÂª∫Êï∞ÊçÆÂ∫ìcreate database scraping; ÂàáÊç¢Êï∞ÊçÆÂ∫ìuse scraping; ÂàõÂª∫Êï∞ÊçÆË°®create table Ë°®Âêç(column_name1 column_type1, column_name2 column_type2); Êü•ÁúãË°®ÁöÑÁªìÊûÑdescribe Ë°®Âêç; Âú®Êï∞ÊçÆË°®‰∏≠ÊèíÂÖ•Êï∞ÊçÆinsert into urls (url, content) values (&quot;www.baidu.com&quot;, &quot;ËøôÊòØÂÜÖÂÆπ&quot;); Êü•ÁúãÊï∞ÊçÆË°® select * from urls; select url, content from urls where id =1; select * from urls where id=1 Âà†Èô§Êï∞ÊçÆdelete from urls where ulr=&quot;www.baidu.com&quot;;Â¶ÇÊûú‰∏çÂä†whereÂ≠êÂè•ÔºåÂ∞±‰ºöÂ∞ÜÊï¥‰∏™Êï∞ÊçÆË°®ÂÖ®ÈÉ®Âà†Èô§ ÊèíÂÖ•Êï∞ÊçÆinsert into urls (url,content) values (&quot;www.baidu.com&quot;, &quot;ÈôàÊôìÂÅ•&quot;);Âõ†‰∏∫‰πãÂâçÂàõÂª∫ÁöÑÁ¨¨‰∏ÄÊù°Êï∞ÊçÆË¢´Âà†Èô§‰∫ÜÔºåÁÑ∂ÂêéÁé∞Âú®ÈáçÊñ∞ÂàõÂª∫‰∫ÜÊñ∞ÁöÑ‰∏ÄÊù°ÔºåÂ∞±ÈªòËÆ§‰ªéÁ¨¨‰∫åÂºÄÂßãÁÆóËµ∑„ÄÇ ‰øÆÊîπÊï∞ÊçÆupdate urls set url=&quot;www.google.com&quot;,content=&quot;google&quot; where id =2; pythonÊìç‰Ωúmysql ÂÆâË£ÖpymysqlÂ∫ìpip install pymysql ËøûÊé•ÊàêÂäüÂπ∂Êìç‰ΩúÊï∞ÊçÆÂ∫ì 1234567891011121314151617181920212223242526import pymysql# ÊâìÂºÄÊï∞ÊçÆÂ∫ìËøûÊé•# db = pymysql.connect(host = "localhost", user = "root", password = 1234, db= "urls")config = &#123; "host": "localhost", "user": "root", "password": "1234", "db": "scraping"&#125;# **ÂèÇÊï∞ÔºåË°®Á§∫Áî®Â≠óÂÖ∏ÁöÑÂΩ¢ÂºèÂØºÂÖ•ÂèÇÊï∞Ôºå *ÂèÇÊï∞ÂàôÊòØÈªòËÆ§‰ª•ÂÖÉÁªÑÁöÑÊñπÂºèdb = pymysql.connect(**config)# cursorÔºàÔºâÊñπÊ≥ïËé∑ÂèñÊìç‰ΩúÊ∏∏Ê†ácursor = db.cursor()# Ë¶ÅÊ≥®ÊÑèsqlËØ≠Âè•ÁöÑÊ†ºÂºèsql = "insert into urls (url, content) values ('www.baidu.com', 'ÁôæÂ∫¶');" try: cursor.execute(sql) #Êèê‰∫§Âà∞Êï∞ÊçÆÂ∫ì db.commit() print("ÂÜôÂÖ•ÊàêÂäü")except: db.rollback()db.close() Áà¨ÂèñÂçöÂÆ¢ÁöÑÊñáÁ´†ÈìæÊé•ÂíåÊ†áÈ¢òÁÑ∂ÂêéÂ≠òÂÇ®Âú®mysql‰∏≠ 123456789101112131415161718192021222324252627282930313233343536373839404142434445import pymysqlimport requestsfrom bs4 import BeautifulSoup# ÊâìÂºÄÊï∞ÊçÆÂ∫ìËøûÊé•# db = pymysql.connect(host = "localhost", user = "root", password = 1234, db= "urls")config = &#123; "host": "localhost", "user": "root", "password": "1234", "db": "scraping"&#125;# **ÂèÇÊï∞ÔºåË°®Á§∫Áî®Â≠óÂÖ∏ÁöÑÂΩ¢ÂºèÂØºÂÖ•ÂèÇÊï∞Ôºå *ÂèÇÊï∞ÂàôÊòØÈªòËÆ§‰ª•ÂÖÉÁªÑÁöÑÊñπÂºèdb = pymysql.connect(**config)# cursorÔºàÔºâÊñπÊ≥ïËé∑ÂèñÊìç‰ΩúÊ∏∏Ê†ácursor = db.cursor()"""# Ë¶ÅÊ≥®ÊÑèsqlËØ≠Âè•ÁöÑÊ†ºÂºèsql = "insert into urls (url, content) values ('www.baidu.com', 'ÁôæÂ∫¶');" try: cursor.execute(sql) #Êèê‰∫§Âà∞Êï∞ÊçÆÂ∫ì db.commit() print("ÂÜôÂÖ•ÊàêÂäü")except: db.rollback()db.close()"""link = "http://www.santostang.com"r = requests.get(link)soup = BeautifulSoup(r.text, 'lxml')title_list = soup.find_all('h1', class_="post-title")for eachone in title_list: url = eachone.a['href'] content = eachone.a.text.strip()# Ê≥®ÊÑèvalues ('','')ÈúÄË¶ÅÂä†ÂºïÂè∑Ë°®Á§∫Â≠óÁ¨¶‰∏≤ sql = "insert into urls (url, content) values ('&#123;url&#125;', '&#123;content&#125;');".format(url= url, content= content) try: cursor.execute(sql) db.commit() print("ÊèíÂÖ•ÊàêÂäü") except: db.rollback()db.close() Â≠òÂÇ®Âà∞MongoDBÊï∞ÊçÆÂ∫ì‰∏≠ ÂÆâË£Ö dataÁî®Êù•Â≠òÊîæÊï∞ÊçÆÂ∫ìÔºå logÁî®Êù•Â≠òÊîæÊï∞ÊçÆÂ∫ìÁöÑÊìç‰ΩúËÆ∞ÂΩï ÂêØÂä®ÊñπÂºè ‰ΩøÁî®MongoDBÁöÑÁ®ãÂ∫èÂêØÂä®ÊñπÂºè ÂêØÂä®Á®ãÂ∫èÔºåÂÖàÂêØÂä®mongd.exe,Âú®ÂêØÂä®mongo.exe;ÂΩìmongod.exeË¢´ÂÖ≥Èó≠ÂêéÔºåmongo.exeÂ∞±Êó†Ê≥ïËøûÊé•Êï∞ÊçÆÂ∫ì show dbsÊü•ÁúãÊï∞ÊçÆÂ∫ì ‚Äã ‰ª•windowsÊúçÂä°ÊâìÂºÄ ÂàáÊç¢Âà∞MongoDBÂÆâË£ÖÁõÆÂΩïÁöÑbinÊñá‰ª∂Â§π cmdÊñπÂºèÊâìÂºÄÔºåËæìÂÖ•mongod.exe --logpath &quot;logÁöÑË∑ØÂæÑ&quot; --logappend--dbpath &quot;dbÁöÑË∑ØÂæÑ&quot; --serviceName &quot;MongoDB&quot; --install windowsÊúçÂä°ËøêË°åÊ®°ÂºèÂ∑≤ÁªèÂÆâË£ÖÂÆåÊàêÔºåÂêØÂä®ÊúçÂä°net start MongDB MongoDB‰∏éSQLÁöÑÂå∫Âà´ÂíåËÅîÁ≥ª SQLÊúØËØ≠ MongoDBÊúØËØ≠ Ëß£Èáä database database Êï∞ÊçÆÂ∫ì table collection Êï∞ÊçÆÂ∫ìË°®/ÈõÜÂêà row document Êï∞ÊçÆËÆ∞ÂΩïË°å/ÊñáÊ°£ column field Êï∞ÊçÆÂ≠óÊÆµ/Âüü index index Á¥¢Âºï table_joins MongoDB‰∏çÊîØÊåÅË°®ÁöÑËøûÊé• primary_key primary_key ‰∏ªÈîÆÔºåMongoDBËá™Âä®Â∞Ü_idÂ≠óÊÆµËÆæÁΩÆ‰∏∫‰∏ªÈîÆ MongoDBÁöÑÊñáÊ°£‰∏çÈúÄË¶ÅËÆæÁΩÆÁõ∏ÂêåÁöÑÂ≠óÊÆµÔºåÂπ∂‰∏îÁõ∏ÂêåÁöÑÂ≠óÊÆµ‰∏çÈúÄË¶ÅÁõ∏ÂêåÁöÑÊï∞ÊçÆÁ±ªÂûã ‰ΩøÁî®pythonÊìç‰ΩúMongoDB È¶ñÂÖàËøûÊé•ÂÆ¢Êà∑Á´Ø ÁÑ∂ÂêéËøûÊé•Êï∞ÊçÆÂ∫ì ÊúÄÂêéËøûÊé•ÂØπÂ∫îÁöÑÈõÜÂêàÔºà‰πüÂ∞±ÊòØË°®Ôºâ pip install pymongoÂÆâË£ÖÊìç‰ΩúÂ∫ì ÂàõÂª∫Êï∞ÊçÆÂ∫ì Êï∞ÊçÆÂ∫ìÂè™ÊúâÂú®ÂÜÖÂÆπÊèíÂÖ•ÂêéÊâç‰ºöÂàõÂª∫Ôºå‰πüÂ∞±ÊòØËØ¥Êï∞ÊçÆÂ∫ìÂàõÂª∫ÂêéËøòË¶ÅÂàõÂª∫‰∏Ä‰∏™ÈõÜÂêàÂπ∂ÊèíÂÖ•‰∏Ä‰∏™ÊñáÊ°£ÔºåÊï∞ÊçÆÂ∫ìÊâçÂèØ‰ª•ÂàõÂª∫Ôºå‰πüÂ∞±ÊòØËØ¥ÔºåÂ¶ÇÊûú‰Ω†Áé∞Âú®ÂéªÂà§Êñ≠ËØ•Êï∞ÊçÆÂ∫ìÊòØÂê¶Â≠òÂú®ÔºåÁ≠îÊ°àÊòØÂê¶ÂÆöÁöÑ 12345def db_created(db_name): client = MongoClient(host="localhost", port=27017) db_name = client[db_name] print("ÂàõÂª∫ÊàêÂäüÔºÅ") Âà§Êñ≠Êï∞ÊçÆÂ∫ìÊòØÂê¶Â≠òÂú® 123456def db_existed(db_name): client = MongoClient(host="localhost", port=27017) #ËøîÂõûÊâÄÊúâÁöÑÊï∞ÊçÆÂ∫ìÂêçÂ≠óÁöÑÂàóË°® db_list = client.list_database_names() if db_name in db_list: return True ÂàõÂª∫ÈõÜÂêà ÈõÜÂêàÂè™ÊúâÂú®ÂÜÖÂÆπÊèíÂÖ•ÂêéÊâç‰ºöÂàõÂª∫! Â∞±ÊòØËØ¥ÔºåÂàõÂª∫ÈõÜÂêà(Êï∞ÊçÆË°®)ÂêéË¶ÅÂÜçÊèíÂÖ•‰∏Ä‰∏™ÊñáÊ°£(ËÆ∞ÂΩï)ÔºåÈõÜÂêàÊâç‰ºöÁúüÊ≠£ÂàõÂª∫„ÄÇ 12345678def collection_create(collection_name): # ËøûÊé•ÂÆ¢Êà∑Á´Ø client = MongoClient(host="localhost", port=27017) # ËøûÊé•Êï∞ÊçÆÂ∫ì my_db = client['runoodbd'] # ËøûÊé•Êï∞ÊçÆÂ∫ìÁöÑÈõÜÂêà my_collection = my_db[collection_name] print("ÂàõÂª∫ÊàêÂäü") Âà§Êñ≠ÈõÜÂêàÊòØÂê¶Â≠òÂú® 123456def collection_existed(collection_name): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] collection_name_list = db.list_collection_names() if collection_name in collection_name_list: return True ÊèíÂÖ•ÊñáÊ°£ insert_one(dict)ÔºöÊèíÂÖ•‰∏ÄÊù°ÊñáÊ°£ÔºåÂèÇÊï∞ÊòØÂ≠óÂÖ∏ÂØπÔºåËøîÂõû‰∏Ä‰∏™InsertOneResultÔºåËØ•ÂØπË±°Êúâinserted_idÂ±ûÊÄßÔºåË°®Á§∫ÊèíÂÖ•ÊñáÊ°£ÁöÑidÂÄº 1234567891011121314151617# ÊèíÂÖ•Êï∞ÊçÆdef insertone(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites'] data = &#123; "name": "runood", "alexa": "10000", "url": "https://www.runood.com" &#125; x = coll.insert_one(data) print(x) print(x.inserted_id) """ &lt;pymongo.results.InsertOneResult object at 0x0000026BFCBD1508&gt; 5e16d475e26935b6620008c9 """ insert_many(Â≠óÂÖ∏ÂàóË°®)ÔºöÊèíÂÖ•Â§ö‰∏™ÊñáÊ°£ÔºåÂèÇÊï∞ÊòØÂ≠óÂÖ∏ÂàóË°®ÔºåËøîÂõû‰∏Ä‰∏™InsertManyResultÂØπË±°ÔºåËØ•ÂØπË±°Êúâinserted_idsÂ±ûÊÄß 12345678910111213141516171819# ÊèíÂÖ•Â§öÊù°Êï∞ÊçÆdef insertmany(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites'] data = [ &#123; "name": "Taobao", "alexa": "100", "url": "https://www.taobao.com" &#125;, &#123; "name": "QQ", "alexa": "101", "url": "https://www.qq.com" &#125;, &#123; "name": "Facebook", "alexa": "10", "url": "https://www.facebook.com" &#125;, &#123; "name": "Áü•‰πé", "alexa": "103", "url": "https://www.zhihu.com" &#125;, &#123; "name": "Github", "alexa": "109", "url": "https://www.github.com" &#125; ] x = coll.insert_many(data) print(x) print(x.inserted_ids) """ &lt;pymongo.results.InsertManyResult object at 0x00000174A8DD5488&gt; [ObjectId('5e16d7771b8e53410870a1f7'), ObjectId('5e16d7771b8e53410870a1f8'), ObjectId('5e16d7771b8e53410870a1f9'), ObjectId('5e16d7771b8e53410870a1fa'), ObjectId('5e16d7771b8e53410870a1fb')] """ ÊåáÂÆö_idÊèíÂÖ•Â§ö‰∏™ÊñáÊ°£ 12345678910111213141516171819def appoint_id_insert(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] data = [ &#123; "name": "Taobao", "alexa": "100", "url": "https://www.taobao.com", "_id": 1 &#125;, &#123; "name": "QQ", "alexa": "101", "url": "https://www.qq.com", "_id": 2 &#125;, &#123; "name": "Facebook", "alexa": "10", "url": "https://www.facebook.com", "_id": 3 &#125;, &#123; "name": "Áü•‰πé", "alexa": "103", "url": "https://www.zhihu.com" , "_id": 4&#125;, &#123; "name": "Github", "alexa": "109", "url": "https://www.github.com", "_id":5 &#125; ] x = coll.insert_many(data) print(x) print(x.inserted_ids)"""&lt;pymongo.results.InsertManyResult object at 0x00000254D74F7748&gt;[1, 2, 3, 4, 5]""" Êü•ËØ¢ÊñáÊ°£ Êü•ËØ¢‰∏ÄÊù°Êï∞ÊçÆfind_one()ÔºåËøîÂõûÈõÜÂêà‰∏≠Á¨¨‰∏ÄÊù°Êï∞ÊçÆ 1234567def findone(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] print(coll.find_one()) findone()# &#123;'_id': 1, 'name': 'Taobao', 'alexa': '100', 'url': 'https://www.taobao.com'&#125; Êü•ËØ¢ÈõÜÂêà‰∏≠ÊâÄÊúâÊï∞ÊçÆfind() 12345678910111213def findall(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] for eachone in coll.find(): print(eachone)"""&#123;'_id': 1, 'name': 'Taobao', 'alexa': '100', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '101', 'url': 'https://www.qq.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 4, 'name': 'Áü•‰πé', 'alexa': '103', 'url': 'https://www.zhihu.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;""" Êü•ËØ¢ÊåáÂÆöÂ≠óÊÆµÁöÑÊï∞ÊçÆÔºåÂ∞ÜË¶ÅËøîÂõûÁöÑÂ≠óÊÆµÂØπÂ∫îÂÄºËÆæÁΩÆ‰∏∫1ÔºåÈô§‰∫Ü_idÂ≠óÊÆµÂ§ñÔºåÂÖ∂‰ªñÂ≠óÊÆµÂêåÊó∂ÊåáÂÆö‰∏∫0Ôºå 1Âàô‰ºöÊä•Èîô 12345678910111213def print_some_field(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] for eachone in coll.find(&#123;&#125;, &#123;'name': 1, "alexa":1, "_id":0&#125;): print(eachone)"""&#123;'name': 'Taobao', 'alexa': '100'&#125;&#123;'name': 'QQ', 'alexa': '101'&#125;&#123;'name': 'Facebook', 'alexa': '10'&#125;&#123;'name': 'Áü•‰πé', 'alexa': '103'&#125;&#123;'name': 'Github', 'alexa': '109'&#125;""" Ê†πÊçÆÊåáÂÆöÊù°‰ª∂Êü•ËØ¢ 123456789def find_by_special_condition(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] special_condition = &#123;"name": "QQ"&#125; # print(coll.find(special_condition)) for x in coll.find(special_condition): print(x) # &#123;'_id': 2, 'name': 'QQ', 'alexa': '101', 'url': 'https://www.qq.com'&#125; ‰øÆÈ•∞Á¨¶Êü•ËØ¢Â§ß‰∫é‰øÆÈ•∞Á¨¶$gt 12345678910111213def higher_find(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] condition = &#123;"name": &#123;'$gt': 'H'&#125;&#125; for x in coll.find(condition): print(x) # ËøîÂõûnameÂ≠óÊÆµÁ¨¨‰∏Ä‰∏™Â≠óÊØçASCiiÁöÑÂÄºÂ§ß‰∫é‚ÄúH"Êï∞ÊçÆÔºåÂ§ß‰∫éÁöÑ‰øÆÈ•∞Á¨¶‰∏∫&#123;"$gt":"H"&#125;"""&#123;'_id': 1, 'name': 'Taobao', 'alexa': '100', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '101', 'url': 'https://www.qq.com'&#125;&#123;'_id': 4, 'name': 'Áü•‰πé', 'alexa': '103', 'url': 'https://www.zhihu.com'&#125;""" ‰ΩøÁî®Ê≠£ÂàôË°®ËææÂºèÊü•ËØ¢ÔºåÂè™Áî®‰∫éÊêúÁ¥¢Â≠óÁ¨¶‰∏≤ÁöÑÂ≠óÊÆµÔºå$regex 12345678def find_by_re(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] re_condition = &#123;"name" : &#123;"$regex" : "^G"&#125;&#125; for x in coll.find(re_condition): print(x) # &#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125; ËøîÂõûÊåáÂÆöÊù°Êï∞ËÆ∞ÂΩïÔºå limit()ÊñπÊ≥ï 12345678910111213def find_limit(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] for x in coll.find().limit(3): print(x)"""find_limit()&#123;'_id': 1, 'name': 'Taobao', 'alexa': '100', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '101', 'url': 'https://www.qq.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;""" ‰øÆÊîπÊñáÊ°£ update_one()ÊñπÊ≥ïÔºöÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞‰∏∫Êü•ËØ¢ÁöÑÊù°‰ª∂ÔºåÁ¨¨‰∫å‰∏™ÂèÇÊï∞‰∏∫Ë¶Å‰øÆÊîπÁöÑÂ≠óÊÆµÔºåÂ¶ÇÊûúÊü•ÊâæÂà∞ÁöÑÂåπÈÖçÊï∞ÊçÆÂ§ö‰∫é‰∏ÄÊù°ÔºåÂàô‰ºö‰øÆÊîπÁ¨¨‰∏ÄÊù°Ôºå ÂèÇÊï∞upsert=TrueË°®Á§∫ÂΩìÊ≤°ÊúâÊü•ËØ¢Âà∞Á¨¶ÂêàÁöÑÊï∞ÊçÆÔºåÂ∞±Êñ∞Êï∞ÊçÆÊèíÂÖ• 1234567891011121314151617181920def updateone(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] myquery = &#123;"alexa": "100"&#125; newvalue = &#123;"$set": &#123;"alexa": "99"&#125;&#125; # coll.update_one(myquery, newvalue) coll.update_one(myquery, newvalue) # ÊâìÂç∞‰øÆÊîπÂêéÁöÑÈõÜÂêà for x in coll.find(): print(x)"""&#123;'_id': 1, 'name': 'Taobao', 'alexa': '99', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '101', 'url': 'https://www.qq.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 4, 'name': 'Áü•‰πé', 'alexa': '103', 'url': 'https://www.zhihu.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;""" update_many()Ôºö‰øÆÊîπÊâÄÊúâÂåπÈÖçÂà∞ÁöÑËÆ∞ÂΩï 12345678910111213141516171819202122232425262728293031323334353637383940def updatemany(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] one_data = &#123; "_id":6, "name": "QQÈÇÆÁÆ±", "alexa": "111", "url": "http://www.xxxx.com" &#125; coll.insert_one(one_data) print("ÊèíÂÖ•") for x in coll.find(): print(x) myquery = &#123;"name": &#123;"$regex": "^Q"&#125;&#125; new_data = &#123;"$set": &#123;"alexa": "999"&#125;&#125; x = coll.update_many(myquery, new_data) print(x.modified_count, "ÊñáÊ°£‰øÆÊîπ") for i in coll.find(): print(i)"""ÊèíÂÖ•&#123;'_id': 1, 'name': 'Taobao', 'alexa': '99', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '101', 'url': 'https://www.qq.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 4, 'name': 'Áü•‰πé', 'alexa': '103', 'url': 'https://www.zhihu.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;&#123;'_id': 6, 'name': 'QQÈÇÆÁÆ±', 'alexa': '111', 'url': 'http://www.xxxx.com'&#125;2 ÊñáÊ°£‰øÆÊîπ&#123;'_id': 1, 'name': 'Taobao', 'alexa': '99', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '999', 'url': 'https://www.qq.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 4, 'name': 'Áü•‰πé', 'alexa': '103', 'url': 'https://www.zhihu.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;&#123;'_id': 6, 'name': 'QQÈÇÆÁÆ±', 'alexa': '999', 'url': 'http://www.xxxx.com'&#125;""" ÊéíÂ∫èsortÊñπÊ≥ïÔºåÁ¨¨‰∏Ä‰∏™Â≠óÊÆµÊåáÂÆöË¶ÅÊéíÂ∫èÁöÑÂ≠óÊÆµÔºåÁ¨¨‰∫å‰∏™Â≠óÊÆµÊåáÂÆöÊéíÂ∫èÁöÑËßÑÂàôÔºå1‰ΩçÂçáÂ∫èÔºå-1‰∏∫ÈôçÂ∫èÔºåÈªòËÆ§‰∏∫ÂçáÂ∫è 1234567891011121314def sort1(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] for x in coll.find().sort("alexa"): print(x)"""&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 4, 'name': 'Áü•‰πé', 'alexa': '103', 'url': 'https://www.zhihu.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;&#123;'_id': 1, 'name': 'Taobao', 'alexa': '99', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '999', 'url': 'https://www.qq.com'&#125;&#123;'_id': 6, 'name': 'QQÈÇÆÁÆ±', 'alexa': '999', 'url': 'http://www.xxxx.com'&#125;""" Âà†Èô§Êï∞ÊçÆ Âà†Èô§Âçï‰∏™ÊñáÊ°£delete_one 12345678910111213141516def deleteone(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] myquery = &#123;"name" : "Áü•‰πé"&#125; coll.delete_one(myquery) for x in coll.find(): print(x)"""&#123;'_id': 1, 'name': 'Taobao', 'alexa': '99', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 2, 'name': 'QQ', 'alexa': '999', 'url': 'https://www.qq.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;&#123;'_id': 6, 'name': 'QQÈÇÆÁÆ±', 'alexa': '999', 'url': 'http://www.xxxx.com'&#125;""" Âà†Èô§Â§ö‰∏™ÊñáÊ°£delete_many() 12345678910111213141516def deletemany(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] myquery = &#123;"name":&#123;"$regex":"^Q"&#125;&#125; x = coll.delete_many(myquery) print(x.deleted_count, "Âà†Èô§Êï∞Èáè") for i in coll.find(): print(i)"""2 Âà†Èô§Êï∞Èáè&#123;'_id': 1, 'name': 'Taobao', 'alexa': '99', 'url': 'https://www.taobao.com'&#125;&#123;'_id': 3, 'name': 'Facebook', 'alexa': '10', 'url': 'https://www.facebook.com'&#125;&#123;'_id': 5, 'name': 'Github', 'alexa': '109', 'url': 'https://www.github.com'&#125;""" Âà†Èô§ÊâÄÊúâÁöÑÊñáÊ°£ÂΩì‰º†ÂÖ•ÁöÑÂèÇÊï∞ÊòØÁ©∫ÂØπË±°ÔºåÂ∞±‰ºöÈªòËÆ§Â∞ÜÈõÜÂêà‰∏≠ÁöÑÊñáÊ°£ÂÖ®ÈÉ®Âà†Èô§{} 1234567def deleteall(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] x = coll.delete_many(&#123;&#125;) print("Âà†Èô§Êï∞ÈáèÔºö", x.deleted_count) # Âà†Èô§Êï∞ÈáèÔºö 3 Âà†Èô§ÈõÜÂêàdrop()ÊñπÊ≥ï, Âà†Èô§ÊàêÂäüËøîÂõûTrueÔºåÂê¶ÂàôËøîÂõûfalse 12345def delete_collection(): client = MongoClient(host="localhost", port=27017) db = client['runoodbd'] coll = db['sites2'] print(coll.drop()) Êü•ÁúãÊòØÂê¶Âà†Èô§ÊàêÂäüshow tables Â∞ÜÁà¨ÂèñÂçöÂÆ¢ÁöÑÊï∞ÊçÆÂ≠òÊîæÂú®MongoDBÊï∞ÊçÆÂ∫ì‰∏≠ 12345678910111213141516171819202122232425262728from pymongo import MongoClientimport requestsfrom bs4 import BeautifulSoupimport datetime# ËøûÊé•MongoDBÁöÑÂÆ¢Êà∑Á´Øclient = MongoClient('localhost',27017)# ËøûÊé•Êï∞ÊçÆÂ∫ìblog_databaseÔºåÂ¶ÇÊûúÊï∞ÊçÆÂ∫ì‰∏çÂ≠òÂú®ÔºåÂ∞±‰ºöÂàõÂª∫‰∏Ä‰∏™Êï∞ÊçÆÂ∫ìdb = client.blog_database# ÈÄâÊã©ËØ•Êï∞ÊçÆÂ∫ìÁöÑÈõÜÂêàblog,Â¶ÇÊûúÈõÜÂêà‰∏çÂ≠òÂú®Ôºå‰πü‰ºöÂàõÂª∫‰∏Ä‰∏™collection = db.bloglink = "http://www.santostang.com"r = requests.get(link)soup = BeautifulSoup(r.text, 'lxml')title_list = soup.find_all('h1', class_="post-title")for eachone in title_list: url = eachone.a['href'] content = eachone.a.text.strip() post = &#123; "url": url, "content": content, "date": datetime.datetime.utcnow() # ËøîÂõûÂΩìÂâçutcÊó•ÊúüÂíåÊó∂Èó¥ &#125; collection.insert_one(post)# Â∞ÜËé∑ÂèñÂà∞Êï∞ÊçÆÂ≠òÂÖ•postËøô‰∏™Â≠óÂÖ∏‰∏≠ÔºåÁÑ∂Âêéinsert_oneÊèíÂÖ•Âà∞ÈõÜÂêà‰∏≠ Âà§Êñ≠‰∏Ä‰∏™ÁΩëÁ´ôÊòØ‰∏çÊòØgzipÂéãÁº©ÁöÑÔºåÂ∞±ÊòØ‰∏Ä‰∏™ÊúçÂä°Á´Ø‰º†ÈÄíÁªôÊµèËßàÂô®ÁöÑÊï∞ÊçÆË¢´ÂéãÁº©‰∫ÜÔºåÁÑ∂ÂêéÁî±ÊµèËßàÂô®Ëá™Ë°åËß£Â∞ÅË£ÖÔºåËá™Ë°åÊ∏≤ÊüìÈ°µÈù¢ Áî®r.contenËß£Â∞ÅË£ÖÔºåÁÑ∂ÂêéÂ∞Üutf-8ÁºñÁ†ÅË£ÖÊç¢‰∏∫unicode]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´‰πã‰ΩøÁî®lxmlËß£ÊûêÁΩëÈ°µ]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E4%BD%BF%E7%94%A8lxml%E8%A7%A3%E6%9E%90%E7%BD%91%E9%A1%B5%2F</url>
    <content type="text"><![CDATA[ÂÆâË£Ölxmlpip install lxml ÊèêÂèñÁΩëÈ°µÊ∫ê‰ª£Á†ÅÊï∞ÊçÆÁöÑ‰∏âÁßçÊñπÊ≥ï XpathÈÄâÊã©Âô® CSSÈÄâÊã©Âô® BeautifuSoupÁöÑfindÊñπÊ≥ï https://www.w3school.com.cn/xpath/xpath_syntax.asp]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´‰πãBeautifulSoupÁöÑ‰ΩøÁî®]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8BBeautifulSoup%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[BeautifulSoupÂØπË±°Â∞±ÊòØ‰∏Ä‰∏™Ê†ëÂΩ¢ÁªìÊûÑÔºå‰ªñÁöÑÊØè‰∏Ä‰∏™ËäÇÁÇπÈÉΩÊòØ‰∏Ä‰∏™pythonÂØπË±°ÔºåËé∑ÂèñÁΩëÈ°µÂÜÖÂÆπÂ∞±ÊòØ‰∏Ä‰∏™ÊèêÂèñÂØπË±°ÁöÑËøáÁ®ã ÊèêÂèñÂØπË±°ÁöÑ‰∏âÁßçÊñπÊ≥ï ÈÅçÂéÜÊñáÊ°£Ê†ë ÊêúÁ¥¢ÊñáÊ°£Ê†ë CSSÈÄâÊã©Âô® ÂÆûÈ™åÂ≠óÁ¨¶‰∏≤123456789101112131415161718html = """&lt;html&gt; &lt;head&gt; &lt;title&gt;The Dormouse's story&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p class="story"&gt; Once upon a time there were three little sisters; and their names were &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt; &lt;span&gt;Elsie&lt;/span&gt; &lt;/a&gt;hellp &lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and &lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt; and they lived at the bottom of a well. &lt;/p&gt; &lt;p class="story"&gt;...&lt;/p&gt;""" ÈÅçÂéÜÊñáÊ°£Ê†ë ‰æãÂ¶ÇÊàë‰ª¨ÊÉ≥Ë¶ÅËé∑ÂæóÊ†áÁ≠æÁöÑÂÜÖÂÆπÔºåËé∑ÂèñÁ¨¨‰∏Ä‰∏™pÊ†áÁ≠æ‰∏ãÁöÑÂÜÖÂÆπÔºåÂåÖÊã¨Â≠óÁ¨¶‰∏≤ÔºåÂ≠êÊ†áÁ≠æÔºåÁÑ∂ÂêéÁî®ÂàóË°®ÁöÑÂΩ¢ÂºèËæìÂá∫ÔºåÊ≥®ÊÑèÔºå‰∏çËÉΩÂÜôÊàêsoup.body.pÔºåÂèØËÉΩÊòØËß£ÊûêÁΩëÈ°µÁöÑÊó∂ÂÄôÔºåËß£ÊûêÂô®Â∞±Ê≤°ÊúâËß£ÊûêËøô‰∏™bodyÊ†áÁ≠æ soup.p 12soup = BeautifulSoup(html, 'lxml')print(soup.p.contents) #ÊääÂ≠êËäÇÁÇπ‰ª•ÂàóË°®ÁöÑÊñπÂºèËæìÂá∫ Ëé∑ÂèñËØ•ËäÇÁÇπ‰∏ãÊâÄÊúâÂ≠êÂ≠êÂ≠ôÂ≠ôÁöÑËäÇÁÇπ all_child = soup.p.descendants Ëé∑ÂèñÁà∂ÁªìÁÇπÔºå p_tag = soup.p.a p_tag.parent 1234# Ëé∑ÂèñÁà∂ÁªìÁÇπp_tag = soup.p.aprint(p_tag.parent)# ËøîÂõûÁöÑÊòØÁà∂ÁªìÁÇπÁöÑÊâÄÊúâÂÜÖÂÆπ ÊêúÁ¥¢ÊñáÊ°£Ê†ëÂ∏∏Áî®ÊñπÊ≥ïÔºö find() find_all() ÈÄöÂ∏∏ÈÖçÂêàreÊ≠£Âàô‰ΩøÁî®soup.findall(re.comlile(&quot;^h&quot;)) CSSÈÄâÊã©Âô®https://www.w3school.com.cn/cssref/css_selectors.asp 12# ÊâæÂá∫ÊâÄÊúâÈìæÊé•‰ª•http://www.baidu.comÂºÄÂßãÁöÑaÊ†áÁ≠æsoup.select('a[href^="http://www.baidu.com"]')]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∫åÁ∫ßÊñá‰ª∂Á≥ªÁªüÁöÑÂÆûÁé∞]]></title>
    <url>%2F%E4%BA%8C%E7%BA%A7%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[ÂÆûÈ™åÂÜÖÂÆπÔºö ‰∏∫LinuxÁ≥ªÁªüËÆæËÆ°‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰∫åÁ∫ßÊñá‰ª∂Á≥ªÁªü„ÄÇË¶ÅÊ±ÇÂÅöÂà∞‰ª•‰∏ãÂá†ÁÇπÔºö Ôºà1ÔºâÂèØ‰ª•ÂÆûÁé∞‰∏ãÂàóÂá†Êù°ÂëΩ‰ª§ login Áî®Êà∑ÁôªÂΩï dir ÂàóÊñá‰ª∂ÁõÆÂΩï create ÂàõÂª∫Êñá‰ª∂ delete Âà†Èô§Êñá‰ª∂ open ÊâìÂºÄÊñá‰ª∂ close ÂÖ≥Èó≠Êñá‰ª∂ read ËØªÊñá‰ª∂ write ÂÜôÊñá‰ª∂ Ôºà2ÔºâÂàóÁõÆÂΩïÊó∂Ë¶ÅÂàóÂá∫Êñá‰ª∂Âêç„ÄÅÁâ©ÁêÜÂú∞ÂùÄ„ÄÅ‰øùÊä§Á†ÅÂíåÊñá‰ª∂ÈïøÂ∫¶Ôºõ Ôºà3ÔºâÊ∫êÊñá‰ª∂ÂèØ‰ª•ËøõË°åËØªÂÜô‰øùÊä§„ÄÇ ‰∫åÁ∫ßÊñá‰ª∂Á≥ªÁªü ‰ª£Á†ÅÔºöinclude &lt;iostream&gt;#include &lt;string&gt;using namespace std;//ÂÅáËÆæ‰∏Ä‰∏™Á£ÅÁõòÁöÑÊØè‰∏™Áâ©ÁêÜÂùóÂ§ßÂ∞è‰∏∫512‰∏™Â≠óËäÇstruct MFD // 16‰∏™Áî®Êà∑&#123; string username; string password; //int pufd; //Áî®Êà∑ÁõÆÂΩïÊñá‰ª∂ÊâÄÂú®ÁöÑÁâ©ÁêÜÂùó struct USER_UFD * next; //ÊåáÂêëÁî®Êà∑ÁõÆÂΩï&#125;;struct UFD //‰∏Ä‰∏™Áî®Êà∑ÂèØ‰ª•Áî®16‰∏™Êñá‰ª∂Â§πÔºåÁÑ∂ÂêéÊØè‰∏™Êñá‰ª∂Â§π‰∏ãÂèØ‰ª•Êúâ16‰∏™Êñá‰ª∂&#123; struct file_message &#123; string filename; int protect_code; //‰øùÊä§Á†Å int length; //Êñá‰ª∂ÈïøÂ∫¶ int addr; //Â≠òÊîæËØ•Êñá‰ª∂ÁöÑÁâ©ÁêÜÂùóÁöÑÁ¨¨‰∏Ä‰∏™ÁöÑÂø´Âè∑ &#125;ufd[16]; string directname; //Áî®Êà∑ÁõÆÂΩïÂêç int cur_file_size = 0; //‰∏çËÉΩÂú®ÁªìÊûÑ‰ΩìÂÜÖÈôÑÂàùÂßãÂÄº„ÄÇÂ•ΩÂÉè‰∏çËÉΩÊàêÂäü&#125;;struct UOF //ÂÅáËÆæ‰∏Ä‰∏™Áî®Êà∑ÊúÄÂ§öÊâìÂºÄ16‰∏™Êñá‰ª∂&#123; struct uof &#123; string filename; int pointer; //Êñá‰ª∂ÁöÑËØªÂÜôÊåáÈíà,ÂÖ∂ÂÆûÂ∞±ÊòØÊñá‰ª∂ÁöÑÂ§ßÂ∞è int protect_code; //2Ë°®Á§∫ÂèØËØªÂèØÂÜô,1Ë°®Á§∫ÂèØËØª‰∏çÂèØÂÜôÔºå 0Ë°®Á§∫‰∏çÂèØËØª‰∏çÂèØÂÜô int addr; //Â≠òÊîæÊñá‰ª∂ÁöÑÁ¨¨‰∏Ä‰∏™Á£ÅÁõòÂùóÂè∑ &#125;uof[16]; int cur_openfilesize = 0;&#125;;struct fat //Êñá‰ª∂ÂàÜÈÖçË°® Áî®‰∏ÄÂùóÁâ©ÁêÜÂùóÂ≠òÊîæÔºåÈÇ£‰πàÊúÄÂ§öÂèØ‰ª•ËÆ∞ÂΩï64ÂùóÊï∞ÊçÆÂùóÁöÑ‰ø°ÊÅØ„ÄÇ&#123; int next = -1; //‰∏ã‰∏Ä‰∏™Á£ÅÁõòÂùóÂè∑ int used = 0; //1Ë°®Á§∫Ë¢´‰ΩøÁî®Ôºå// int self; //Ëá™Â∑±ÁöÑÂø´Âè∑&#125;fat[64];struct USER_UFD &#123; struct UFD direct[16]; //ÊØè‰∏™Áî®Êà∑ÊúÄÂ§öÊúâ16‰∏™ÁõÆÂΩï int cur_user_direct_size = 0; //ÂΩìÂâçÁî®Êà∑ÁöÑÁõÆÂΩïÊï∞&#125;;struct USER_UFD cur_user_all_direct_array[16]; //16‰∏™Áî®Êà∑ÁöÑÊâÄÊúâÁõÆÂΩïÁöÑÂØπË±°int max_usersize = 16;int max_userfilesize = 16;int max_openfilesize = 16;struct MFD cur_user; //ÂΩìÂâçÁî®Êà∑//struct UFD cur_user_dirtect[16]; //Áî®Êà∑ÁõÆÂΩïstruct UOF * cur_opentable; //ÂΩìÂâçÊñá‰ª∂ÊâìÂºÄË°®char *fdisk; //ËôöÊãüÁ£ÅÁõòÁöÑËµ∑Âßã‰ΩçÁΩÆstruct UOF openfile[16]; //ÊØè‰∏Ä‰∏™Áî®Êà∑ÂØπÂ∫î‰∏Ä‰∏™Êñá‰ª∂ÊâìÂºÄË°®ÂØπË±°ÔºåÂè™ËÉΩËÆæÁΩÆ‰∏∫ÂÖ®Â±ÄÂèòÈáèMFD mfd[16]; //16‰∏™Áî®Êà∑int cur_user_size = 0; //ËÆ∞ÂΩïÂΩìÂâçÁî®Êà∑ÁöÑ‰∫∫Êï∞string path; //ËÆ∞ÂΩïÂΩìÂâçÁî®Êà∑ÁöÑË∑ØÂæÑ//ÂáΩÊï∞Â£∞Êòéint open(string name);void register_user();void remove(string);int create(string);int open(string);int close(string);int del(string);int read(string);int write(string, char *, int);void dir();int login();void cd();void mkdir(string);void input_operation();void register_user();void remove(string name);int create(string name)&#123; //cout &lt;&lt; cur_user.next-&gt;cur_file_size &lt;&lt; endl; //system("pause"); int index; //Ê†áËØÜÂΩìÂâçÁõÆÂΩïÂú®directÊï∞ÁªÑ‰∏≠Á¨¨Âá†‰∏™ for (index = 0; index &lt; cur_user.next-&gt;cur_user_direct_size; index++) &#123; if (path == cur_user.next-&gt;direct[index].directname) &#123; break; &#125; &#125; int i; for (i = 0; i &lt; cur_user.next-&gt;direct[index].cur_file_size; i++) //ÈÅçÂéÜÂΩìÂâçÁõÆÂΩïÔºåÊü•ÁúãÊòØÂê¶ÊúâÊñá‰ª∂ÈáçÂêç &#123; if (name == cur_user.next-&gt;direct[index].ufd[i].filename) break; &#125; if (i &lt; cur_user.next-&gt;direct[index].cur_file_size) //Âà§Êñ≠Êñá‰ª∂ÂêçÊòØÂê¶ÈáçÂ§ç &#123; cout &lt;&lt; "Êñá‰ª∂ÂêçÈáçÂ§ç" &lt;&lt; endl; return -1; &#125; if (cur_user.next-&gt;direct[index].cur_file_size == 16) //Âà§Êñ≠ÂΩìÂâçÁõÆÂΩïÁöÑÊñá‰ª∂Âà∞Ëææ16‰∏™ &#123; cout &lt;&lt; "Áî®Êà∑Êñá‰ª∂Â∑≤ÁªèËææÂà∞16‰∏™" &lt;&lt; endl; return -1; &#125; int j; for (j = 0; j &lt; 64; j++) //Âà§Êñ≠ÊòØÂê¶ÊúâÁ©∫ÁöÑÁ©∫Èó≤Âùó„ÄÇ &#123; if (fat[j].used == 0) break; &#125; if (j &gt;= 64) &#123; cout &lt;&lt; "Á£ÅÁõòÊ≤°ÊúâÁ©∫Èó≤Âùó‰∫Ü" &lt;&lt; endl; return -1; &#125; cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size].filename = name; cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size].addr = j; //Êñá‰ª∂Ëµ∑ÂßãÁõòÂùóÂè∑ cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size].length = 0; cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size].protect_code = 2; //Ë°®Á§∫ÂèØËØªÂèØÂÜô cur_user.next-&gt;direct[index].cur_file_size++;//Áî®Êà∑Êñá‰ª∂Êï∞ÈáèÂä†1 fat[j].used = 1; //Ë¢´‰ΩøÁî® fat[j].next = -1; //Âè™ÊòØ‰∏™Á©∫Êñá‰ª∂,ÊâÄÊúâÊ≤°ÊúâÂêéÂ∫èÁöÑÂùó //ÂÜôÂÖ•Êñá‰ª∂ÊâìÂºÄË°®‰∏≠,Â∞±ÊòØË∞ÉÁî®openÔºàÔºâ cout &lt;&lt; "Êñá‰ª∂ÂàõÂª∫ÊàêÂäü" &lt;&lt; endl; int fd = open(name); return fd;&#125;int open(string name)&#123; int index; //Ê†áËØÜÂΩìÂâçÁõÆÂΩïÂú®directÊï∞ÁªÑ‰∏≠Á¨¨Âá†‰∏™ for (index = 0; index &lt; cur_user.next-&gt;cur_user_direct_size; index++) &#123; if (path == cur_user.next-&gt;direct[index].directname) &#123; break; &#125; &#125; int i; for (i = 0; i &lt; cur_user.next-&gt;direct[index].cur_file_size; i++) //ÂΩìÂâçÁõÆÂΩïÊúâÊ≤°ÊúâËøô‰∏™Êñá‰ª∂ÔºåÊ≤°ÊúâÂ∞±Ëá™ÁÑ∂‰∏çËÉΩÊâìÂºÄ &#123; if (name == cur_user.next-&gt;direct[index].ufd[i].filename) break; &#125; if (i &gt; cur_user.next-&gt;direct[index].cur_file_size) &#123; cout &lt;&lt; "iÁöÑÂÄº‰∏∫" &lt;&lt; i &lt;&lt; endl; cout &lt;&lt; "ËØ•Áî®Êà∑Ê≤°ÊúâËøô‰∏™Êñá‰ª∂" &lt;&lt; endl; return -1; &#125; if (cur_opentable-&gt;cur_openfilesize == max_openfilesize) //Â¶ÇÊûúÊâìÂºÄÊñá‰ª∂ÁöÑÊï∞ÈáèËææÂà∞ÊúÄÂ§ßÂÄºÔºåÈÇ£‰πàÂ∞±Êó†Ê≥ïÊâìÂºÄ &#123; cout &lt;&lt; "Êñá‰ª∂ÊâìÂºÄÊï∞ÈáèÂ∑≤ÁªèËææÂà∞ÊúÄÂ§ßÂÄº" &lt;&lt; endl; return -1; &#125; for (int j = 0; j &lt; cur_opentable-&gt;cur_openfilesize; j++) //Â¶ÇÊûúÊñá‰ª∂Â∑≤ÁªèÊâìÂºÄÔºåÂ∞±Êó†ÈúÄÊâìÂºÄ &#123; if (cur_opentable-&gt;uof[j].filename == name) &#123; cout &lt;&lt; "Êñá‰ª∂Â∑≤ÁªèÊâìÂºÄ" &lt;&lt; endl; return -1; &#125; &#125; int k; for (k = 0; k &lt; cur_user.next-&gt;direct[index].cur_file_size; k++) //ÊâæÂà∞Ë¶ÅÊâìÂºÄÁöÑÊñá‰ª∂Âú®Êñá‰ª∂Êï∞ÁªÑ‰∏≠ÁöÑÁ¨¨Âá†‰∏™ &#123; if (cur_user.next-&gt;direct[index].ufd[k].filename == name) break; &#125; cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize].filename = name; cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize].protect_code = cur_user.next-&gt;direct[index].ufd[k].protect_code; cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize].pointer = cur_user.next-&gt;direct[index].ufd[k].length; cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize].addr = cur_user.next-&gt;direct[index].ufd[k].addr; cur_opentable-&gt;cur_openfilesize++; //Êñá‰ª∂ÊâìÂºÄÊï∞ÈáèÂä†1 cout &lt;&lt; "Êñá‰ª∂ÊâìÂºÄÊàêÂäü" &lt;&lt; endl; return k; //ËøîÂõûÊñá‰ª∂Âú®Êñá‰ª∂ÊâìÂºÄË°®‰∏≠ÁöÑÁ¨¨Âá†È°π&#125;int close(string name)&#123; int fd; for (int i = 0; i &lt; cur_opentable-&gt;cur_openfilesize; i++) //ÊâæÂà∞Ë¶ÅÂÖ≥Èó≠ÁöÑÊñá‰ª∂Âú®Ë°®‰∏≠ÁöÑÁ¨¨Âá†È°π &#123; if (cur_opentable-&gt;uof[i].filename == name) &#123; fd = i; break; &#125; &#125; if (fd &gt;= cur_opentable-&gt;cur_openfilesize) &#123; cout &lt;&lt; "Ê≤°ÊúâËøô‰∏™Êñá‰ª∂ÊàñËÄÖÊñá‰ª∂Ê≤°ÊúâÊâìÂºÄ" &lt;&lt; endl; return -1; &#125; //Â∞ÜË¶ÅÂà†Èô§ÁöÑÈ°πÁõÆ‰∏éÊúÄÂêé‰∏Ä‰∏™È°πÁõÆ‰∫§Êç¢,Âõ†‰∏∫ÊòØÊï∞ÁªÑÂ≠òÊîæÔºå„ÄÇ„ÄÇ cur_opentable-&gt;uof[fd].filename = cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize - 1].filename; cur_opentable-&gt;uof[fd].pointer = cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize - 1].pointer; cur_opentable-&gt;uof[fd].protect_code = cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize - 1].protect_code; cur_opentable-&gt;uof[fd].addr = cur_opentable-&gt;uof[cur_opentable-&gt;cur_openfilesize - 1].addr; //cur_opentable-&gt;cur_openfilesize--; cur_opentable-&gt;cur_openfilesize--; cout &lt;&lt; "Êñá‰ª∂ÂÖ≥Èó≠ÊàêÂäü" &lt;&lt; endl; return 0;&#125;int del(string name) //Âà†Èô§Êñá‰ª∂ÊâìÂºÄË°®ÁöÑÊñá‰ª∂Êï∞Èáè‰∏çÁî®Âáè‰∏ÄÔºåÂõ†‰∏∫Êñá‰ª∂ÊâìÂºÄÂ∞±‰∏çËÉΩÂà†Èô§Êñá‰ª∂&#123; int index; //Ê†áËØÜÂΩìÂâçÁõÆÂΩïÂú®directÊï∞ÁªÑ‰∏≠Á¨¨Âá†‰∏™ for (index = 0; index &lt; cur_user.next-&gt;cur_user_direct_size; index++) &#123; if (path == cur_user.next-&gt;direct[index].directname) &#123; break; &#125; &#125; int i; for (i = 0; i &lt; cur_user.next-&gt;direct[index].cur_file_size; i++) //Âà§Êñ≠ÂΩìÂâçÁõÆÂΩï‰∏ãÊúâÊ≤°ÊúâËøô‰∏™Êñá‰ª∂ &#123; if (cur_user.next-&gt;direct[index].ufd[i].filename == name) break; &#125; if (i &gt;= cur_user.next-&gt;direct[index].cur_file_size) &#123; cout &lt;&lt; "Ê≤°ÊúâËøô‰∏™Êñá‰ª∂" &lt;&lt; endl; return -1; &#125; int j; for (j = 0; j &lt; cur_opentable-&gt;cur_openfilesize; j++) //Âà§Êñ≠ËØ•Êñá‰ª∂ÊòØÂê¶Ë¢´ÊâìÂºÄ &#123; if (cur_opentable-&gt;uof[j].filename == name) break; &#125; if (j &lt; cur_opentable-&gt;cur_openfilesize) //ËØ¥ÊòéÊñá‰ª∂Ë¢´ÊâìÂºÄ‰∫Ü &#123; cout &lt;&lt; "Ëøô‰∏™Êñá‰ª∂Ë¢´ÊâìÂºÄ‰∫ÜÔºåËØ∑ÂÖàÂÖ≥Èó≠" &lt;&lt; endl; return -1; &#125; //Êõ¥Êñ∞ÂΩìÂâçÁî®Êà∑ÁõÆÂΩï‰∏ãÊñá‰ª∂Êï∞ÁªÑ‰ø°ÊÅØ,Â∞±ÊòØÂ∞ÜÊúÄÂêé‰∏Ä‰∏™Êñá‰ª∂ÁöÑ‰ø°ÊÅØÊõøÊç¢Âà∞Ë¶ÅÂà†Èô§ÁöÑÊñá‰ª∂ÁöÑ‰ΩçÁΩÆ fat[cur_user.next-&gt;direct[index].ufd[i].addr].used = 0; //Ê≤°Êúâ‰ΩøÁî® cur_user.next-&gt;direct[index].ufd[i].filename = cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size - 1].filename; cur_user.next-&gt;direct[index].ufd[i].addr = cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size - 1].addr; cur_user.next-&gt;direct[index].ufd[i].length = cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size - 1].length; cur_user.next-&gt;direct[index].ufd[i].protect_code = cur_user.next-&gt;direct[index].ufd[cur_user.next-&gt;direct[index].cur_file_size - 1].protect_code; cur_user.next-&gt;direct[index].cur_file_size--; //Áî®Êà∑Êñá‰ª∂Êï∞ÈáèÂáè1 //ÂõûÊî∂Á£ÅÁõò int temp = fat[cur_user.next-&gt;direct[index].ufd[i].addr].next; while (temp != -1) &#123; fat[temp].used = 0; temp = fat[temp].next; &#125; cout &lt;&lt; "Âà†Èô§Êñá‰ª∂ÊàêÂäü" &lt;&lt; endl; return 0;&#125;int read(string name)&#123; int index1; //Ê†áËØÜÂΩìÂâçÁõÆÂΩïÂú®directÊï∞ÁªÑ‰∏≠Á¨¨Âá†‰∏™ for (index1 = 0; index1 &lt; cur_user.next-&gt;cur_user_direct_size; index1++) &#123; if (path == cur_user.next-&gt;direct[index1].directname) &#123; break; &#125; &#125; int a; for (a = 0; a &lt; cur_user.next-&gt;direct[index1].cur_file_size; a++) //Âà§Êñ≠Êñá‰ª∂ÊòØÂê¶Â≠òÂú® &#123; if (cur_user.next-&gt;direct[index1].ufd[a].filename == name) break; &#125; if (a &gt;= cur_user.next-&gt;direct[index1].cur_file_size) &#123; cout &lt;&lt; "Ê≤°ÊúâËøô‰∏™Êñá‰ª∂" &lt;&lt; endl; return -1; &#125; int i; //Âà§ËØªÊñá‰ª∂ÊòØÂê¶ÊâìÂºÄ for (i = 0; i &lt; cur_opentable-&gt;cur_openfilesize; i++) &#123; if (cur_opentable-&gt;uof[i].filename == name) break; &#125; if (i &gt;= cur_opentable-&gt;cur_openfilesize) &#123; cout &lt;&lt; "Êñá‰ª∂Ê≤°ÊúâÊâìÂºÄÔºå Êó†Ê≥ïËØªÂèñ" &lt;&lt; endl; return -1; &#125; int fd = i; //Ëé∑ÂèñÊñá‰ª∂ÊèèËø∞Â≠ó //Âà§Êñ≠ËØªÊñá‰ª∂ÁöÑÂêàÊ≥ïÊÄß if (cur_opentable-&gt;uof[fd].protect_code == 0) //Êàë‰ª¨ÂàõÂª∫ÁöÑÊñá‰ª∂ÈÉΩÊòØÈªòËÆ§ÂèØËØªÂèØÂÜôÁöÑ„ÄÇ„ÄÇ„ÄÇ &#123; cout &lt;&lt; "Êñá‰ª∂‰∏çÂèØËØª" &lt;&lt; endl; return -1; &#125; else &#123; int len = cur_opentable-&gt;uof[fd].pointer; //Êñá‰ª∂ÁöÑÈïøÂ∫¶ int block_size = len / 512; //Á£ÅÁõòÁöÑ‰∏™Êï∞ int offset = len % 512; //ÂÅèÁßªÈáè if (offset != 0) block_size++; //Â¶ÇÊûúÊàëÁî®‰∏Ä‰∏™Êñá‰ª∂Ë°®Á§∫Á£ÅÁõòÁöÑÂºïÂØºÂùóÔºåÁî®Âè¶‰∏Ä‰∏™Êñá‰ª∂Ë°®Á§∫Á£ÅÁõòÁöÑÊï∞ÊçÆÂùóÔºåÈÇ£‰πàÊàë‰ª¨ËÆ°ÁÆóÊñá‰ª∂ÁöÑËµ∑Âßã‰ΩçÁΩÆÂ∞±‰∏çÁî®Âä†‰∏äÁ£ÅÁõòÁöÑÂºïÂØºÂùó‰∫ÜÂêß„ÄÇ„ÄÇ //ÂÖ≥‰∫éÊñá‰ª∂ÁöÑÂ≠òÊîæÊñá‰ª∂ÔºåÊàë‰ª¨char *fdiskË°®Á§∫‰∏ÄÊï¥‰∏™Á£ÅÁõòÔºåÁÑ∂Âêé‰∏çÂêåÊñá‰ª∂ÁöÑÂÜÖÂÆπÂ≠òÊîæÂú®Ëøô‰∏™ÊåáÈíàÊâÄÊåáÂêëÁöÑ‰∏çÂêåÂ≠óÁ¨¶ÊÆµ char * first = fdisk + cur_opentable-&gt;uof[fd].addr * 512; //Êñá‰ª∂ÁöÑËµ∑ÂßãÂú∞ÂùÄ char * buf = (char *)malloc(512 * sizeof(char)); //ÁºìÂÜ≤Âå∫ cout &lt;&lt; "Êñá‰ª∂ÁöÑÂÜÖÂÆπ‰∏∫ :"; for (int k = 0; k &lt; block_size; k++) &#123; if (k == block_size - 1) //ÂàôÊòØÊúÄÂêé‰∏Ä‰∏™Á£ÅÁõòÂùó &#123; for (int j = 0; j &lt; len - k * 512; j++) //ËµãÂÄºÊñá‰ª∂Ââ©‰ΩôÁöÑÂ≠óÁ¨¶ÔºåÂÖ∂ÂÆûÂ∞±ÊòØÂÅèÁßªÈáè &#123; buf[j + k * 512] = first[j]; &#125; for (int u = 0; u &lt; len - k * 512; u++) &#123; cout &lt;&lt; buf[u + k * 512]; //ËæìÂá∫Ââ©‰ΩôÈïøÂ∫¶Ôºå‰πãÊâÄ‰ª•ËøôÊ†∑ËæìÂá∫Ôºåprintf()ÔºåÂ∞ÜÊï¥‰∏™bufÁöÑÂÜÖÂÆπÂÖ®ÈÉ®ËæìÂá∫ÔºåÂ¶ÇÊûúÊ≤°ÊúâËØªÊª°Â∞±Âá∫Áé∞‰π±Á†ÅÂï¶„ÄÇ„ÄÇ &#125; &#125; else //‰∏çÂú®ÊúÄÂêé‰∏Ä‰∏™Á£ÅÁõòÂùóÔºå‰πüÂ∞±ÊòØÂú®ÂÖ∂‰ªñÂ∑≤ÁªèËØªÊª°ÁöÑÁ£ÅÁõòÂùó &#123; for (int j = 0; j &lt; len - i * 512; j++) buf[j + k * 512] = first[j]; //ÁºìÂÜ≤Âå∫ËØªÊª°Â∞±ËæìÂá∫ÂÜÖÂÆπ printf("%s\n", buf); //ËæìÂá∫Êñá‰ª∂ÁöÑÂÜÖÂÆπ int next_block = fat[cur_opentable-&gt;uof[fd].addr].next; //ËØªÂÆå‰∏Ä‰∏™Á£ÅÁõòÂùóÂêéÔºåÂú®Êé•ÁùÄËØª‰∏ã‰∏Ä‰∏™Á£ÅÁõòÂùó first = fdisk + next_block * 512; &#125; &#125; cout &lt;&lt; endl; cout &lt;&lt; "Êñá‰ª∂ËØªÂèñÊàêÂäü" &lt;&lt; endl; free(buf); //ÈáäÊîæÁºìÂÜ≤Âå∫ return 0; &#125;&#125;//Á±ª‰ºº‰∫éÊñá‰ª∂Êã∑Ë¥ùÂÆûÈ™åÔºåÊØèÊ¨°ËµãÂÄºÁºìÂÜ≤Âå∫Âà∞ËôöÊãüÁ£ÅÁõò‰∏≠, //ÂæÖÂÆåÊàêÈóÆÈ¢òÔºöÊõ¥Êñ∞Ë°®ÁöÑÊñá‰ª∂ÈïøÂ∫¶int write(string name, char * buf, int len)&#123; int index1; //Ê†áËØÜÂΩìÂâçÁõÆÂΩïÂú®directÊï∞ÁªÑ‰∏≠Á¨¨Âá†‰∏™ for (index1 = 0; index1 &lt; cur_user.next-&gt;cur_user_direct_size; index1++) &#123; if (path == cur_user.next-&gt;direct[index1].directname) &#123; break; &#125; &#125; int i; //Âà§ËØªÊñá‰ª∂ÊòØÂê¶ÊâìÂºÄ for (i = 0; i &lt; cur_opentable-&gt;cur_openfilesize; i++) &#123; if (cur_opentable-&gt;uof[i].filename == name) break; &#125; if (i &gt;= cur_opentable-&gt;cur_openfilesize) &#123; cout &lt;&lt; "Êñá‰ª∂Ê≤°ÊúâÊâìÂºÄÔºå Êó†Ê≥ïËØªÂèñ" &lt;&lt; endl; return -1; &#125; int fd = i; //Ëé∑ÂèñÊñá‰ª∂ÊèèËø∞Â≠ó //Âà§Êñ≠ËØªÊñá‰ª∂ÁöÑÂêàÊ≥ïÊÄß if (cur_opentable-&gt;uof[fd].protect_code != 2) &#123; cout &lt;&lt; "Êñá‰ª∂‰∏çÂèØÂÜô" &lt;&lt; endl; return -1; &#125; else &#123; int temp; //‰øùÂ≠òÂΩìÂâçÊâÄÂÜôÁöÑÊñá‰ª∂Âú®Áî®Êà∑Êñá‰ª∂ÁõÆÂΩïË°®ÁöÑÁ¨¨Âá†È°πÔºå‰∏∫‰∫ÜÂêéÈù¢‰øÆÊîπÊñá‰ª∂ÁöÑÂ§ßÂ∞è int first_block = cur_opentable-&gt;uof[fd].addr; //Áî®Êà∑Êñá‰ª∂Â≠òÊîæÁöÑÁ¨¨‰∏Ä‰∏™Á£ÅÁõòÂùó for (int k = 0; k &lt; cur_user.next-&gt;direct[index1].cur_file_size; k++) &#123; if (cur_user.next-&gt;direct[index1].ufd[k].addr == first_block) &#123; temp = k; break; &#125; &#125; //ËøΩÂä†ÂÜô //ÊâæÂà∞ËØ•Êñá‰ª∂Â≠òÊîæÁöÑÊúÄÂêé‰∏Ä‰∏™Á£ÅÁõòÂùó while (fat[first_block].next != -1) &#123; first_block = fat[first_block].next; &#125; //ËÆ°ÁÆóËØ•Êñá‰ª∂Â≠òÊîæÁöÑÊúÄÂêé‰∏Ä‰∏™Âú∞ÂùÄ char * first; first = fdisk + first_block * 512 + cur_opentable-&gt;uof[fd].pointer % 512; //Â¶ÇÊûúÊúÄÂêé‰∏Ä‰∏™Êñá‰ª∂Ââ©‰∏ãÁöÑÁ©∫Èó¥Â§ß‰∫éË¶ÅÂÜôÂÖ•ÁöÑÈïøÂ∫¶ if (len &lt;= 512 - cur_opentable-&gt;uof[fd].pointer % 512) &#123; //strcpy(first, buf); ËøôÂè•‰ª£Á†ÅÂá∫Áé∞ÈóÆÈ¢òÔºåÂèØËÉΩÊòØÁî±‰∫ébufÊ≤°ÊúâËØªÊª°ÔºåÂêéÈù¢ÁöÑÂÄºË¢´ËÆøÈóÆ‰∫ÜÔºåÈùûÊ≥ïÔºÅ for (int i = 0; i &lt; len; i++) &#123; first[i] = buf[i];//Â∞ÜÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÂÜôÂÖ•ËôöÊãüÁ£ÅÁõò‰∏≠ &#125; cur_opentable-&gt;uof[fd].pointer = cur_opentable-&gt;uof[fd].pointer + len; //Êõ¥Êñ∞Êñá‰ª∂ÊâìÂºÄË°® cur_user.next-&gt;direct[index1].ufd[temp].length = cur_user.next-&gt;direct[index1].ufd[temp].length + len; //Êõ¥Êñ∞Áî®Êà∑ÁõÆÂΩïÊñá‰ª∂Ë°® &#125; else //Â¶ÇÊûúÂâ©‰∏ãÁöÑÁ©∫Èó¥‰∏çË∂≥ÂÜôÂÖ• &#123; for (i = 0; i &lt; 512 - cur_opentable-&gt;uof[fd].pointer % 512; i++) &#123; //ÂÜôÂÖ•‰∏ÄÈÉ®ÂàÜÁöÑÂÜÖÂÆπÂà∞ÊúÄÂêé‰∏Ä‰∏™Á£ÅÁõòÂùóÁöÑÂâ©‰ΩôÁ©∫Èó¥ first[i] = buf[i]; &#125; //ËÆ°ÁÆóÂàÜÈÖçÂÆåÊúÄÂêé‰∏Ä‰∏™Á£ÅÁõòÁöÑÂâ©‰ΩôÁ©∫Èó¥ÂêéÔºåËøòÂâ©‰∏ãÂ§öÂ∞ëÂ≠óËäÇÊ≤°ÊúâÂ≠òÂÇ® int last_size = len - (512 - cur_opentable-&gt;uof[fd].pointer % 512); int need_block_size = last_size / 512; int need_offset_size = last_size % 512; if (need_offset_size &gt; 0) need_block_size++; //ÊÄªÂÖ±ÈúÄË¶ÅËøô‰πàÁ£ÅÁõòÂùó int unused_block_size = 0; //ËÆ∞ÂΩïÊ≤°Êúâ‰ΩøÁî®ËøáÁöÑÁ£ÅÁõòÂùóÁöÑ‰∏™Êï∞ //int first_unused_block; //ËÆ∞ÂΩïÁ¨¨‰∏Ä‰∏™Ê≤°ÊúâË¢´‰ΩøÁî®ËøáÁöÑÁ£ÅÁõò int flag = 0; for (int i = 0; i &lt; 64; i++) &#123; if (fat[i].used == 0) &#123; unused_block_size++; &#125; &#125; if (unused_block_size &lt; need_block_size) &#123; cout &lt;&lt; "Á£ÅÁõòÊ≤°ÊúâÁ©∫Èó¥Â≠òÊîæ‰∫Ü-=-=" &lt;&lt; endl; return -1; &#125; else &#123; int item = cur_opentable-&gt;uof[fd].addr; for (int p = 0; p &lt; need_block_size; p++) //ÊâßË°åÂ§öÊ¨°ÂØªÊâæÁ©∫Èó≤Á£ÅÁõòÁöÑÊìç‰ΩúÔºå &#123; for (int i = 0; i &lt; 64; i++) &#123; if (fat[i].used == 0) //Ê≤°ÊúâË¢´‰ΩøÁî® &#123; first = fdisk + i * 512; //ÂΩìÂâçË¶ÅÂÜôÂÖ•ÁöÑÁ£ÅÁõòÂùóÁöÑËµ∑ÂßãÂú∞ÂùÄ fat[i].used = 1; //Ê†áËÆ∞Ë¢´‰ΩøÁî® fat[item].next = i; //Ê†áËÆ∞‰∏ã‰∏Ä‰∏™Á£ÅÁõò item = i; break; &#125; &#125; if (p == need_block_size - 1) &#123; for (int k = 0; k &lt; need_offset_size; k++) //Â∞ÜÊñá‰ª∂ÁöÑÂÅèÁßªÈáèÂÜôÂÖ•ÊúÄÂêé‰∏Ä‰∏™Êñá‰ª∂‰∏≠ first[k] = buf[k]; //Êõ¥Êñ∞ÊúÄÂêé‰∏Ä‰∏™Á£ÅÁõòÂùóÁöÑnextÂÄº fat[i].next = -1; &#125; else //Â¶ÇÊûú‰∏çÊòØÊúÄÂêé‰∏Ä‰∏™Á©∫Èó≤Âùó &#123; //ÂæÖËß£ÂÜ≥ÈóÆÈ¢òÔºåÂ∞±ÊòØÂ¶ÇÊûúÊõ¥Êñ∞fatÁöÑnextÂÄº for (int k = 0; k &lt; 512; k++) first[k] = buf[k]; &#125; &#125; cur_opentable-&gt;uof[fd].pointer = cur_opentable-&gt;uof[fd].pointer + last_size; //Êõ¥Êñ∞Êñá‰ª∂ÊâìÂºÄË°® cur_user.next-&gt;direct[index1].ufd[temp].length = cur_user.next-&gt;direct[index1].ufd[temp].length + last_size; //Êõ¥Êñ∞Áî®Êà∑ÁõÆÂΩïÊñá‰ª∂Ë°® &#125; &#125; cout &lt;&lt; "Êñá‰ª∂ÂÜôÂÖ•ÊàêÂäü" &lt;&lt; endl; return 0; &#125;&#125;void dir()&#123; int index1; //Ê†áËØÜÂΩìÂâçÁõÆÂΩïÂú®directÊï∞ÁªÑ‰∏≠Á¨¨Âá†‰∏™ for (index1 = 0; index1 &lt; cur_user.next-&gt;cur_user_direct_size; index1++) &#123; if (path == cur_user.next-&gt;direct[index1].directname) &#123; break; &#125; &#125; if (path == "") //Ë°®Á§∫Ê≠§Êó∂Ë∑ØÂæÑÂú®Áî®Êà∑ÁöÑÁõÆÂΩïË°®ÔºåÊòæÁ§∫Êñá‰ª∂ÁõÆÂΩï &#123; cout &lt;&lt; "\t" &lt;&lt; "ÁõÆÂΩïÂêç" &lt;&lt; endl; for (int i = 0; i &lt; cur_user.next-&gt;cur_user_direct_size; i++) &#123; cout &lt;&lt; "\t" &lt;&lt; cur_user.next-&gt;direct[i].directname &lt;&lt; endl; &#125; &#125; else //ÊòæÁ§∫ÁõÆÂΩï‰∏ãÁöÑÊñá‰ª∂ &#123; cout &lt;&lt; "\t" &lt;&lt; "Êñá‰ª∂Âêç" &lt;&lt; "\t" &lt;&lt; "Êñá‰ª∂‰øùÊä§Á†Å" &lt;&lt; "\t" &lt;&lt; "Êñá‰ª∂ÈïøÂ∫¶" &lt;&lt; "\t" &lt;&lt;"Êñá‰ª∂Ëµ∑ÂßãÁõòÂùóÂè∑" &lt;&lt; endl; for (int i = 0; i &lt; cur_user.next-&gt;direct[index1].cur_file_size; i++) //ËæìÂá∫Êñá‰ª∂ÁöÑ‰ø°ÊÅØ &#123; cout &lt;&lt; "\t" &lt;&lt; cur_user.next-&gt;direct[index1].ufd[i].filename &lt;&lt; "\t" &lt;&lt; cur_user.next-&gt;direct[index1].ufd[i].protect_code &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; cur_user.next-&gt;direct[index1].ufd[i].length &lt;&lt;"\t" &lt;&lt; "\t" &lt;&lt; cur_user.next-&gt;direct[index1].ufd[i].addr &lt;&lt; endl; &#125; &#125;&#125;int login()&#123; string name; string password; //UFD user; cout &lt;&lt; "ËØ∑ËæìÂÖ•‰Ω†ÁöÑÂßìÂêç" &lt;&lt; endl; cin &gt;&gt; name; cout &lt;&lt; "ËØ∑ËæìÂÖ•‰Ω†ÁöÑÂØÜÁ†Å" &lt;&lt; endl; cin &gt;&gt; password; int i; for ( i = 0; i &lt; cur_user_size; i++) &#123; if (mfd[i].username == name &amp;&amp; mfd[i].password == password) &#123; break; &#125; &#125; if (i &gt;= cur_user_size) &#123; cout &lt;&lt; "Ê≤°ÊúâËøô‰∏™Áî®Êà∑ÊàñËÄÖÁî®Êà∑ÂêçÂØÜÁ†ÅÈîôËØØ" &lt;&lt; endl; return -1; &#125; mfd[i].next = &amp; (cur_user_all_direct_array[i]); //Áî®Êà∑ÊåáÂêëËá™Â∑±ÁöÑÊâÄÊúâÁõÆÂΩïÁöÑÁªìÊûÑ //ÂàùÂßãÂåñÂΩìÂâçÁî®Êà∑ÁöÑ‰ø°ÊÅØ cur_user = mfd[i]; cur_user.next-&gt;cur_user_direct_size = mfd[i].next-&gt;cur_user_direct_size; // cur_user_size++; //Áî®Êà∑‰∫∫Êï∞++ cur_opentable = &amp;openfile[cur_user_size]; //ÊåáÈíàÊåáÂêëÊñá‰ª∂ÊâìÂºÄË°®ÂØπË±° cur_opentable-&gt;cur_openfilesize = 0; //ËÆæÂàùÂßãÂÄº path = ""; //ÊåáÂÆöÂΩìÂâçË∑ØÂæÑ‰∏∫Áî®Êà∑ÁöÑÂÖ®ÈÉ®ÁõÆÂΩïÂ§Ñ return 1;&#125;void cd()&#123; string temp_path; cin &gt;&gt; temp_path; if (temp_path == "..") &#123; path = ""; return; &#125; int i; for (i = 0; i &lt; cur_user.next-&gt;cur_user_direct_size; i++) //Âà§Êñ≠pathÊòØÂê¶Â≠òÂú® &#123; if (temp_path == cur_user.next-&gt;direct[i].directname) break; &#125; if (i &gt;= cur_user.next-&gt;cur_user_direct_size) &#123; cout &lt;&lt; "Ê≤°ÊúâËøô‰∏™ÁõÆÂΩï" &lt;&lt; endl; return; &#125; path = temp_path; return; &#125;void mkdir(string name)&#123; if (cur_user.next-&gt;cur_user_direct_size == 16) &#123; cout &lt;&lt; "Áî®Êà∑ÁõÆÂΩïÂ∑≤ÁªèËææÂà∞ÊúÄÂ§ßÂÄºÔºå‰∏çËÉΩÂú®ÂàõÂª∫ÁõÆÂΩï‰∫Ü" &lt;&lt; endl; return; &#125; int i; for (i = 0; i &lt; cur_user.next-&gt;cur_user_direct_size; i++) //Âà§Êñ≠ÂàõÂª∫ÁöÑÁõÆÂΩïÊòØÂê¶Â≠òÂú® &#123; if (cur_user.next-&gt;direct[i].directname == name) break; &#125; if (i &lt; cur_user.next-&gt;cur_user_direct_size) &#123; cout &lt;&lt; "ËØ•ÁõÆÂΩïÂ∑≤ÁªèÂ≠òÂú®‰∫Ü" &lt;&lt; endl; return; &#125; cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size].directname = name; cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size].cur_file_size = 0; //Êñ∞ÂàõÂª∫ÁöÑÁõÆÂΩïÈáåÈù¢ÁöÑÊñá‰ª∂‰∏™Êï∞‰∏∫0 cur_user.next-&gt;cur_user_direct_size++; //Áî®Êà∑ÁöÑÁõÆÂΩïÊï∞Âä†1 cout &lt;&lt; "ÂàõÂª∫ÁõÆÂΩïÊàêÂäü" &lt;&lt; endl; return; &#125;void input_operation() //Áî®Êà∑ËæìÂÖ•ÂëΩ‰ª§&#123; if (cur_user.username == "") cout &lt;&lt; "localhost :"; else cout &lt;&lt; cur_user.username &lt;&lt; "@localhost home/" &lt;&lt;path &lt;&lt; "Ôºö"; string operation; cin &gt;&gt; operation; if (operation == "login") &#123; login(); &#125; else if (operation == "dir") dir(); else if (operation == "create") &#123; string filename; cin &gt;&gt; filename; create(filename); &#125; else if (operation == "del") &#123; string filename; cin &gt;&gt; filename; del(filename); &#125; else if (operation == "open") &#123; string name; cin &gt;&gt; name; open(name); &#125; else if (operation == "close") &#123; string name; cin &gt;&gt; name; close(name); &#125; else if (operation == "read") &#123; string name; cin &gt;&gt; name; read(name); &#125; else if (operation == "write") &#123; string content; string name; cout &lt;&lt; "ËØ∑ËæìÂÖ•Ë¶ÅÂÜôÂÖ•ÁöÑÊñá‰ª∂Ôºö"; cin &gt;&gt; name; cin.ignore(); //Ê∏ÖÁ©∫ÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÔºå‰∏çÁÑ∂getlineËØªÂà∞‰∏ä‰∏Ä‰∏™ÂõûËΩ¶Áõ¥Êé•ÁªìÊùü„ÄÇ„ÄÇ„ÄÇ cout &lt;&lt; "ËØ∑ËæìÂÖ•Êñá‰ª∂Ë¶ÅÂÜôÂÖ•ÁöÑÂÜÖÂÆπ: " &lt;&lt; endl;; getline(cin, content); //ËØªÂÖ•‰∏ÄÊï¥Ë°åÂÜÖÂÆπ //cout &lt;&lt; content &lt;&lt; endl; //system("pause"); //cin &gt;&gt; content; char buf[512]; int times = content.length() / 512; int offset = content.length() % 512; if (offset != 0) times++; for (int i = 0; i &lt; times; i++) &#123; if (i == times - 1) //Ê≥®ÊÑèËøôÈáå‰∏çËÉΩÂÜôÊàêtimes-- o.o!!! &#123; for (int j = 0; j &lt; offset; j++) buf[j] = content[j]; &#125; else &#123; for (int j = 0; j &lt; 512; j++) buf[j] = content[j]; &#125; write(name, buf, content.length()); &#125; &#125; else if (operation == "exit") &#123; exit(0); &#125; else if (operation == "cd") &#123; cd(); &#125; else if (operation == "mkdir") &#123; string name; cin &gt;&gt; name; mkdir(name); &#125; else if (operation == "register") &#123; register_user(); &#125; else if (operation == "remove") &#123; string name; cin &gt;&gt; name; remove(name); &#125; else &#123; cout &lt;&lt; "‰Ω†ÁöÑÂëΩ‰ª§ÈîôËØØÔºåÈáçÊñ∞ËæìÂÖ•" &lt;&lt; endl; &#125;&#125;void register_user() //Ê≥®ÂÜåÁî®Êà∑&#123; cout &lt;&lt; "ËØ∑ËæìÂÖ•Áî®Êà∑ÂêçÔºö"; string username; cin &gt;&gt; username; cout &lt;&lt; "ËØ∑ËæìÂÖ•ÂØÜÁ†ÅÔºö"; string password; cin &gt;&gt; password; int i; for (i = 0; i &lt; 16; i++) &#123; if (mfd[i].username == username) &#123; break; &#125; &#125; if (i &lt; 16) &#123; cout &lt;&lt; "ËØ•Áî®Êà∑Â∑≤ÁªèÂ≠òÂú®" &lt;&lt; endl; return; &#125; mfd[cur_user_size].username = username; mfd[cur_user_size].password = password; cur_user_size++; //Áî®Êà∑‰∫∫Êï∞Âä†1 cout &lt;&lt; "Áî®Êà∑Ê≥®ÂÜåÊàêÂäüÔºÅ" &lt;&lt; endl;&#125;void remove(string name) //Âà†Èô§ÁõÆÂΩï&#123; int index; for (int i = 0; i &lt; cur_user.next-&gt;cur_user_direct_size; i++) &#123; if (name == cur_user.next-&gt;direct[i].directname) &#123; index = i; break; &#125; &#125; for (int i = 0; i &lt; cur_user.next-&gt;direct[index].cur_file_size; i++) //Âà†Èô§ÁõÆÂΩïÈáåÈù¢ÁöÑÊñá‰ª∂ &#123;//Áõ¥Êé•ÈáäËøô‰∫õÊñá‰ª∂ÊâÄÂç†ÁöÑÁ£ÅÁõòÂùó fat[cur_user.next-&gt;direct[index].ufd[i].addr].used = 0; //Ê≤°Êúâ‰ΩøÁî® int temp = fat[cur_user.next-&gt;direct[index].ufd[i].addr].next; while (temp != -1) &#123; fat[temp].used = 0; temp = fat[temp].next; &#125; &#125; //Âà†Èô§ÁõÆÂΩïÈ°πÔºåÂ∞±ÊòØÂ∞Ü‰∏§‰∏™ÁõÆÂΩïÈ°πÁöÑÂÜÖÂÆπËøõË°å‰∫§Êç¢ cur_user.next-&gt;direct[index].cur_file_size = cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].cur_file_size; //Ê≥®ÊÑèËøôÈáåÈúÄË¶ÅÂáè‰∏ÄÔºåÁî±‰∫éÊú¨Ë∫´ÁªìÊûÑÁöÑÈôêÂà∂ cur_user.next-&gt;direct[index].directname = cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].directname; for (int i = 0; i &lt; cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].cur_file_size; i++) //Ê≥®ÊÑèËøôÈáåÁöÑÂáè‰∏Ä &#123; cur_user.next-&gt;direct[index].ufd[i].addr = cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].ufd[i].addr; cur_user.next-&gt;direct[index].ufd[i].filename = cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].ufd[i].filename; cur_user.next-&gt;direct[index].ufd[i].length = cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].ufd[i].length; cur_user.next-&gt;direct[index].ufd[i].protect_code = cur_user.next-&gt;direct[cur_user.next-&gt;cur_user_direct_size-1].ufd[i].protect_code; &#125; cur_user.next-&gt;cur_user_direct_size--; //ÁõÆÂΩïÊï∞ÈáèÂáè1 cout &lt;&lt; "Âà†Èô§ÁõÆÂΩïÊàêÂäü" &lt;&lt; endl; return;&#125;int main()&#123; cur_user.username = ""; //ÂàùÂßãÂåñÂΩìÂâçÁî®Êà∑ÁöÑÁî®Êà∑Âêç‰∏∫Á©∫ path = ""; //Áî®ÂÜÖÂ≠òÊ®°ÊãüÂ§ñÂ≠òÔºåÁî≥ËØ∑ÂÜÖÂ≠òÁ©∫Èó¥ fdisk = (char *)malloc(1024 * 1024 * sizeof(char)); //ÂàùÂßãÊç¢fdisk cout &lt;&lt; "***************Ê¨¢ËøéÊù•Âà∞‰∫åÁ∫ßÊñá‰ª∂Á≥ªÁªü******************" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂëΩ‰ª§" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂäüËÉΩ" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "register" &lt;&lt; "\t" &lt;&lt; "Ê≥®ÂÜå" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "login" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÁôªÂΩï" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "create" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂàõÂª∫Êñá‰ª∂" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "mkdir" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂàõÂª∫ÁõÆÂΩï" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "cd" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂàáÊç¢ÁõÆÂΩï" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "open" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÊâìÂºÄÊñá‰ª∂" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "close" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂÖ≥Èó≠Êñá‰ª∂" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "read" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ËØªÊñá‰ª∂" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "write" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÂÜôÊñá‰ª∂" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "del" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "Âà†Èô§Êñá‰ª∂" &lt;&lt; endl; cout &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "exit" &lt;&lt; "\t" &lt;&lt; "\t" &lt;&lt; "ÈÄÄÂá∫Á≥ªÁªü" &lt;&lt; endl; cout &lt;&lt; "*****************************************************" &lt;&lt; endl; while (true) input_operation();&#125;//Êúâ‰∏™ÈóÆÈ¢òÔºåÂæ™ÁéØÁöÑÁïåÂÄºË¶ÅÊõ¥Êñ∞„ÄÇ--„Äã„ÄãËß£ÂÜ≥//Âá∫Áé∞ÈóÆÈ¢òÔºöÊåáÂêë‰∏Ä‰∫õÁ©∫ÊåáÈíàÁöÑÈóÆÈ¢ò--&gt;Ëß£ÂÜ≥]]></content>
      <categories>
        <category>Êìç‰ΩúÁ≥ªÁªü</category>
        <category>Êñá‰ª∂Á≥ªÁªü</category>
      </categories>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËØªËÄÖÂÜôËÄÖÈóÆÈ¢ò]]></title>
    <url>%2F%E8%AF%BB%E8%80%85%E5%86%99%E8%80%85%E9%97%AE%E9%A2%98-%E8%AF%BB%E8%80%85%E4%BC%98%E5%85%88%2F</url>
    <content type="text"><![CDATA[ËØªËÄÖÂÜôËÄÖÈóÆÈ¢ò ËøõÁ®ã‰∫íÊñ•ËÆøÈóÆÊúâÈôêËµÑÊ∫êÁöÑÂêåÊ≠•ÈóÆÈ¢ò ÈóÆÈ¢òÔºöÂÖÅËÆ∏Â§ö‰∏™ËøõÁ®ãÂêåÊó∂ËØªÂèñÊñá‰ª∂Ôºå ‰ΩÜÊòØÂ¶ÇÊûúÊúâ‰∏Ä‰∏™ËøõÁ®ãÂú®ÂÜôÊñá‰ª∂ÔºåÈÇ£‰πàÂ∞±‰∏çÂÖÅËÆ∏ÂÖ∂‰ªñËøõÁ®ãÂÜôÊàñËÄÖÊòØËØªËøô‰∏™Êñá‰ª∂ ËØªËÄÖ‰ºòÂÖà ËØªËÄÖ‰ºòÂÖàÂ∞±ÊòØÂè™ÊúâÂΩìÊâÄÊúâÁöÑËØªËÄÖÈÉΩÂÆåÊàê‰∫ÜËØªÊñá‰ª∂ÁöÑÊìç‰ΩúÂêéÔºåÊâçËÉΩËÆ©ÂÜôËøõÁ®ãËÆøÈóÆÊñá‰ª∂ ÂÆûÁé∞ÊñπÊ≥ïÔºö readcount:ËØªËÄÖËÆ°Êï∞Âô®ÔºåÂàùÂÄº‰∏∫0 rmutexÔºöÂàùÂÄº‰∏∫1ÔºåÂõ†‰∏∫ËØªËÄÖËÆ°Êï∞Âô®‰∏∫Â§ö‰∏™ËØªËÄÖÂÖ±‰∫´ÁöÑËµÑÊ∫êÔºåÊòØ‰∏¥ÁïåËµÑÊ∫ê wmutex:ÂàùÂÄº‰∏∫1Ôºå‰∫íÊñ•‰ø°Âè∑ÈáèÔºå‰ª£Ë°®‰∏Ä‰∏™ÂÖ±‰∫´Êñá‰ª∂ ‰º™‰ª£Á†ÅÔºö1234567891011121314151617181920212223242526272829303132333435void reader(void)&#123; while(true) &#123; p(rmutex); //Êä¢Âç†ËØªËÄÖËÆ°ÁÆóÂô®Ëøô‰∏™ËµÑÊ∫ê readercount++; //ËØªËÄÖÊï∞ÈáèÂä†1 //Â¶ÇÊûúÊòØÁ¨¨‰∏Ä‰∏™ËØªËÄÖÔºåË¶ÅÊâßË°åpÊìç‰ΩúÊä¢Âç†Êñá‰ª∂Ôºå‰∏∫‰ªÄ‰πàË¶ÅÊä¢Âç†Êñá‰ª∂ÔºåÂ∞±Ë¶ÅÂÖàÊä¢Âç†ÔºåÈò≤Ê≠¢ÊúâÂÜôËÄÖËøõË°åÂÜôÔºàËØªËÄÖ‰ºòÂÖàÔºâÔºåÂ¶ÇÊûú‰∏çÊòØÁ¨¨‰∏Ä‰∏™ËØªËÄÖÔºåÂàôË°®Á§∫Â∑≤ÁªèÊúâËØªËÄÖÂú®ÂÆâÂÖ®Âú∞ËØªËøô‰∏™Êñá‰ª∂ if (readercount == 1) p(wmutex); //Êä¢Âç†ÂÖ±‰∫´Êñá‰ª∂ËµÑÊ∫ê v(rmutex); //ÈáäÊîæËØªËÄÖËÆ°ÁÆóÂô® read_file(); //ËØªÊñá‰ª∂ p(rmutex); //ËØªÂÆåÊñá‰ª∂ÂêéÔºåËØªËÄÖÊï∞ÈáèÂáèÂ∞ë1ÔºåÊâÄ‰ª•ÈúÄË¶ÅÂÜçÊ¨°Êä¢Âç†ËØªËÄÖËÆ°ÁÆóÂô®Ëøô‰∏™ËµÑÊ∫êÔºåÁÑ∂ÂêéËøõË°å‰øÆÊîπ readcount--;//ËØªËÄÖÊï∞ÈáèÂáè1 if (readcount == 0) //Â¶ÇÊûúÊòØÊúÄÂêé‰∏Ä‰∏™ËØªËÄÖÔºåÈúÄË¶ÅÈáäÊîæ‚ÄúÂÖ±‰∫´Êñá‰ª∂‚ÄùËøô‰∏™ËµÑÊ∫êÔºåËøôÊ†∑ÊâçËÉΩËÆ©ÂÜôËÄÖËøõÁ®ãËøõË°åÂÜô v(wmutex); //ÈáäÊîæÊñá‰ª∂ËµÑÊ∫ê v(rmutex);//ÈáäÊîæËØªËÄÖËÆ°Êï∞Âô® &#125;&#125;void write(void)&#123; while(true) &#123; p(wmutex); //Êä¢Âç†Êñá‰ª∂ËµÑÊ∫ê write_file(); //ÊâßË°åÂÜôÊñá‰ª∂Êìç‰Ωú v(wmutex); //ÈáäÊîæÊñá‰ª∂ËµÑÊ∫ê &#125;&#125; ÂÜôËÄÖ‰ºòÂÖà Âè™ÊúâÂΩìÊâÄÊúâÁöÑÂÜôËøõÁ®ãÂÆåÊàêÂêéÊâçËøõË°åËØªËøõÁ®ãÁöÑÊìç‰Ωú ËØªËÄÖ‰∏éÂÜôËÄÖÔºåÂÜôËÄÖ‰∏éÂÜôËÄÖ‰∏çËÉΩÂêåÊó∂ËÆøÈóÆÁºìÂÜ≤Âå∫ ÂΩìÊ≤°ÊúâÂÜôËÄÖËøõÁ®ãÁöÑÊó∂ÂÄôÔºåÂ§ö‰∏™ËØªËÄÖËøõÁ®ãÂèØ‰ª•ÂêåÊó∂ËÆøÈóÆÁºìÂÜ≤Âå∫ ÂΩìËØªËÄÖËøõÁ®ãÂíåÂÜôËÄÖËøõÁ®ãÂêåÊó∂Á≠âÂæÖÁöÑÊó∂ÂÄôÔºåÂÜôËÄÖËøõÁ®ã‰ºòÂÖà‰∫éËØªËÄÖËøõÁ®ãÔºå‰πüÂ∞±ÊòØÊâÄÊúâÁöÑËØªËÄÖËøõÁ®ãËøõË°åÊ¥ªÂä®ÈÉΩË¶ÅÂª∫Á´ãÂú®Ê≤°ÊúâÂÜôËÄÖËøõÁ®ãÁöÑÂâçÊèê‰∏ã ÂÆûÁé∞ÊñπÊ≥ïÔºö wcountÔºöË°®Á§∫ÂÜôËÄÖÊï∞ÈáèÔºåÂàùÂßãÂÄº‰∏∫0 rcountÔºöË°®Á§∫ËØªËÄÖÊï∞ÈáèÔºå ÂàùÂßãÂÄº‰∏∫0 rmutexÔºö‰∫íÊñ•‰øÆÊîπËØªËÄÖÊï∞ÈáèÔºåÂàùÂßãÂÄº‰∏∫1 wmutexÔºö‰∫íÊñ•‰øÆÊîπÂÜôËÄÖÊï∞ÈáèÔºåÂàùÂßãÂÄº‰∏∫1 fileÔºö‰∫íÊñ•ËÆøÈóÆÊñá‰ª∂ÔºåÂàùÂßãÂÄº‰∏∫1 readÔºöÈòªÂ°ûËØªËÄÖËøõÁ®ãÔºåÂÜôËÄÖ‰ºòÂÖàÔºåÂΩìËá≥Â∞ëÊúâ‰∏Ä‰∏™ÂÜôËøõÁ®ãÊìç‰ΩúÊñá‰ª∂ÁöÑÊó∂ÂÄôÔºåËØªËøõÁ®ãÂ∞±Ë¶ÅÈòªÂ°û Ê≥®ÊÑèÈóÆÈ¢òÔºöÂΩìËØªËÄÖÈòüÂàó‰∏ç‰∏∫0ÁöÑÊó∂ÂÄôÔºåÂÜôËÄÖËøõÁ®ã‰ºöÁ≠âÂæÖËøô‰∫õËØªËÄÖËøõÁ®ãÂÖ®ÈÉ®ËØªÊñá‰ª∂ÂÆåÂêéÁÑ∂ÂêéÈáäÊîæÊñá‰ª∂ËµÑÊ∫êÔºåÁÑ∂ÂêéÊâçËøõË°åÂÜôÊñá‰ª∂Êìç‰ΩúÔºåÂÅáËÆæÂΩìËØªËÄÖËøõÁ®ãÊâßË°å‰∫ÜÂæà‰πÖÔºåÁÑ∂ÂêéËØªËÄÖÈòüÂàó‰∏≠ÊúâÂ§ö‰∏™Ôºå‰πüÂ∞±ÊòØrcount &gt;=1ÔºåÁÑ∂ÂêéËøôÊó∂ÂÄôÂÜôËÄÖËøõÁ®ã1Êù•Áî≥ËØ∑ÂÜôÊñá‰ª∂ËµÑÊ∫êÔºåÈÇ£‰πà‰ªñËøô‰∏™Êó∂ÂÄôÂøÖÈ°ªÁ≠âÂæÖ‰πãÂâçÁöÑËØªËÄÖÈòüÂàóÂÜÖÁöÑÂÖ®ÈÉ®ËØªËÄÖÂÆåÊàêÊìç‰ΩúÂêéÊâçË°åÔºåËá≥‰∫éÂÜôËÄÖ‰ºòÂÖàÁöÑÊìç‰Ωú‰ΩìÁé∞Âú®ÂΩìÂÜôËÄÖËøõÁ®ãËøõË°åÁî≥ËØ∑Êñá‰ª∂ËµÑÊ∫êÂêéÔºåÊúâËØªËÄÖËøõÁ®ã1Âú®‰ªñ‰πãÂêé‰πüÁî≥ËØ∑Êñá‰ª∂ËµÑÊ∫êÔºåÈÇ£‰πàËøô‰∏™ËØªËÄÖËøõÁ®ãÂè™ËÉΩÊéíÂà∞ÂÜôËÄÖËøõÁ®ãÁöÑÂêéÈù¢ÔºåÁÑ∂Âêé‰∏çÂπ∏ÁöÑÊòØËøô‰∏™Êó∂ÂÄôÂÜçÊù•‰∏Ä‰∏™ÂÜôËÄÖËøõÁ®ã2ÔºåÈÇ£‰πàËØªËÄÖËøõÁ®ã1Âè™ËÉΩË¢´Êå§ÊéâÔºåÊéíÂú®ÂÜôËÄÖËøõÁ®ã2ÂêéÈù¢Ôºå‰πüÂ∞±ÊòØÊ≠§Êó∂ÁöÑËøõÁ®ãÈòüÂàó‰∏∫ÂÜôËÄÖËøõÁ®ã1ÔºåÂÜôËÄÖËøõÁ®ã2ÔºåËØªËÄÖËøõÁ®ã1.„ÄÇ„ÄÇ„ÄÇ ËØªËÄÖËøõÁ®ãÊòØÂèØ‰ª•ÊúâÂ§ö‰∏™ÁöÑÔºå‰πüÂ∞±ÊòØËØªËÄÖËøõÁ®ãÁî≥ËØ∑ÂÆåÂêéÔºåÂèØËÉΩ‰ªñÁöÑÈáäÊîæÊØîÂè¶‰∏Ä‰∏™ËØªËÄÖËøõÁ®ãÁöÑÁî≥ËØ∑Ë¶ÅÊÖ¢ÔºåÊâÄ‰ª•Â∞±ÂèØ‰ª•‰∫ßÁîüÂ§ö‰∏™ËØªËÄÖËøõÁ®ã ‰º™‰ª£Á†ÅÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546void reader()&#123; while(true) &#123; p(read);//ÂΩìÂâçÂÜôËÄÖÈòüÂàó‰∏∫Á©∫ÁöÑÊó∂ÂÄôÔºåÂ∞±ÂèØ‰ª•Áî≥ËØ∑ËØªÊñá‰ª∂ËµÑÊ∫ê p(rmutex); //Êä¢Âç†ËØªËÄÖËÆ°Êï∞Âô® if(rcount == 0) //Â¶ÇÊûúÊòØÁ¨¨‰∏Ä‰∏™ËØªËÄÖÔºåÈÇ£‰πàÂ∞±Êä¢Âç†Êñá‰ª∂ËµÑÊ∫êÔºåËøôÊ†∑Â∞±ÂèØ‰ª•‰øùËØÅËØªÊñá‰ª∂‰∏éÂÜôÊñá‰ª∂‰∫íÊñ• p(file); //Êä¢Âç†Êñá‰ª∂ËµÑÊ∫ê rcount++; //ËØªËÄÖÊï∞Èáè+1 v(rmutex); //ÈáäÊîæËØªËÄÖËÆ°Êï∞Âô® v(read); //Ëøô‰∏ÄÊ≠•ÊØîËæÉÂÖ≥ÈîÆÔºåÂ¶ÇÊûú‰∏çÈáäÊîæÁöÑËØùÔºåÈÇ£‰πà‰Ω†ÊØèÊ¨°Âè™Êúâ‰∏Ä‰∏™ËØªËÄÖËøõÁ®ãÔºåËÄå‰∏îÂÜôËøõÁ®ã‰πü‰∏çËÉΩÊä¢Âç†Ëøô‰∏™ËµÑÊ∫êÔºåÂ∞±‰ºöÂèëÁîüÊ≠ªÈîÅ //ËÄå‰∏îËøô‰πüÊòØÂÜôËøõÁ®ãÊä¢Âç†ÂÜôÊñá‰ª∂ÁöÑÊó∂Êú∫ÔºåÂ¶ÇÊûúÂÜôËøõÁ®ãÊä¢Âç†Âà∞Ëøô‰∏™readÔºå‰ªñÂ∞±‰ºöÁ≠âÂà∞‰πãÂâçÊâÄÊúâÁöÑËØªËøõÁ®ãÂÆåÊàêÂêéÈáäÊîæÊñá‰ª∂ÔºåÁÑ∂ÂêéÊä¢Âç†Êñá‰ª∂ÔºåËøõËÄåÂ∞±ÂèØ‰ª•ÂºÄÂßãÂÜôËøõÁ®ãÔºåËøô‰πüÂ∞±ÊòØÂÜôËÄÖ‰ºòÂÖà read_file(); //ËØªÂèñÊñá‰ª∂ p(rmutex);//Êä¢Âç†ËØªËÄÖËÆ°Êï∞Âô® rcount--; if (rcount == 0) //Â¶ÇÊûúÊòØÊúÄÂêé‰∏Ä‰∏™ËØªËÄÖËøõÁ®ãÔºåÈáäÊîæÊñá‰ª∂ËµÑÊ∫ê v(file); v(rmutex); //ÈáäÊîæËØªËÄÖËÆ°Êï∞Âô® &#125;&#125;void writer(void)&#123; while(true) &#123; p(wmutex); //Êä¢Âç†ÂÜôËÄÖËÆ°Êï∞Âô® if (wcount == 0) //Â¶ÇÊûúÂΩìÂâçÂÜôËÄÖÈòüÂàó‰∏∫Á©∫ÔºåÁî≥ËØ∑‰ºòÂÖàËµÑÊ∫ê p(read) wcount++; //ÂÜôËÄÖÊï∞ÈáèÂä†1 v(wmutex); //ÈáäÊîæÂÜôËÄÖËÆ°Êï∞Âô® p(file); //Áî≥ËØ∑Êñá‰ª∂ËµÑÊ∫êÔºåËøôÊó∂ÂÄôÂÜôËÄÖ‰ºöÁ≠âÂæÖÂú®‰ªñËøõÁ®ã‰πãÂâçÁöÑÊâÄÊúâËØªËÄÖËøõÁ®ãÂÆåÊàêÂêéÈáäÊîæÊñá‰ª∂ write_file(); //ÂÜôÊñá‰ª∂ v(file); //ÈáäÊîæÊñá‰ª∂ p(wmutex); //Êä¢Âç†ÂÜôËÄÖËÆ°Êï∞Âô® wcount--; // ÂÜôËÄÖÊï∞ÈáèÂáè1 if (wcount == 0) //Â¶ÇÊûúÊòØÊúÄÂêé‰∏Ä‰∏™ÂÜôËÄÖ v(read); //ÈáäÊîæ‰ºòÂÖàËµÑÊ∫ê v(wmutex); //ÈáäÊîæÂÜôËÄÖËÆ°Êï∞Âô® &#125;&#125; ËØªËÄÖÂÜôËÄÖÔºàËØªÂÜôÂÖ¨Âπ≥Ôºâ‚ÄìÂÖàÊù•ÂÖàÊúçÂä°ÂÆûÁé∞ÊñπÊ≥ï ‰ø°Âè∑Èáè file ÂàùÂßãÂÄº‰∏∫1Ôºå //Áî®‰∫éÂÆûÁé∞ÂØπÊñá‰ª∂ÁöÑ‰∫íÊñ•Êìç‰Ωú readcount = 0; //ËÆ∞ÂΩïËØªËÄÖ‰∏™Êï∞ ‰ø°Âè∑Èáè readmutex ÂàùÂßãÂÄº‰∏∫1ÔºåÂØπreadcount ‰∫íÊñ•ËÆøÈóÆ ‰ø°Âè∑Èáè s ÂÆûÁé∞ËØªÂÜôÂÖ¨Âπ≥ ‰º™‰ª£Á†Å123456789101112131415161718192021222324252627282930void reader()&#123; while (1) &#123; p(s); p(readmutex); if (readcount == 0) p(file); readcount++; v(readmutex); v(s); ËØªÊñá‰ª∂ p(readmutex); if (readcount==0) v(file); v(readmutex); &#125;&#125;void writer()&#123; while (1) &#123; p(s); p(file); ÂÜôÊñá‰ª∂Ôºõ v(file); v(s); &#125;&#125; ÊµãËØïÂπ∂ÂèëÊÉÖÂÜµ ËØªËÄÖ1 ‚ÄîËØªËÄÖ2 ÂÜô1 ‚Äî ÂÜô2 ËØª 1 ‚ÄìÂÜô1 ÂÜô1 ‚ÄîËØª1 ËØª1 ‚ÄîÂÜô1‚ÄîËØª2]]></content>
      <categories>
        <category>Êìç‰ΩúÁ≥ªÁªü</category>
        <category>ËøõÁ®ãÁÆ°ÁêÜ</category>
      </categories>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÉåÂåÖÈóÆÈ¢ò]]></title>
    <url>%2F%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ÂÆö‰πâ ËÉåÂåÖÈóÆÈ¢òÔºàKnapsack problemÔºâÊòØ‰∏ÄÁßçÁªÑÂêà‰ºòÂåñÁöÑNPÂÆåÂÖ®ÈóÆÈ¢òÔºåËÄåNPÂÆåÂÖ®ÈóÆÈ¢òÊöÇÊó∂ËøòÁúã‰∏çÊáÇ„ÄÇÈóÆÈ¢ò ÂèØ‰ª•ÊèèËø∞‰∏∫ÔºöÁªôÂÆö‰∏ÄÁªÑÁâ©ÂìÅÔºåÊØèÁßçÁâ©ÂìÅÈÉΩÊúâËá™Â∑±ÁöÑÈáçÈáèÂíå‰ª∑Ê†ºÔºåÂú®ÈôêÂÆöÁöÑÊÄªÈáçÈáèÂÜÖÔºåÊàë‰ª¨Â¶Ç‰ΩïÈÄâÊã©ÔºåÊâçËÉΩ‰ΩøÂæóÁâ©ÂìÅÁöÑÊÄª‰ª∑Ê†ºÊúÄÈ´ò„ÄÇ 01ËÉåÂåÖ ÁâπÁÇπÊòØÊØèÁßçÁâ©ÂìÅ‰ªÖÊúâ‰∏Ä‰ª∂ÔºåÈÄâÊã©ÊîæÊàñËÄÖ‰∏çÊîæ f[i][v]Ë°®Á§∫Ââçi‰ª∂Áâ©ÂìÅÊîæÂÖ•ÂÆπÈáè‰∏∫vÁöÑËÉåÂåÖ‰∏≠ÂèØ‰ª•Ëé∑ÂæóÁöÑÊúÄÂ§ß‰ª∑ÂÄºÔºåÂàôÁä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ã‰∏∫Ôºöf[i][v] = max{ f[i-1][v] , f[i-1][v-w[i]] + v[i]} Á©∫Èó¥‰ºòÂåñ ÂÆåÂÖ®ËÉåÂåÖ Â∞±ÊòØÁé∞Âú®ÊâÄÈÄâÁöÑÂïÜÂìÅÂèØ‰ª•ÊòØ0‰∏™Ôºå1‰∏™Âà∞Êó†Èôê‰∏™ ‰∏âÂ±ÇÂæ™ÁéØdp[i][j] =MAX{ dp[i-1][j] , dp[i-1][j-k*w[i]] + k * v[i] }123456789101112void dp1()&#123; for (int i = 1; i&lt;= n;i++) for (int j = 1; j &lt;= money; j++) &#123; dp[i][j] = dp[i][j - 1]; for (int k = 0; k * w[i] &lt;= j; k++) &#123; dp[i][j] = max(dp[i][j], dp[i - 1][j - k * w[i]] + v[i]); &#125; &#125;&#125; ‰∏§Â±ÇÂæ™ÁéØdp[i][j] = max{dp[i-1][j], dp[i-1][j-w[i]] + v[i]}12345678910void dp()&#123; for (int i = 1; i&lt;= n;i++) for (int j = 1; j &lt;= money; j++) //ËøôÈáåÂ∞±Ë∑ü01ËÉåÂåÖÈóÆÈ¢òÁöÑÈ°∫Â∫è‰∏ç‰∏ÄÊ†∑ &#123; dp[i][j] = dp[i - 1][j]; if (j &gt;= w[i]) dp[i][j] = max(dp[i][j], dp[i - 1][j - w[i]] + v[i]); &#125;&#125; ‰∏ÄÁª¥Êï∞ÁªÑÁ©∫Èó¥‰ºòÂåñÔºödp[j] = max(dp[j], dp[j-w[i]] + v[i])12345678910111213void dp_1()&#123; for (int i = 1; i &lt;= m; i++) &#123; for (int j = need_time[i]; j &lt;= time0; j++) //ËøôÈáåÂæ™ÁéØÂèØ‰ª•ËøõË°åÂâ™Êûù &#123; int value1 = f[j - need_time[i]] + value[i]; if (value1 &gt; f[j]) f[j] = value1; &#125; &#125;&#125;]]></content>
      <categories>
        <category>ÁÆóÊ≥ï</category>
        <category>Âä®ÊÄÅËßÑÂàí</category>
        <category>ËÉåÂåÖÈóÆÈ¢ò</category>
      </categories>
      <tags>
        <tag>Âä®ÊÄÅËßÑÂàí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´‰πãÊ≠£ÂàôË°®ËææÂºè]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Â∏∏Áî®ÁöÑÊ≠£ÂàôË°®ËææÂºèÁ¨¶Âè∑ Á¨¶Âè∑ Âê´‰πâ ‰æãÂ≠ê ÂåπÈÖçÁªìÊûú * ÂåπÈÖçÂâçÈù¢ÁöÑÂ≠óÁ¨¶ÔºåÂ≠êË°®ËææÂºèÊàñËÄÖÊã¨Âè∑ÈáåÁöÑÂ≠óÁ¨¶0Ê¨°ÊàñËÄÖÂ§öÊ¨° a*b* aaaaaa, aaabbbb,bbbbb + ÂåπÈÖçÂâçÈù¢ÁöÑÂ≠óÁ¨¶ÔºåÂ≠êË°®ËææÂºèÊàñËÄÖÊã¨Âè∑ÈáåÁöÑÂ≠óÁ¨¶Ëá≥Â∞ë‰∏ÄÊ¨° a+b+ aaaaaaaaaaabb,aaabbbbb,abbbbbb [] ÂåπÈÖç‰∏≠Êã¨Âè∑ÂÜÖÁöÑ‰ªªÊÑè‰∏Ä‰∏™Â≠óÁ¨¶ÔºàÁõ∏ÂΩì‰∫é‰ªªÈÄâ‰∏Ä‰∏™Ôºâ [A-Z]* APPLE, CAPITALS,QWERTY () Ë°®ËææÂºèÁºñÁªÑÔºàÂú®Ê≠£ÂàôË°®ËææÂºèÁöÑËßÑÂàô‰∏≠ÁºñËæëÁªÑ‰ºö‰ºòÂÖàËøêË°åÔºâ (a+b)* aaaabaab, abaaab, ababaaab {m,n} ÂåπÈÖçÂâçÈù¢ÁöÑÂ≠óÁ¨¶ÔºåÂ≠êË°®ËææÂºèÊàñËÄÖÊã¨Âè∑ÈáåÁöÑÂ≠óÁ¨¶mÂà∞nÊ¨°ÔºàÂåÖÂê´mÊàñËÄÖnÊ¨°Ôºâ {m}ÂÖÅËÆ∏Ââç‰∏Ä‰∏™Â≠óÁ¨¶Âè™ËÉΩÂá∫Áé∞mÊ¨° a{2,3}b{2,3} aabbb, aaabbb,aabb, aaabb [^] ÂåπÈÖç‰ªªÊÑè‰∏Ä‰∏™‰∏çÂú®‰∏≠Êã¨Âè∑ÁöÑÂ≠óÁ¨¶ [^A-Z] apple,lowercase | ÂåπÈÖç‰ªªÊÑè‰∏Ä‰∏™Áî±Á´ñÁ∫øÂàÜÂâ≤ÁöÑÂ≠óÁ¨¶ÔºåÂ≠êË°®ËææÂºè b(a|i|e)d bad, bid, bed . ÂåπÈÖç‰ªªÊÑèÂçï‰∏™Â≠óÁ¨¶ÔºàÂåÖÊã¨Á¨¶Âè∑ÔºåÊï∞Â≠óÂíåÁ©∫Ê†ºÔºâÈô§‰∫ÜÊç¢Ë°åÁ¨¶ b.d b d, bad, b&amp;d ^ ÊåáÂ≠óÁ¨¶‰∏≤ÂºÄÂßã‰ΩçÁΩÆÁöÑÂ≠óÁ¨¶ÊàñËÄÖÂ≠êË°®ËææÂºè ^a apple, asdf, a \ ËΩ¨‰πâÂ≠óÁ¨¶ÔºàÊääÁâπÊÆäÂê´‰πâÁöÑÂ≠óÁ¨¶ËΩ¨Êç¢ÊàêÂ≠óÈù¢ÂΩ¢ÂºèÔºâ \.\ \\ $ ÂåπÈÖçÂ≠óÁ¨¶‰∏≤ÁöÑÊú´Â∞æ ?! ‚Äú‰∏çÂåÖÂê´‚ÄùÔºåË°®Á§∫Â≠óÁ¨¶‰∏çËÉΩÂá∫Áé∞Âú®ÁõÆÊ†áÂ≠óÁ¨¶‰∏≤‰∏≠ÔºåÂ¶ÇÊûúÊÉ≥Ë¶ÅÊï¥‰∏™Â≠óÁ¨¶‰∏≤‰∏≠ÂΩªÂ∫ïÊéíÈô§Êüê‰∏™Â≠óÁ¨¶ÔºåÂ∞±Âä†‰∏ä^Âíå$ ^((?![A-Z]).)$ no-caps-here Ê®°Âºè ÊèèËø∞ () ÂåπÈÖçÊã¨Âè∑ÂÜÖÁöÑË°®ËææÂºèÔºå ‰πüË°®Á§∫‰∏Ä‰∏™ÁªÑ \s ÂåπÈÖçÁ©∫ÁôΩÂ≠óÁ¨¶ \S ÂåπÈÖç‰ªª‰ΩïÈùûÁ©∫ÁôΩÂ≠óÁ¨¶ \d ÂåπÈÖçÊï∞Â≠óÔºå Á≠â‰ª∑‰∫é[0-9] \D ÂåπÈÖç‰ªª‰ΩïÈùûÊï∞Â≠óÔºåÁ≠â‰ª∑‰∫é[^0-9] \w ÂåπÈÖçÂ≠óÊØçÊï∞Â≠óÔºåÁ≠â‰ª∑‰∫é[A-Za-z0-9] \W ÂåπÈÖçÈùûÂ≠óÊØçÊï∞Â≠óÔºåÁ≠â‰ª∑‰∫é[^A-za-z0-9] [] Áî®ÂäõË°®Á§∫‰∏ÄÁªÑÂ≠óÁ¨¶ ? ÂåπÈÖçÂâç‰∏Ä‰∏™Â≠óÁ¨¶0Ê¨°ÊàñËÄÖ1Ê¨° Ê≠£ÂàôË°®ËææÂºèÁöÑË¥™Â©™Ê®°ÂºèÂíåÈùûË¥™Â©™Ê®°Âºè Ë¥™Â©™Ê®°ÂºèÔºöÈ°æÂêçÊÄù‰πâÔºåÂ∞±ÊòØÂ∞ΩÂèØËÉΩÂåπÈÖçÂ§öÁöÑÂ≠óÁ¨¶Ôºå‰æãÂ¶Ç‚Äùbaaaaac‚Äù, pattern = re.compile(‚Äòba+‚Äô)Â∞±ÊòØÁ≠â‰∫ébaaaaa ÈùûË¥™Â©™Ê®°ÂºèÔºöÈ°æÂêçÊÄù‰πâÔºåÂ∞±ÊòØÂú®ÂåπÈÖçÊàêÂäüÁöÑÂâçÊèê‰∏ãÔºåÂåπÈÖçÂ∞ΩÈáèÂ∞ëÁöÑÂ≠óÁ¨¶Ôºå ÂÆûÁé∞ÁöÑÊñπÊ≥ï‰πüÂæàÁÆÄÂçïÂ∞±ÊòØÂú®Ê≠£ÂàôË°®ËææÂºèÁöÑÈáèËØçÂêéÈù¢Âä†‰∏ä? , ‰æãÂ¶ÇÔºö‚Äúbaaaaac‚Äù, pattern = re.compile(‚Äòba+?‚Äô)ÔºåÈÇ£‰πàpatternÂ∞±ÊòØba pythonÊ≠£ÂàôË°®ËææÂºèÁöÑ3ÁßçÁî®Ê≥ïÂÆòÊñπÊñáÊ°£Ôºöhttps://docs.python.org/zh-cn/3/library/re.html re.match() re.search() re.findall() re.match() Âè™ËÉΩ‰ªéÂ≠óÁ¨¶‰∏≤Ëµ∑Âßã‰ΩçÁΩÆÂåπÈÖç‰∏Ä‰∏™Ê®°ÂºèÔºåÂ¶ÇÊûú‰ªéËµ∑Âßã‰ΩçÁΩÆÂåπÈÖç‰∏ç‰∫ÜÔºåÂ∞±ËøîÂõûnoneÔºåÂê¶ÂàôÂ∞±ËøîÂõû‰∏Ä‰∏™ÂåπÈÖçÂØπË±° re.match()ÁöÑËØ≠Ê≥ï‰∏∫Ôºöre.match(pattern, string, flags=0),ÂÖ∂‰∏≠patternÊòØÊ≠£ÂàôË°®ËææÂºèÔºå stringÊòØË¶ÅÂåπÈÖçÁöÑÂ≠óÁ¨¶‰∏≤Ôºå flagsÁî®Êù•ÊéßÂà∂Ê≠£ÂàôË°®ËææÂºèÁöÑÂåπÈÖçÊñπÂºèÔºåÂ¶ÇÊòØÂê¶Âå∫ÂàÜÂ§ßÂ∞èÂÜôÔºåÂ§öË°åÂåπÈÖçÁ≠â 123456789101112import rem = re.match('www', 'www.baidu.com')print("ÂåπÈÖçÁöÑÁªìÊûú‰∏∫Ôºö",m)print("ÂåπÈÖçÁöÑËµ∑ÁÇπÂíåÁªàÁÇπÔºö", m.span())print("Ëµ∑ÁÇπ‰∏∫Ôºö", m.start())print("ÁªàÁÇπ‰∏∫Ôºö", m.end())"""ÂåπÈÖçÁöÑÁªìÊûú‰∏∫Ôºö &lt;re.Match object; span=(0, 3), match='www'&gt;ÂåπÈÖçÁöÑËµ∑ÁÇπÂíåÁªàÁÇπÔºö (0, 3)Ëµ∑ÁÇπ‰∏∫Ôºö 0ÁªàÁÇπ‰∏∫Ôºö 3ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .""" 123456789101112line = "Fat cats are smarter than dogs, is it right?"m = re.match(r'(.*) are (.*?) ', line)print("ÂåπÈÖçÁöÑÊï¥Âè•ËØùÔºö", m.group(0))print("„ÄêÂåπÈÖçÁöÑÁ¨¨‰∏Ä‰∏™ÁªìÊûú‰∏∫Ôºö", m.group(1))print("ÂåπÈÖçÁöÑÁ¨¨‰∫å‰∏™ÁªìÊûúÔºö", m.group(2))print("ÂåπÈÖçÁªìÊûúÁöÑÂÖÉÁªÑÔºö", m.groups())"""ÂåπÈÖçÁöÑÊï¥Âè•ËØùÔºö Fat cats are smarter„ÄêÂåπÈÖçÁöÑÁ¨¨‰∏Ä‰∏™ÁªìÊûú‰∏∫Ôºö Fat catsÂåπÈÖçÁöÑÁ¨¨‰∫å‰∏™ÁªìÊûúÔºö smarterÂåπÈÖçÁªìÊûúÁöÑÂÖÉÁªÑÔºö ('Fat cats', 'smarter')""" Âú®matchÁöÑÊ®°ÂºèÂâçÈù¢Âä†‰∏ärÔºårÁöÑÊÑèÊÄùË°®Á§∫ÁöÑÊòØraw string, ‰ª£Ë°®Á∫ØÁ≤πÁöÑÂ≠óÁ¨¶‰∏≤Ôºå‰ΩøÁî®ÂÆÉÂ∞±‰∏ç‰ºöÂØπÂºïÂè∑ÂÜÖÁöÑÂèçÊñúÊù†ËøõË°åÁâπÊÆäÂ§ÑÁêÜ, Â≠óÁ¨¶ËΩ¨‰πâÂèØ‰ª•Âú®ÂâçÈù¢Âä†‰∏är, Ê≠£ÂàôËΩ¨‰πâÂ∞±ÂæóË¶ÅÂú®Ê≠£ÂàôË°®ËææÂºèÂÜÖÊ∑ªÂä†ËΩ¨‰πâÂ≠óÁ¨¶ \ 1234567print('hello\n world')print(r'hello\nworld')"""hello worldhello\nworld""" re.search() Êâ´ÊèèÊï¥‰∏™Â≠óÁ¨¶‰∏≤Âπ∂ËøîÂõûÁ¨¨‰∏Ä‰∏™ÊàêÂäüÁöÑÂåπÈÖç 12345678m_match = re.match('com', 'www.baidu.com')m_search = re.search('com', 'www.baidu.com')print(m_match)print(m_search)"""None&lt;re.Match object; span=(10, 13), match='com'&gt;""" re.findall() matchÂíåsearchÊñπÊ≥ïÂè™ËÉΩÊâæÂà∞‰∏Ä‰∏™ÂåπÈÖçÊâÄÂÜôÁöÑÊ®°ÂºèÔºåfindallÂèØ‰ª•ÊâæÂà∞ÊâÄÊúâÁöÑÂåπÈÖçÔºå ËøîÂõûÂåπÈÖçÁªìÊûúÁöÑÂàóË°® 123456789101112re_string = '12345 is the first number, 23456 is the second number'm_match = re.match('[0-9]+', re_string)m_search = re.search('[0-9]+', re_string)m_findall = re.findall('[0-9]+', re_string)print(m_match.group())print(m_search.group())print(m_findall)"""1234512345['12345', '23456']""" re.compile() ËøîÂõû‰∏Ä‰∏™ÂåπÈÖçÂØπË±°ÔºåÈÄöÂ∏∏‰∏é‰∏äËø∞‰∏âÁßçÊñπÊ≥ïÈÖçÂêà‰ΩøÁî® 123456789101112def main(): content = "hello hell to heatg othif" pattern = re.compile("\w*o\w*") re_content = pattern.findall(content) print(re_content)if __name__ == "__main__": main() """ ['hello', 'to', 'othif'] """ BeautifulSoupÂØπË±° BeautifulSoupÂØπË±° 123html = urlopen('http://www.pythonscraping.com/pages/page3.html')bs = BeautifulSoup(html, 'html.parser')# BeautifulSoupÂØπË±° Ê†áÁ≠æTagÂØπË±° BeautifulSoupÂØπË±° ÈÄöËøáfindÊàñËÄÖfind_all ÊàñËÄÖÁõ¥Êé•Ë∞ÉÁî®Â≠êÊ†áÁ≠æËé∑Âèñ‰∏ÄÂàóÂØπË±°ÊàñËÄÖÂçï‰∏™ÂØπË±°Ôºöbs.div.h1 ÂØπ‰∫é‰∏Ä‰∏™Ê†áÁ≠æÂØπË±°ÔºåÂèØ‰ª•Ëé∑Âæó‰ªñ‰ª¨ÁöÑÂÖ®ÈÉ®Â±ûÊÄßÔºötag.attrs 123images = bs.find_all('img', &#123;'src':re.compile('\.\.\/img\/gifts\/img.*\.jpg')&#125;) # Ê†áÁ≠æÂØπË±° Áî±BeautifulSoupÂØπË±°ÈÄöËøáfindÊàñËÄÖfind_all()ÂáΩÊï∞Ëé∑Âæó# find_all()ÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÊòØÊ†áÁ≠æÔºåÁ¨¨‰∫å‰∏™attributesÁî®‰∏Ä‰∏™pythonÂ∞ÅË£ÖÁöÑÂ±ûÊÄßÂíåÂØπÂ∫îÁöÑÂ±ûÊÄßÂÄº NavigableStringÂØπË±° Áî®Êù•Ë°®Á§∫Ê†áÁ≠æÈáåÁöÑÊñáÂ≠óÔºåËÄå‰∏çÊòØÊ†áÁ≠æÊú¨Ë∫´ CommentÂØπË±° Áî®Êù•Êü•ÊâæHtmlÊñáÊ°£ÁöÑÊ≥®ÈáäÊ†áÁ≠æ, &lt;!--ÂÉèËøôÊ†∑--&gt;]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑„ÄëP1316‰∏¢Áì∂Áõñ]]></title>
    <url>%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1316%E4%B8%A2%E7%93%B6%E7%9B%96%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Èô∂Èô∂ÊòØ‰∏™Ë¥™Áé©ÁöÑÂ≠©Â≠êÔºå‰ªñÂú®Âú∞‰∏ä‰∏¢‰∫ÜA‰∏™Áì∂ÁõñÔºå‰∏∫‰∫ÜÁÆÄÂåñÈóÆÈ¢òÔºåÊàë‰ª¨ÂèØ‰ª•ÂΩì‰ΩúËøôA‰∏™Áì∂Áõñ‰∏¢Âú®‰∏ÄÊù°Áõ¥Á∫ø‰∏äÔºåÁé∞Âú®‰ªñÊÉ≥‰ªéËøô‰∫õÁì∂ÁõñÈáåÊâæÂá∫B‰∏™Ôºå‰ΩøÂæóË∑ùÁ¶ªÊúÄËøëÁöÑ2‰∏™Ë∑ùÁ¶ªÊúÄÂ§ßÔºå‰ªñÊÉ≥Áü•ÈÅìÔºåÊúÄÂ§ßÂèØ‰ª•Âà∞Â§öÂ∞ëÂë¢Ôºü ËæìÂÖ•Ê†ºÂºèÁ¨¨‰∏ÄË°åÔºå‰∏§‰∏™Êï¥Êï∞ÔºåA,B„ÄÇÔºàB&lt;=A&lt;=100000Ôºâ Á¨¨‰∫åË°åÔºåA‰∏™Êï¥Êï∞ÔºåÂàÜÂà´‰∏∫ËøôA‰∏™Áì∂ÁõñÂùêÊ†á„ÄÇ ËæìÂá∫Ê†ºÂºè‰ªÖ‰∏Ä‰∏™Êï¥Êï∞Ôºå‰∏∫ÊâÄÊ±ÇÁ≠îÊ°à„ÄÇ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 125 31 2 3 4 5 ËæìÂá∫ #1 12 ËØ¥Êòé/ÊèêÁ§∫ÈôêÊó∂3Áßí ÊÄùË∑ØÔºö È¶ñÂÖàÂÖà‰∫ÜËß£‰∏Ä‰∏ã‰∫åÂàÜÁ≠îÊ°àÔºå‰∫åÂàÜÁ≠îÊ°à‰∏ªË¶ÅÂ∫îÁî®‰∫éÊ±ÇÊüêÊüêÊúÄÂ∞èÂÄº‰∏≠ÁöÑÊúÄÂ§ßÂÄºÊàñËÄÖÊúÄÂ§ßÂÄº‰∏≠ÁöÑÊúÄÂ∞èÂÄºÔºåÊàëÁöÑ‰∏™‰∫∫ÁêÜËß£ÊòØÊâæÂà∞È¢òÁõÆ‰∏≠ÁöÑleftÂíåright,‰πüÂ∞±ÊòØÊàë‰ª¨ÊêúÁ¥¢Âå∫Èó¥ÁöÑ‰∏ä‰∏ãÁïåÔºåÁÑ∂ÂêéÂÅáËÆæmid‰∏∫Ëøô‰∏™ÊúÄ‰ºòËß£ÔºåÁî®check()ÂáΩÊï∞ËøõË°åÂà§Êñ≠„ÄÇ ÈíàÂØπ‰∫éÊú¨Ê¨°ËøôÈÅìÈ¢òÔºå‰∏ªË¶ÅÂØπcheck()ÂáΩÊï∞ÁöÑÈáçÂÜôÔºåÊàë‰ª¨ÂÖàÂØπÊï∞ÁªÑËøõË°åÊéíÂàóÔºå‰ªéÁ¨¨‰∏Ä‰∏™Áì∂ÁõñÂºÄÂßãÔºåÁÑ∂ÂêéÈÅçÂéÜËøô‰∏™Êï∞ÁªÑÔºåÂΩì‰∏ã‰∏Ä‰∏™Áì∂Áõñarr[i] - arr[1] &gt;= midÔºåËØ¥ÊòéÊàë‰ª¨ÊâæÂà∞‰∫ÜÁì∂ÁõñÔºåÁÑ∂Âêétimes++,ÁÑ∂ÂêéÊõ¥Êñ∞ÂΩìÂâçÁöÑËµ∑ÁÇπÁöÑÂÄºÔºåÊï∞ÁªÑÈÅçÂéÜÂÆåÂêéËøõË°åÂà§Êñ≠Áì∂ÁõñÁöÑÊ¨°Êï∞Âç≥ÂèØ„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include&lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int arr[100005];int n, m;int check(int x)&#123; //int min = 0xffffffff; int times = 1; int temp = arr[1]; for (int i = 2; i &lt;= n; i++) &#123; if (arr[i] - temp &gt;= x) //Ê≥®ÊÑèËøôÈáåË¶ÅÁî®Á≠â‰∫éÂè∑ÔºåÂõ†‰∏∫Á°ÆÂÆö‰∏Ä‰∏™Áì∂ÁõñÂêéÔºåË¶Å‰ªéËøô‰∏™Áì∂ÁõñÂºÄÂßãÂÅöËµ∑ÁÇπ &#123; times++; temp = arr[i]; &#125; &#125; if (times &gt;= m) //ÂèØÈÄâÁöÑÁì∂ÁõñÊï∞Â§ß‰∫ém return 1; else return 0;&#125;int main()&#123; //int min, max; cin &gt;&gt; n &gt;&gt; m; for (int i = 1; i &lt;= n; i++) &#123; cin &gt;&gt; arr[i]; &#125; sort(arr+1, arr + n+1); //Ê≥®ÊÑè ‰æãÂ¶ÇÊàë‰ª¨ÊéíÂàó‰∏Ä‰∏™a[10]ÁöÑÊï∞ÁªÑÔºåsort(arr, arr+10)ÔºåÊâÄ‰ª•‰æùÊ¨°Á±ªÊé®Ôºåsort(arr+1, arr+10+1); /* for (int i = 1; i &lt;= n; i++) cout &lt;&lt; arr[i] &lt;&lt; " "; cout &lt;&lt; endl; */ //‰∫åÂàÜÁ≠îÊ°àÊ®°Êùø int ans = 0; int left = 1; int right = arr[n] - arr[1]; while (left &lt;= right) &#123; int mid = (left + right) / 2; if (check(mid)) &#123; left = mid + 1; if (mid &gt; ans) ans = mid; &#125; else right = mid - 1; &#125; cout &lt;&lt; ans &lt;&lt; endl; system("pause"); return 0;&#125; ÊÄªÁªì ËøôÊòØ‰∏Ä‰∫õÊ®°ÊùøÈ¢òÔºå‰∏ªË¶ÅÊòØ‰∫åÂàÜÁ≠îÊ°àÁöÑÊ®°Êùø ÂÖ∂Ê¨°ÔºåÂØπ‰∫é‰∫åÂàÜÁ≠îÊ°àÔºåÊàëÁöÑÁêÜËß£Â∞±ÊòØÂÅáËÆæÊúÄ‰ºòËß£Âú®Ëøô‰∏™Âå∫Èó¥[left, right]‰∏≠ÔºåÁÑ∂ÂêéÁî®‰∫åÂàÜÊêúÁ¥¢ÊâæÂà∞Ëøô‰∏™midÊúÄ‰ºòËß£ÔºåÊâÄ‰ª•Â∞±ÊòØÁ°ÆÂÆö‰∏ä‰∏ãÂå∫Èó¥ ÊúÄÂêéÂ∞±ÊòØcheck()ÂáΩÊï∞ÁöÑÈóÆÈ¢ò]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>‰∫åÂàÜÁ≠îÊ°à</category>
      </categories>
      <tags>
        <tag>‰∫åÂàÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-pandas-Â∏∏Áî®ÊñπÊ≥ï]]></title>
    <url>%2Fpython-pandas-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[reindexÈáçÊñ∞Á¥¢Âºï12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879import numpy as np import pandas as pd obj = pd.Series([1,2,3,4],index=['a','c','d','b'])print(obj)"""a 1c 2d 3b 4dtype: int64"""obj1 = obj.reindex(['a','b','c','d'])print(obj1)"""a 1b 4c 2d 3dtype: int64"""obj2 = obj.reindex(['a','b','c','d','fff'])print(obj2)"""a 1.0b 4.0c 2.0d 3.0fff NaNdtype: float64"""# reindex‰ºöÊ†πÊçÆÊñ∞Á¥¢ÂºïËøõË°åÈáçÊéí,Â¶ÇÊûúÊüê‰∏™Á¥¢ÂºïÂÄºÂΩìÊúü‰∏çÂ≠òÂú®,ÈÇ£‰πàÂºïÂÖ•Áº∫Â§±ÂÄºobj3 = pd.Series(['blue','yellow','black'],index=[0,2,4])obj3 = obj3.reindex(range(7), method='ffill')print(obj3)"""0 blue1 blue2 yellow3 yellow4 black5 blackdtype: object""""""0 blue1 blue2 yellow3 yellow4 black5 black6 blackdtype: object"""frame = pd.DataFrame(np.arange(9).reshape(3,3),index=['a','b','c'],columns=[11,22,33])print(frame)""" 11 22 33a 0 1 2b 3 4 5c 6 7 8"""frame = frame.reindex(['a','b','d','c']) # Âè™ÊòØ‰º†ÈÄí‰∏Ä‰∏™Â∫èÂàó,ÂàôÂè™‰ºöÈáçÊñ∞Á¥¢ÂºïË°åprint(frame)columns_index = [11,22,33,'ddd']frame = frame.reindex(columns=columns_index,fill_value='hahah') #ÊåáÂÆöÈáçÊñ∞Á¥¢ÂºïÂàó,ÈáçÊñ∞Á¥¢Âºï‰∫ßÁîüÁöÑÁº∫Â§±ÂÄºÁî±fill_valueÁ°ÆÂÆöprint(frame)""" 11 22 33 ddda 0.0 1.0 2.0 hahahb 3.0 4.0 5.0 hahahd NaN NaN NaN hahahc 6.0 7.0 8.0 hahah""" dropÂà†Èô§ÊåáÂÆöËΩ¥ÁöÑÂÄº dropÂáΩÊï∞ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°ÔºåÂΩìÁÑ∂ÂèØ‰ª•inplace=TrueËøõË°åÊåáÂÆöÔºåÂ∞±ÊòØÂØπÂéüÂØπË±°ËøõË°åÊìç‰Ωú 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import numpy as np import pandas as pd obj = pd.Series(np.arange(5.), index=['a', 'b', 'c', 'd', 'e'])obj = obj.drop(['c']) #Ê≥®ÊÑèËøîÂõûÁöÑÊòØ‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°print(obj)obj = obj.drop(['a','b'])print(obj)"""a 0.0b 1.0d 3.0e 4.0dtype: float64d 3.0e 4.0dtype: float64"""obj.drop('e', inplace=True) #Â¶ÇÊûúÊåáÂÆö‰∫Üinplace=True,ÈÇ£‰πàdropÂáΩÊï∞Â∞±‰∏ç‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°print(obj)"""d 3.0dtype: float64"""data = pd.DataFrame(np.arange(9).reshape(3,3), index=[1,2,3], columns=[7,8,9])print(data)data = data.drop(1) #Â¶ÇÊûú‰∏çÊåáÂÆö,ÈªòËÆ§Âà†Èô§ÁöÑÊòØ0ËΩ¥ÁöÑindex,Ë°åÊ†áÁ≠æprint(data)""" 7 8 92 3 4 53 6 7 8"""data = data.drop(7,axis = 1) #Âà†Èô§ÂàóÊ†áÁ≠æprint(data)""" 8 92 4 53 7 8""" Á¥¢Âºï,ÈÄâÂèñÔºåËøáÊª§ pandasÁöÑÁ¥¢ÂºïÁ±ª‰ºº‰∏Ä‰∏™numpyÔºåÂè™‰∏çËøáÊòØpandasÁöÑÁ¥¢Âºï‰∏çÂè™ÊòØÊï∞Â≠ó Âà©‚Ω§Ê†áÁ≠æÁöÑÂàá‚ΩöËøêÁÆó‰∏éÊôÆÈÄöÁöÑPythonÂàá‚ΩöËøêÁÆó‰∏çÂêåÔºåÂÖ∂Êú´Á´ØÊòØÂåÖÂê´ÁöÑ ÂØπ‰∫éDataFrameÂØπË±°Ôºå‚Ω§‚ºÄ‰∏™ÂÄºÊàñÂ∫èÂàóÂØπDataFrameËøõ‚æèÁ¥¢ÂºïÂÖ∂ÂÆûÂ∞±ÊòØËé∑Âèñ‚ºÄ‰∏™ÊàñÂ§ö‰∏™Âàó, ‰ΩøÁî®ÂàáÁâá,ÂØπË°åÊ†áÁ≠æËøõË°åÁ¥¢Âºï ÈÄöËøáÂ∏ÉÂ∞îÂûãÊï∞ÁªÑÁ¥¢ÂºïËøõË°åËøáÊª§ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109import pandas as pd import numpy as np data = pd.DataFrame(np.arange(9).reshape(3,3), index=list('abc'),columns=list('mnq'))print(data)""" m n qa 0 1 2b 3 4 5c 6 7 8"""# DataFrame‰ΩøÁî®[]ÈªòËÆ§Êó∂ÂØπÂàóËøõË°åÁ¥¢Âºï# ‚Ω§‚ºÄ‰∏™ÂÄºÊàñÂ∫èÂàóÂØπDataFrameËøõ‚æèÁ¥¢ÂºïÂÖ∂ÂÆûÂ∞±ÊòØËé∑Âèñ‚ºÄ‰∏™ÊàñÂ§ö‰∏™Âàó# ‰ΩøÁî®ÂàóÊ†áÁ≠æËøõË°åÁ¥¢Âºïprint(data['m'])"""a 0b 3c 6Name: m, dtype: int64"""# ‰ΩøÁî®Â∫èÂàóÂØπÂØπÂàóÊ†áÁ≠æËøõË°åÁ¥¢Âºï,Ê≥®ÊÑèÁ¥¢ÂºïÂ§ö‰∏™Âàó‰∏ÄÂÆöË¶ÅÁî®Â∫èÂàóÂØπËøõË°åÁ¥¢Âºïprint(data[['m','n']])""" m na 0 1b 3 4c 6 7"""# ‰ΩøÁî®ÂàáÁâáÂØπË°åÊ†áÁ≠æËøõË°åÁ¥¢Âºï# ‰ΩøÁî®ÈªòËÆ§Ë°åÊ†áÁ≠æÁöÑÂ∫èÂè∑ËøõË°åÁ¥¢Âºï,ÂàáÁâáÂ∫èÂè∑Â∫èÂàóÂØπÁ¥¢Âºï,ÁªìÊûú‰∏çÂåÖÂê´Êú´Á´ØÁ¥¢Âºïprint(data[0:2])""" m n qa 0 1 2b 3 4 5"""# ‰ΩøÁî®Á¥¢ÂºïÊ†áÁ≠æËøõË°åÂàáÁâáÁ¥¢Âºï,Êú´Á´ØÁ¥¢ÂºïÊúâÂåÖÂê´print(data['a':'c'])""" m n qa 0 1 2b 3 4 5c 6 7 8"""# Ë°åÂàóÁªìÂêàËøõË°åÁ¥¢Âºïprint(data[['m','n']]['a':'b'])""" m na 0 1b 3 4"""# Ë°åÂàóÈ°∫Â∫è‰∏çÂΩ±Âìç# ÂàáÁâáÂ∞±ÊòØÈÄâÊã©Ë°å,ÂÄºÊàñÂ∫èÂàóÂ∞±ÊòØÈÄâÊã©Âàóprint(data['a':'b']['m'])"""a 0b 3Name: m, dtype: int64"""# Â≠òÂú®ÈóÆÈ¢ò:Â¶ÇÊûú‰Ω†ÁöÑË°å‰æøÁ≠æÊòØÊï∞Â≠ó,,ÈÇ£‰πàÂ∞±‰ºöË∑üËøô‰∏™ËßÑÂàôÁõ∏‰∫íÂÜ≤Á™Å# print(data[2][2])# print(data['a']['m'])# ËÆ∞‰ΩèËßÑÂàô:Ê†áÁ≠æÁöÑÂàáÁâáËøêÁÆóÂíåpythonÁöÑÂàáÁâáËøêÁÆóÊòØ‰∏çÂêå,ÂâçËÄÖÊòØÂåÖÂê´Êú´Á´ØÁöÑ# ÈÄöËøáÂ∏ÉÂ∞îÂûãÊï∞ÁªÑÈÄâÂèñÊï∞ÊçÆdata1 = data &lt; 4print(data1)""" m n qa True True Trueb True False Falsec False False False"""print(data[data &lt; 4])""" m n qa 0.0 1.0 2.0b 3.0 NaN NaNc NaN NaN NaN"""print(data['n'] &gt; 3)"""a Falseb Truec TrueName: n, dtype: bool"""print(data[data['n']&gt;3])""" m n qb 3 4 5c 6 7 8""" ‚Ω§locÂíåilocËøõ‚æèÈÄâÂèñ ÂΩìÂ§ÑÁêÜ‰∏Ä‰∏™DataFrameÂØπË±°Êó∂ÔºåÂ¶ÇÊûúÂØπË±°ÁöÑË°åÊ†áÁ≠æÊòØ‰∏Ä‰∫õÊï¥Êï∞Ôºå‰ΩøÁî®locÂèØ‰ª•ÊåáÂÆöÊòØÊ†áÁ≠æÁ¥¢ÂºïÔºåilocÊòØÊï¥Êï∞Á¥¢Âºï 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283import pandas as pd import numpy as np data = pd.DataFrame(np.arange(16).reshape(4,4), index=list('abcd'), columns=list('qwer'))print(data)""" q w e ra 0 1 2 3b 4 5 6 7c 8 9 10 11"""print(data['q'])"""a 0b 4c 8d 12Name: q, dtype: int64"""print(data.loc['a':'c'])""" q w e ra 0 1 2 3b 4 5 6 7c 8 9 10 11"""print(data.loc[:, 'q'])"""a 0b 4c 8d 12Name: q, dtype: int64"""print(data.loc['a', 'w'])# 1print(data.loc['a':'c','q':'e']) #Ê≥®ÊÑèÂàáÁâá‰∏çÁî®Âä†‰∏≠Êã¨Âè∑ÔºåÂè™ÊúâÂú®Â∫èÂàóÂØπÁöÑÊó∂ÂÄôÂä†""" q w ea 0 1 2b 4 5 6c 8 9 10"""print(data.loc[['a','c'],['q','e']]) #Âú®Â∫èÂàóÂØπÁöÑÊó∂ÂÄôÂä†""" q ea 0 2c 8 10"""print(data.iloc[1])"""q 4w 5e 6r 7Name: b, dtype: int64"""print(data.iloc[0:2])""" q w e ra 0 1 2 3b 4 5 6 7"""print(data.iloc[1,2])# 6print(data.iloc[1:2, 1:2])""" wb 5"""# print(data.get_value('a', 'q'))"""get_value is deprecated and will be removed in a future release. Please use .at[] or .iat[] accessors instead"""print(data.at['a','q'])# 0print(data.iat[0,0])# 0 ÁÆóÊúØËøêÁÆóÔºåÊï∞ÊçÆÂØπÈΩêÔºåÊï∞ÊçÆÂ°´ÂÖÖ123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import numpy as np import pandas as pd data1 = pd.DataFrame(np.arange(9).reshape(3,3), columns=list('abc'))data2 = pd.DataFrame(np.arange(12).reshape(3,4),columns=list('abde'))print(data1 + data2)# ‰∏§‰∏™ÂØπË±°Áõ∏Âä†ÔºåÁªìÊûúËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°Ôºå indexÂíåcolumns‰∏∫‰∏§‰∏™ÂØπË±°ÁöÑÂπ∂ÈõÜÔºåÂπ∂‰∏îÂú®Áº∫Â§±ÁöÑÂú∞ÊñπÂºïÂÖ•Áº∫Â§±ÂÄºNaNprint(data1.add(data2, fill_value=0))""" a b c d e0 0 2 NaN NaN NaN1 7 9 NaN NaN NaN2 14 16 NaN NaN NaN a b c d e0 0 2 2.0 2.0 3.01 7 9 5.0 6.0 7.02 14 16 8.0 10.0 11.0"""print(data1.add(data2, fill_value=1))# Áî±Ëøô‰∏™ÁªìÊûúÂèØ‰ª•ÂèëÁé∞ÔºåÁÆóÊúØËøêÁÆóÁöÑÂ°´ÂÖÖÔºåÊúâÁÇπÁ±ª‰ºº‰∫éÂπøÊí≠ÔºåÈ¶ñÂÖàÂπøÊí≠‰ΩøÂæó‰∏§‰∏™DataFrameÁöÑÂΩ¢Áä∂Áõ∏ÂêåÔºåcolumns‰πüÁõ∏ÂêåÔºå# ÁÑ∂ÂêéÁî®fill_valueÂ°´ÂÖÖÔºåÁÑ∂ÂêéÂú®ËøõË°åÁÆóÊúØËøêÁÆó""" a b c d e0 0 2 3.0 3.0 4.01 7 9 6.0 7.0 8.02 14 16 9.0 11.0 12.0"""# rË°®Á§∫ÁøªzËΩ¨ÂèÇÊï∞print(data1.rdiv(1)) # 1/data1print(data1.div(1)) # data1 /1""" a b c0 inf 1.000000 0.5001 0.333333 0.250000 0.2002 0.166667 0.142857 0.125 a b c0 0.0 1.0 2.01 3.0 4.0 5.02 6.0 7.0 8.0"""]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>pandas</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑„ÄëP1025Êï∞ÁöÑÂàíÂàÜ]]></title>
    <url>%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1025%E6%95%B0%E7%9A%84%E5%88%92%E5%88%86%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Â∞ÜÊï¥Êï∞nÂàÜÊàêk‰ªΩÔºå‰∏îÊØè‰ªΩ‰∏çËÉΩ‰∏∫Á©∫Ôºå‰ªªÊÑè‰∏§‰∏™ÊñπÊ°à‰∏çÁõ∏Âêå(‰∏çËÄÉËôëÈ°∫Â∫è)„ÄÇ ‰æãÂ¶ÇÔºön=7Ôºåk=3Ôºå‰∏ãÈù¢‰∏âÁßçÂàÜÊ≥ïË¢´ËÆ§‰∏∫ÊòØÁõ∏ÂêåÁöÑ„ÄÇ 1,1,5 1,5,1 5,1,1 ÈóÆÊúâÂ§öÂ∞ëÁßç‰∏çÂêåÁöÑÂàÜÊ≥ï„ÄÇ ËæìÂÖ•Ê†ºÂºèn,k (6&lt;n‚â§200Ôºå2‚â§k‚â§62 2‚â§k‚â§6) ËæìÂá∫Ê†ºÂºè1‰∏™Êï¥Êï∞ÔºåÂç≥‰∏çÂêåÁöÑÂàÜÊ≥ï„ÄÇ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 17 3 ËæìÂá∫ #1 14 ËØ¥Êòé/ÊèêÁ§∫ÂõõÁßçÂàÜÊ≥ï‰∏∫Ôºö 1,1,5 1,2,4 1,3,3 2,2,3 ÊÄùË∑ØÔºö dfsÔºåÂâ™Êûù dp ÊääÈóÆÈ¢òËΩ¨Êç¢‰∏∫n‰∏™ÁêÉÊîæÂú®k‰∏™ÁØÆÂ≠êÁöÑÊÉÖÂÜµÔºåÊâÄÊúâÁöÑÊÉÖÂÜµÂèØ‰ª•ÂàÜ‰∏∫‰∏§ÁßçÔºö ÊâÄÊúâÁöÑÁØÆÂ≠êÈÉΩÊúâ‰∏Ä‰∏™ÁêÉÂèä‰ª•‰∏ä Ëá≥Â∞ëÊúâ‰∏Ä‰∏™ÁØÆÂ≠êÂè™Êúâ‰∏Ä‰∏™ÁêÉ Âõ†Ê≠§ÔºåÂ¶ÇÊûúdp[n][k] Ë°®Á§∫Â∞Ün‰∏™Â∞èÁêÉÊîæÂú®k‰∏™ÁØÆÂ≠êÁöÑ‰∏çÂêåÊîæÊ≥ïÔºöÂàôdp[n][k] = dp[n-k][k] + dp[n-1][k-1]ÔºåÁÑ∂ÂêéÈÄíÊé®Ëµ∑ÂßãÊù°‰ª∂ÂΩìÂè™Êúâ‰∏Ä‰∏™ÁØÆÂ≠êÁöÑÊó∂ÂÄôÔºåÂè™Êúâ‰∏Ä‰∏™ÊñπÊ≥ïÔºåÊâÄ‰ª•dp[n][1] = 1 AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#include &lt;iostream&gt;using namespace std;/*int res = 0;void dfs(int times, int last, int sum) //sumË°®Á§∫Ââ©‰∏ãÁöÑÊï∞&#123; if (times == 1) &#123; res++; return; &#125; for (int i = last; i &lt;= sum / times; i++) dfs(times - 1, i, sum - i);&#125;int main()&#123; int n, k; cin &gt;&gt; n &gt;&gt; k; dfs(k, 1, n); cout &lt;&lt; res &lt;&lt; endl; //system("pause"); return 0;&#125;//ÈÄíÊé®Ê≥ïint solu(int n, int k)&#123; if (n &lt; k) return 0; if (n == k) return 1; if (k == 1) return 1; return solu(n - 1, k - 1) + solu(n - k, k);&#125;int main()&#123; int n, k; cin &gt;&gt; n &gt;&gt; k; int res = solu(n, k); cout &lt;&lt; res &lt;&lt; endl; //system("pause"); return 0;&#125;*///dpÊ≥ïint dp[300][10];int main()&#123; int n, k; cin &gt;&gt; n &gt;&gt; k; //È¢ÑÂ§ÑÁêÜ for (int i = 0; i &lt;= 300; i++) &#123; dp[i][1] = 1; //dp[i][0] = 0; &#125; for (int i =1;i &lt;=n; i++) for (int j = 1; j &lt;= k &amp;&amp; j&lt;=i; j++) &#123; dp[i][j] = dp[i-j][j] + dp[i-1][j-1]; &#125; cout &lt;&lt; dp[n][k] &lt;&lt; endl;// system("pause"); return 0;&#125; ÊÄªÁªì dpÂ§™Èöæ‰∫Ü]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>ÈÄíÊé®‰∏éÈÄíÂΩí</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>ÈÄíÊé®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-pandas-Â∏∏Áî®Êï∞ÊçÆÂØπË±°]]></title>
    <url>%2Fpython-pandas-%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[pandasÂ∏∏Áî®Êï∞ÊçÆÂØπË±°Series Ë°®Á§∫‰∏ÄÁª¥Êï∞ÊçÆ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108import pandas as pdimport numpy as np data = np.array([1,2,3])data1 = pd.Series(data=data,index=['guangzhou','shenzhen','shanghai'])print(data1)"""guangzhou 1shenzhen 2shanghai 3dtype: int64"""data2 = pd.Series(data=data)print(data2)"""0 11 22 3dtype: int64"""# dataÂèÇÊï∞‰∏∫‰∏Ä‰∏™Êï∞Â≠óÊàñÂ≠óÁ¨¶‰∏≤data = 100data3 = pd.Series(data=data,index=['a','b'])print(data3)"""a 100b 100dtype: int64"""data = 'chenxiaojian'data4 = pd.Series(data=data,index=[1,2,3])print(data4)"""1 chenxiaojian2 chenxiaojian3 chenxiaojiandtype: object"""# dataÊòØÂ≠óÂÖ∏# SeriesÂØπË±°ÁöÑÊ†áÁ≠æÁ¥¢ÂºïÁî±Â≠óÂÖ∏ÁöÑKeyÊù•ÂÖÖ‰ªªdata = &#123;"chen":111,'xiao':222,'jian':333&#125;data5 = pd.Series(data=data)print(data5)"""chen 111xiao 222jian 333dtype: int64"""data6 = pd.Series(data=data,index=['chen','jian','xiao'])print(data6)"""chen 111jian 333xiao 222dtype: int64"""# ÊÄªÁªì:‰πüÂç≥ÊòØÂ≠óÂÖ∏Êú¨Êù•ÊòØÊó†Â∫èÁöÑ,‰ΩÜÊòØindexÂèØ‰ª•ÊåáÂÆöÈ°∫Â∫è,‰ΩÜÊòØindexÁöÑÂèÇÊï∞ÂøÖÈ°ªË∑üÂ≠óÂÖ∏ÁöÑkeyÂåπÈÖç# SeriesÁöÑÂØπË±°Â±ûÊÄßprint(data6.index)# Index(['chen', 'jian', 'xiao'], dtype='object')# print(data6.values)# [111 333 222]# ÈáçÊñ∞ËÆæÁΩÆÊ†áÁ≠æÁ¥¢Âºïdata6.index = ['CHEN','JIAN','XIAO']print(data6)"""CHEN 111JIAN 333XIAO 222dtype: int64"""# SeriesÂØπË±°ÁöÑnameÂ±ûÊÄßdata6.name='ÊàëÂè™ÊµãËØï‰∏Ä‰∏ã'print(data6)"""CHEN 111JIAN 333XIAO 222Name: ÊàëÂè™ÊµãËØï‰∏Ä‰∏ã, dtype: int64"""# Ê†áÁ≠æÁ¥¢ÂºïÁöÑnamedata6.index.name='ÊàëÊòØ‰æøÁ≠æÁ¥¢ÂºïÁöÑName'print(data6)"""ÊàëÊòØ‰æøÁ≠æÁ¥¢ÂºïÁöÑNameCHEN 111JIAN 333XIAO 222Name: ÊàëÂè™ÊµãËØï‰∏Ä‰∏ã, dtype: int64""" DataFrame Â≠òÂÇ®‰∫åÁª¥Êï∞ÊçÆ DataFrameÂØπË±°ÁöÑÂàõÂª∫ Êï∞ÁªÑÂàõÂª∫DataFrame ÂµåÂ•óÂ≠óÂÖ∏ÂàõÂª∫DataFrame 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130import numpy as npimport pandas as pd# Êõ¥Êñ∞pandas ---== pip install --upgrade pandas# DataFrameÂ≠òÊîæ‰∫åÂÖÉÊï∞ÊçÆ# Êï∞ÁªÑÂàõÂª∫DataFramearray_2 = np.arange(10, 20).reshape(5, 2)data = pd.DataFrame(data=array_2, columns=[1, 2], index=[2, 3, 4, 5, 6])# ËÆæÁΩÆÈáåÂàóÂè∑# indexË°®Á§∫Ë°åÁ¥¢ÂºïÊ†áÁ≠æ,columnsË°®Á§∫ÂàóÁ¥¢ÂºïÊ†áÁ≠æprint(data)""" 1 22 10 113 12 134 14 155 16 176 18 19"""# Â≠óÂÖ∏‰Ωú‰∏∫datadata_dict = &#123;"city": ['beijing', 'huabei', 'hahha'], "marks": [1, 2, 3]&#125;data = pd.DataFrame(data=data_dict)print(data)""" city marks0 beijing 11 huabei 22 hahha 3"""# ÊÄªÁªì:Â≠óÂÖ∏ÁöÑkeyÂÖÖÂΩì‰∫ÜÂàóÁöÑÊ†áÁ≠æÁ¥¢Âºï# Êï∞ÊçÆÊ†ºÂºèËΩ¨Êç¢# Â≠óÂÖ∏ËΩ¨Êç¢‰∏∫DataFramedict_data = &#123;"gdp": [111, 222, 333], "population": [999, 7777, 8888]&#125;dict_dataframe = pd.DataFrame.from_dict(dict_data)print(dict_dataframe)# ÊåáÂÆöÂ≠óÂÖ∏ÁöÑKey‰Ωú‰∏∫lieÁöÑÊ†áÁ≠æÁ¥¢Âºïdict_dataframe = pd.DataFrame.from_dict(dict_data, orient='columns')print(dict_dataframe)""" gdp population0 111 9991 222 77772 333 8888"""# ÊåáÂÆöÂ≠óÂÖ∏ÁöÑkey‰Ωú‰∏∫Ë°åÁöÑÊ†áÁ≠æÁ¥¢Âºïdict_dataframe = pd.DataFrame.from_dict(dict_data, orient='index')print(dict_dataframe)""" 0 1 2gdp 111 222 333population 999 7777 8888"""# data : &#123;field:dict&#125;# ÂµåÂ•óÂàóË°®data_dict1 = &#123; "gdp": &#123; 'shanghai': 111, 'beijing': 222, 'guangzhou': '333' &#125;, "population": &#123; 'shanghai': 999, 'beijing': 888, 'guangzhou': 777 &#125;&#125;dict_dataframe_1 = pd.DataFrame.from_dict(data_dict1)print(dict_dataframe_1)""" gdp populationbeijing 222 888guangzhou 333 777shanghai 111 999"""# Â¶ÇÊûúÂµåÂ•ó‰∏≠ÁöÑÂàóË°®ÁöÑKey‰∏çÁõ∏Á≠âÁöÑËØùÂ∞±‰ºöÂ¶Ç‰∏ã""" gdp populationbeijing 222 888.0guanghzou 333 NaNguangzhou NaN 777.0shanghai 111 999.0"""dict_dataframe_2 = pd.DataFrame.from_dict(data_dict1, orient='index')print(dict_dataframe_2)""" shanghai beijing guangzhougdp 111 222 333population 999 888 777"""items = data_dict1.items()# ËøîÂõûÂ≠óÂÖ∏ÁöÑkey-values‰ª•ÂÖÉÁ•ñÁöÑÂΩ¢Âºèprint(items)# items_dataframe = pd.DataFrame.from_items(items)# ‰∏çÊé®Ëçê‰ΩøÁî®from_itemsitems_dataframe = pd.DataFrame.from_dict(dict(items))print(items_dataframe)data = np.arange(10).reshape(5, 2)index = ['‰∏äÊµ∑', 'Ê∑±Âú≥', 'ÂπøÂ∑û', 'Áè†Êµ∑', 'Ê±ïÂ§¥']columns = ['‰∫∫Âè£', 'GDP']gp = pd.DataFrame(data=data, index=index, columns=columns)# print(gp)gp.index.name = 'ÂüéÂ∏ÇÂêç'gp.columns.name = 'ÂèÇÊï∞'print(gp)"""ÂèÇÊï∞ ‰∫∫Âè£ GDPÂüéÂ∏ÇÂêç ‰∏äÊµ∑ 0 1Ê∑±Âú≥ 2 3ÂπøÂ∑û 4 5Áè†Êµ∑ 6 7Ê±ïÂ§¥ 8 9"""gp.to_csv("gp.csv",sep='|',columns=['‰∫∫Âè£'],header=1,index=0)# delimiter" must be a 1-character string ÂàÜÈöîÁ¨¶ÂøÖÈ°ªÊòØ‰∏Ä‰∏™Â≠óÁ¨¶# headerË°®Á§∫ÊòØÂê¶ÊòæÁ§∫ÂàóÂêç# columnsË°®Á§∫Ë¶ÅÊòæÁ§∫ÁöÑÂàó# indexË°®Á§∫ÊòØÂê¶ÊòæÁ§∫Á¥¢ÂºïÂàó# gp.DataFrame.to_csv() ‰∏âÁª¥Êï∞ÊçÆÂØπË±°ÔºöPanelÂú®0.25.0‰∏≠Ë¢´ÂéªÈô§‰∫Ü‚Ä¶. IndexÂØπË±°1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071import numpy as np import pandas as pd # s = pd.Series(np.random.randn)print(np.random.randn(5))# ‰ªéÊ†áÂáÜÊ≠£Â§™ÂàÜÂ∏É‰∏≠ËøîÂõûÊ†∑Êú¨s = pd.Series(np.random.randn(5))print(type(s))print(s)print(s.index)print(s.index[0])print(s.index[:3])"""[ 0.62266366 0.72416665 -0.86043632 -0.56794272 0.13975185]&lt;class 'pandas.core.series.Series'&gt;0 -1.2918721 0.7696222 -0.0599723 0.1284934 0.601371dtype: float64RangeIndex(start=0, stop=5, step=1)"""# ÊÄªÁªì:IndexÂØπË±°ÊúâÁÇπÁ±ª‰ºº‰∫éÊï∞ÁªÑ,ÂèØ‰ª•Áõ¥Êé•Á¥¢ÂºïËÆøÈóÆ,ÊàñËÄÖÂÅöÊï∞ÁªÑÂàáÁâá,‰ΩÜÊòØ‰∏éÊï∞ÁªÑÁöÑÂîØ‰∏Ä‰∏çÂêåÁÇπÂ∞±ÊòØËøô‰∏™ÂØπË±°ÊòØ‰∏çÂèØÂèòÁöÑ# s.index[0] = 999 TypeError: Index does not support mutable operations# ÈÄöËøáÁ±ªÂàõÂª∫IndexÂØπË±°list_index = ['a','b','c','a']index = pd.Index(list_index)s = pd.Series([1,2,3,4],index=index)print(s)"""a 1b 2c 3a 4dtype: int64"""print(s['a'])"""a 1a 4dtype: int64"""# ÂØπ‰∫éIndexÂØπË±°,ËøòÂèØ‰ª•Êää‰ªñÁúã‰Ωú‰∏∫‰∏Ä‰∏™ÈõÜÂêà,‰ΩÜÊòØ‰∏çÈúÄË¶ÅÊª°Ë∂≥ÂîØ‰∏ÄÊÄßindexa = pd.Index([1,2,3,4])indexb = pd.Index([3,4,5,6])# ÈõÜÂêàÁöÑËøêÁÆóprint(indexa | indexb)print(indexa &amp; indexb)print(indexa ^ indexb)"""Int64Index([1, 2, 3, 4, 5, 6], dtype='int64')Int64Index([3, 4], dtype='int64')Int64Index([1, 2, 5, 6], dtype='int64')"""# ÁâπÊÆäÊÉÖÂÜµindexc = pd.Index([1,2,1,5])print(indexc &amp; indexa)# Int64Index([1, 2, 1], dtype='int64')# # ÁªìÊûú‰∏çÊòØÂÉèÊàë‰ª¨ÊÉ≥Ë±°ÁöÑÈõÜÂêàÁöÑËßÑÂàô, MultIindexÂØπË±°1234567891011121314151617181920212223242526272829303132333435363738import numpy as np import pandas as pdcities_index = ( ("china","beijing"),('china','shanghai'),('china','hongkong'),('usa','chicagp'),('usa','newyork'))cities = pd.MultiIndex.from_tuples(cities_index)# print(cities)data = pd.Series([1,2,3,4,5],index=cities)print(data)"""china beijing 1 shanghai 2 hongkong 3usa chicagp 4 newyork 5dtype: int64Êåâ‰ªªÊÑèÈîÆÁªßÁª≠..."""print(data.unstack())""" beijing chicagp hongkong newyork shanghaichina 1.0 NaN 3.0 NaN 2.0usa NaN 4.0 NaN 5.0 NaN"""print(data.unstack().stack())"""china beijing 1.0 hongkong 3.0 shanghai 2.0usa chicagp 4.0 newyork 5.0dtype: float64"""]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>pandas</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-numpyÂü∫Á°Ä04]]></title>
    <url>%2Fpython-numpy%E5%9F%BA%E7%A1%8004%2F</url>
    <content type="text"><![CDATA[Áü©ÈòµÂàõÂª∫Áü©ÈòµÁöÑÊñπÂºè Â≠óÁ¨¶‰∏≤‰Ωú‰∏∫ÂèÇÊï∞ Áü©Èòµ‰Ωú‰∏∫ÂèÇÊï∞ Êï∞ÁªÑ‰Ωú‰∏∫ÂèÇÊï∞ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465import numpy as np a = np.mat([1,2,3])print(a)print(a.shape)"""[[1 2 3]](1, 3)"""# ‰∏Ä‰∏™ÊòØÁü©Èòµ,‰∏Ä‰∏™Êï∞ÁªÑa = np.array([1,2,3])print(a)print(a.shape)"""[1 2 3](3,)"""# ÂàõÂª∫Áü©Èòµ# Â≠óÁ¨¶‰∏≤‰Ωú‰∏∫ÂèÇÊï∞ÂàõÂª∫Áü©Èòµb = np.mat('1 2 3; 4 5 6; 7 8 9')print(b)print(b.shape)"""[[1 2 3] [4 5 6] [7 8 9]](3, 3)"""# Êï∞ÁªÑ‰Ωú‰∏∫ÂèÇÊï∞ÂàõÂª∫Áü©Èòµc = np.mat(a)print(c)print(c.shape)"""[[1 2 3]](1, 3)"""m1 = np.eye(2) #ÂàõÂª∫Êï∞ÁªÑ,ÂØπËßíÁ∫øÁöÑÂÄº‰∏∫1print(type(m1))m1 = np.mat(m1) #ËΩ¨Êç¢‰∏∫Êï∞ÁªÑprint(type(m1)) """&lt;class 'numpy.ndarray'&gt;&lt;class 'numpy.matrixlib.defmatrix.matrix'&gt;"""m2 = 2 * m1print(m2)# ‰ª•Áü©Èòµ‰Ωú‰∏∫ÂèÇÊï∞ÂàõÂª∫Áü©Èòµd = np.bmat('m1 m2; m1 m2')print(d)"""[[1. 0. 2. 0.] [0. 1. 0. 2.] [1. 0. 2. 0.] [0. 1. 0. 2.]]""" Áü©ÈòµÂü∫Êú¨Êìç‰Ωú Áõ∏‰πò ËΩ¨ÁΩÆÁü©Èòµ ÈÄÜÁü©Èòµ 123456789101112131415161718192021222324252627282930313233343536373839import numpy as np a = np.mat('1 2 3; 4 5 6; 7 8 9')print(a)#Áü©ÈòµÁöÑËΩ¨ÁΩÆprint(a.T)print(a.getT())"""[[1 2 3] [4 5 6] [7 8 9]][[1 4 7] [2 5 8] [3 6 9]][[1 4 7] [2 5 8] [3 6 9]]"""# ÈÄÜÁü©Èòµprint(a.I)"""[[ 3.15251974e+15 -6.30503948e+15 3.15251974e+15] [-6.30503948e+15 1.26100790e+16 -6.30503948e+15] [ 3.15251974e+15 -6.30503948e+15 3.15251974e+15]]"""# Âçï‰ΩçÁü©Èòµa = np.mat(np.eye(4))print(a)"""[[1. 0. 0. 0.] [0. 1. 0. 0.] [0. 0. 1. 0.] [0. 0. 0. 1.]]""" Áü¢ÈáèËøêÁÆóÊ†áÈáèÁßØ‰πüÁß∞‰∏∫Êï∞ÈáèÁßØÔºåÁÇπÁßØÔºàDot Product)ÔºåÂÜÖÁßØÔºàInner ProductÔºâ pythonÁöÑnumpyÊèê‰æõÁöÑÂáΩÊï∞np.dot()Âíånp.inner() numpy.dot() If both a and b are 1-D arrays, it is inner product of vectors (without complex conjugation). If both a and b are 2-D arrays, it is matrix multiplication, but using matmul or a @ b is preferred. If either a or b is 0-D (scalar), it is equivalent to multiply and using numpy.multiply(a, b) or a * b is preferred. If a is an N-D array and b is a 1-D array, it is a sum product over the last axis of a and b. If a is an N-D array and b is an M-D array (where M&gt;=2), it is a sum product over the last axis of a and the second-to-last axis of b: ÁøªËØëÔºö ‰∏§‰∏™Êï∞ÁªÑÁöÑÁÇπÁßØ„ÄÇ ÂÖ∑‰ΩìÊù•ËØ¥ÔºåÂ¶ÇÊûúaÂíåbÈÉΩÊòØ‰∏ÄÁª¥Êï∞ÁªÑÔºåÂàôÂÆÉÊòØÂêëÈáèÁöÑÂÜÖÁßØÔºàÊó†Â§çÂÖ±ËΩ≠Ôºâ„ÄÇ Â¶ÇÊûúaÂíåbÂùá‰∏∫‰∫åÁª¥Êï∞ÁªÑÔºåÂàô‰∏∫Áü©Èòµ‰πòÊ≥ïÔºå‰ΩÜÊúÄÂ•Ω‰ΩøÁî®matmulÊàña @ b„ÄÇ Â¶ÇÊûúaÊàñb‰∏∫0-DÔºàÊ†áÈáèÔºâÔºåÂàôÁ≠â‰∫é‰πò‰ª•numpy.multiplyÔºàaÔºåbÔºâÊàña * b‰∏∫È¶ñÈÄâ„ÄÇ Â¶ÇÊûúaÊòØN-DÊï∞ÁªÑÔºåbÊòØ1-DÊï∞ÁªÑÔºåÂàôÂÆÉÊòØaÂíåbÁöÑÊúÄÂêé‰∏Ä‰∏™ËΩ¥‰∏äÁöÑÊÄªÂíå„ÄÇ Â¶ÇÊûúaÊòØ‰∏Ä‰∏™N-DÊï∞ÁªÑËÄåbÊòØ‰∏Ä‰∏™M-DÊï∞ÁªÑÔºàÂÖ∂‰∏≠M&gt; = 2ÔºâÔºåÂàôÂÆÉÊòØaÁöÑÊúÄÂêé‰∏Ä‰∏™ËΩ¥ÂíåbÁöÑÂÄíÊï∞Á¨¨‰∫å‰∏™ËΩ¥ÁöÑÂíåÁßØÔºö numpy.inner() Ordinary inner product of vectors for 1-D arrays (without complex conjugation), in higher dimensions a sum product over the last axes. ÁøªËØëÔºö ‰∏ÄÁª¥Êï∞ÁªÑÁöÑÂêëÈáèÁöÑÊôÆÈÄöÂÜÖÁßØÔºàÊó†Â§çÂÖ±ËΩ≠ÔºâÔºåÂú®ËæÉÈ´òÁª¥Â∫¶‰∏äÔºåÊúÄÂêé‰∏Ä‰∏™ËΩ¥‰∏äÁöÑÂíåÁßØ„ÄÇ ÂÅáËÆæÊúâ‰∏§‰∏™Áü¢Èáè$\vec a = [a_1,a_2,a_3‚Ä¶a_n]$Ôºå$\vec b = [b_1,b_2,b_3‚Ä¶b_n]$ÔºåÊ†áÈáèÁßØÁöÑÂÆö‰πâÂ¶Ç‰∏ã$$\vec a \cdot \vec b = \sum_1^na_ib_i = a_1b_1 + a_2b_2+‚Ä¶+a_nb_n$$ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566# Ê†áÈáèÁßØ# ‰∏ÄÁª¥ÂêëÈáèa = np.array([1,2,3])b= np.array([4,5,6])print(np.dot(a,b))# 32print(np.inner(a,b))# 32# ÊÄªÁªì:ÂØπ‰∫é‰∏ÄÁª¥ÂêëÈáè,Ëøô‰∏§‰∏™ÂáΩÊï∞ÁöÑ‰ΩúÁî®Áõ∏Âêå# ‰∫åÁª¥ÂêëÈáèc = np.array([[1,2],[3,4]])d = np.array([[5,6],[7,8]])print(np.dot(c,d)) # Á±ª‰ººÁü©ÈòµÁöÑ‰πòÊ≥ïËøêÁÆó"""[[19 22] [43 50]]"""print(np.inner(c,d))# Âú®ËæÉÈ´òÁª¥Â∫¶‰∏äÁöÑÂíåÁßØ# 1*5 + 2*6=17"""[[17 23] [39 53]]"""##‰∏âÁª¥Êï∞ÁªÑa = np.arange(24).reshape((2,3,4))print(a)b = np.arange(4)print(b)"""[[[ 0 1 2 3] [ 4 5 6 7] [ 8 9 10 11]] [[12 13 14 15] [16 17 18 19] [20 21 22 23]]][0 1 2 3]"""print(np.inner(a,b)) # Ordinary inner product of vectors for 1-D arrays (without complex conjugation), in higher dimensions a sum product over the last axes."""‰∏≠ÊñáÔºàÁÆÄ‰ΩìÔºâ‰∏ÄÁª¥Êï∞ÁªÑÁöÑÂêëÈáèÁöÑÊôÆÈÄöÂÜÖÁßØÔºàÊó†Â§çÂÖ±ËΩ≠ÔºâÔºåÂú®ËæÉÈ´òÁª¥Â∫¶‰∏äÔºåÊúÄÂêé‰∏Ä‰∏™ËΩ¥‰∏äÁöÑÂíåÁßØ[[ 14 38 62] [ 86 110 134]] ==&gt; 0*0 + 1*1 + 2*2 + 3* 3 =14"""print(np.dot(a,b))# Ê†πÊçÆÂÆòÊñπÊñáÊ°£ÔºöÁªìÊûúÊòØ3Áª¥Êï∞ÁªÑÁöÑÊúÄÂêé‰∏ÄÁª¥Âíå1Áª¥Êï∞ÁªÑÁöÑÊúÄÂêé‰∏ÄÁª¥ÁöÑÂíåÁßØ"""[[ 14 38 62] [ 86 110 134]]""" Áü¢ÈáèÁßØ vector ProductÔºåÂèàÂèØ‰ª•Áß∞‰∏∫ÂèâÁßØÔºàcross ProductÔºâÔºåÂ§ñÁßØÔºàouter ProductÔºâÔºåÂÖ∂ËøêÁÆóÁªìÊûúÊòØ‰∏Ä‰∏™Áü¢ÈáèÔºå‰∏îÁü¢ÈáèÁöÑÊñπÂêë‰∏éÂéüÊù•ÁöÑ‰∏§‰∏™Áü¢ÈáèÊâÄÊûÑÊàêÁöÑÂπ≥Èù¢ÂûÇÁõ¥ ‰ª£Êï∞ÁêÜËß£‰ª•‰∏âÁª¥ÂùêÊ†áÁ≥ª‰∏≠ÁöÑ‰∏§‰∏™Áü¢Èáè‰∏∫‰æãÔºö$ \vec a=a_x\vec i+a_y\vec j + a_z\vec k$ÔºåÂíå$ \vec b = b_x\vec i + b_y\vec j + b_z\vec k$ÔºåÂàô(Êï∞Â≠¶ÂÖ¨ÂºèÁü©ÈòµÊç¢Ë°åÊòØ3‰∏™‚Äù\\\‚Äú)$$\vec a \times \vec b = \begin{bmatrix} \vec i &amp; \vec j &amp; \vec k \\ a_x &amp; a_y &amp; a_z \\ b_x &amp; b_y &amp; b_z \end{bmatrix} = (a_yb_z - a_zb_y)\vec i + (a_zb_x-a_xb_z)\vec j + (a_xb_y-a_yb_x)\vec k$$Ê≥®ÊÑèÔºö$\vec jÁöÑÁ≥ªÊï∞ÊòØa_zb_x-a_xb_z$Ôºå Âá†‰ΩïÁêÜËß£Âπ≥Èù¢Áõ¥ËßíÂùêÊ†áÁ≥ªÁöÑ‰∏§‰∏™Áü¢Èáè$\vec a Âíå\vec b$Ôºå‰ªñ‰ª¨ÁöÑÂ§πËßí‰∏∫$\theta$ÔºåÈÇ£‰πàËøô‰∏§‰∏™ÂêëÈáèÁöÑÁü¢ÈáèÁßØÁöÑÂ§ßÂ∞è‰∏∫$\vec a \times \vec b=\mid\vec a \mid \mid \vec b \mid \sin\theta$ numpyÂáΩÊï∞ËÆ°ÁÆóÁü¢ÈáèÁßØnumpy.cross() ÂÆö‰πâÔºöThe cross product of a and b in ‰∏âÁª¥ÂùêÊ†áÁ≥ª is a vector perpendicular to both a and b. If a and b are arrays of vectors, the vectors are defined by the last axis of a and b by default, and these axes can have dimensions 2 or 3. Where the dimension of either a or bis 2, the third component of the input vector is assumed to be zero and the cross product calculated accordingly. In cases where both input vectors have dimension 2, the z-component of the cross product is returned. ÊÄªÁªìÔºöÂêëÈáèÁöÑÂ∞∫ÂØ∏ÂøÖÈ°ª‰∏∫2Êàñ3ÔºåÂ¶ÇÊûúaÊàñbÂêëÈáèÁöÑÂ∞∫ÂØ∏‰∏∫2ÔºåÈÇ£‰πàÊääËøô‰∫õÂêëÈáèÁöÑÁ¨¨‰∏â‰∏™ÂàÜÈáèÂΩìÂÅö0ÔºåÂ¶ÇÊûúaÂíåbÂêëÈáèÁöÑÂ∞∫ÂØ∏ÈÉΩ‰∏∫2ÔºåÈÇ£‰πàËøîÂõûÁ¨¨‰∏â‰∏™ÂàÜÈáè 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475import numpy as np # """a = np.array([1,2,3,4])# ÂêëÈáèÁöÑÂ∞∫ÂØ∏ÂøÖÈ°ª‰∏∫2/3 aÊï∞ÁªÑÁöÑÂ∞∫ÂØ∏‰∏∫4b = np.array([5,6,7])print(np.cross(a,b))error: ValueErrorWhen the dimension of the vector(s) in a and/or b does not equal 2 or 3."""a = np.array([1,2,3])b = np.array([4,5,6])print(np.cross(a,b))# [-3 6 -3]# c = np.array([1,2])d = np.array([3,4])print(np.cross(c,d))# -2# Ê†πÊçÆÂÆòÊñπÊñáÊ°£,ÂΩìÂêëÈáèÁöÑÂ∞∫ÂØ∏‰∏∫2Êó∂,ÂΩìÊääÁ¨¨‰∏â‰∏™ÂàÜÈáèÂΩì‰Ωú0,‰πüÂ∞±ÊòØ[1,2,0]Âíå[3,4,0],ÁÑ∂ÂêéËÆ°ÁÆóÂèâÁßØ,Ê≥®ÊÑè:Â¶ÇÊûúËøô‰∏§‰∏™ÂêëÈáèÁöÑÂ∞∫ÂØ∏ÈÉΩ‰∏∫2,ÂàôËøîÂõûÁ¨¨‰∏â‰∏™ÂàÜÈáèc =np.array([1,2,0])d = np.array([3,4,5])print(np.cross(c,d))# [10 -5 -2]c = np.array([1,2])d = np.array([3,4,5])print(np.cross(c,d))# [10 -5 -2]x = [1,2,3]y = [4,5,6]print(np.cross(x,y))# [-3 6 -3]# Â§öÁª¥ x = np.array([[1,2,3], [4,5,6]])y = np.array([[4,5,6], [1,2,3]])print(np.cross(x, y))"""[[-3 6 -3] [ 3 -6 3]]"""x = np.array([[1,2,3], [4,5,6], [7, 8, 9]])y = np.array([[7, 8, 9], [4,5,6], [1,2,3]])print(np.cross(x, y))"""[[ -6 12 -6] &lt;&lt;== [1 2 3] Âíå[7 8 9]ÂÅöÂèâÁßØ [ 0 0 0] [ 6 -12 6]]"""print(np.cross(x, y, axisa=0, axisb=0)) #ÊîπÂèòÂêëÈáèÁöÑÂÆö‰πâ:axisa=-1Ë°®Á§∫Á¨¨‰∏Ä‰∏™ÂèÇÊï∞ÂêëÈáè‰πüÂç≥ÊòØxÊòØÊ®™ÁöÑË°®Á§∫‰πüÂ∞±ÊòØ[1,2,3],axisa=0Ë°®Á§∫Á´ñÁùÄËØªÂèñ,‰πüÂ∞±ÊòØ[1,4,7] [2,5,6] [3,6,9]# axisb = -1Ë°®Á§∫Ë°®Á§∫Á¨¨‰∫å‰∏™ÂêëÈáèyÊòØÊ®™ÁùÄË°®Á§∫,Âêå‰∏ä"""[[-24 48 -24] &lt;&lt;== [1 4 7]Âíå[7 4 1]ÂÅöÂèâÁßØ [-30 60 -30] [-36 72 -36]]"""print(np.cross(x,y,axisa=0,axisb=-1)) #Á¨¨‰∏Ä‰∏™ÂêëÈáèÁ´ñÁùÄÁúã,Á¨¨‰∫å‰∏™ÂêëÈáèÊ®™ÁùÄÁúã"""[[-20 40 -20] [-10 20 -10] [ 0 0 0]]""" np.outer()Ëøô‰∏™ÂáΩÊï∞ÂêçËôΩÁÑ∂ÁúãËµ∑Êù•ÊòØÂ§ñÁßØÔºå‰ΩÜÊòØÂç¥ÊòØ‰∏çÁ≠âÂêå‰∫éÁü¢ÈáèÁßØÁöÑÂà´Áß∞Â§ñÁßØ Given two vectors, a = [a0, a1, ‚Ä¶, aM] and b = [b0, b1, ‚Ä¶, bN], the outer product [1] is: 12345&gt; [[a0*b0 a0*b1 ... a0*bN ]&gt; [a1*b0 .&gt; [ ... .&gt; [aM*b0 aM*bN ]]&gt; 123456789a = [1,2,3]b =[4,5,6]print(np.outer(a,b))"""[[ 4 5 6] [ 8 10 12] [12 15 18]]""" Âº†ÈáèÁßØnumpy.tensordot()ÔºåËøô‰∏™ÂáΩÊï∞Â∞±ÊòØÂèØ‰ª•ÊåáÂÆö‰∏Ä‰∫õÁâπÂÆöÁöÑËΩ¥ËøõË°åÁÇπ‰πò 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import numpy as np a = np.random.randint(0,9,size=(2,4,5)) # random.randint(a,b) ËøîÂõû[a,b)Âå∫Èó¥ÁöÑÊï¥Êï∞print(a)"""[[[8 4 0 8 3] [1 5 2 0 5] [4 3 2 5 5] [4 0 7 1 3]] [[7 8 3 2 0] [8 4 4 2 4] [4 7 8 7 1] [1 5 0 4 3]]]"""b = np.random.randint(0,9,(4,5,2))print(b)"""[[[6 3] [7 5] [4 5] [4 7] [2 4]] [[3 0] [4 8] [7 3] [7 0] [0 4]] [[6 5] [6 2] [5 2] [1 7] [5 7]] [[2 8] [4 8] [6 5] [4 5] [5 0]]]"""print(np.tensordot(a,b,axes=((1,2),(0,1))).shape) #ÂéªÈô§aÁöÑ1ËΩ¥Âíå2ËΩ¥,ÂéªÈô§bÁöÑ0ËΩ¥Âíå1ËΩ¥,ÁÑ∂ÂêéËøõË°åÁÇπ‰πò# (2, 2)]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>numpy</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑„ÄëP1045È∫¶Ê£ÆÊï∞]]></title>
    <url>%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1045%E9%BA%A6%E6%A3%AE%E6%95%B0%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÂΩ¢Â¶Ç2P‚àí12^{P}-12P‚àí1ÁöÑÁ¥†Êï∞Áß∞‰∏∫È∫¶Ê£ÆÊï∞ÔºåËøôÊó∂PPP‰∏ÄÂÆö‰πüÊòØ‰∏™Á¥†Êï∞„ÄÇ‰ΩÜÂèçËøáÊù•‰∏ç‰∏ÄÂÆöÔºåÂç≥Â¶ÇÊûúPPPÊòØ‰∏™Á¥†Êï∞Ôºå2P‚àí12^{P}-12P‚àí1‰∏ç‰∏ÄÂÆö‰πüÊòØÁ¥†Êï∞„ÄÇÂà∞1998Âπ¥Â∫ïÔºå‰∫∫‰ª¨Â∑≤ÊâæÂà∞‰∫Ü37‰∏™È∫¶Ê£ÆÊï∞„ÄÇÊúÄÂ§ßÁöÑ‰∏Ä‰∏™ÊòØP=3021377P=3021377P=3021377ÔºåÂÆÉÊúâ909526‰Ωç„ÄÇÈ∫¶Ê£ÆÊï∞ÊúâËÆ∏Â§öÈáçË¶ÅÂ∫îÁî®ÔºåÂÆÉ‰∏éÂÆåÂÖ®Êï∞ÂØÜÂàáÁõ∏ÂÖ≥„ÄÇ ‰ªªÂä°Ôºö‰ªéÊñá‰ª∂‰∏≠ËæìÂÖ•PPPÔºà1000&lt;P&lt;31000001000&lt;P&lt;31000001000&lt;P&lt;3100000ÔºâÔºåËÆ°ÁÆó2P‚àí12^{P}-12P‚àí1ÁöÑ‰ΩçÊï∞ÂíåÊúÄÂêé500‰ΩçÊï∞Â≠óÔºàÁî®ÂçÅËøõÂà∂È´òÁ≤æÂ∫¶Êï∞Ë°®Á§∫Ôºâ ËæìÂÖ•Ê†ºÂºèÊñá‰ª∂‰∏≠Âè™ÂåÖÂê´‰∏Ä‰∏™Êï¥Êï∞PPPÔºà1000&lt;P&lt;31000001000&lt;P&lt;31000001000&lt;P&lt;3100000Ôºâ ËæìÂá∫Ê†ºÂºèÁ¨¨‰∏ÄË°åÔºöÂçÅËøõÂà∂È´òÁ≤æÂ∫¶Êï∞2P‚àí12^{P}-12P‚àí1ÁöÑ‰ΩçÊï∞„ÄÇ Á¨¨2-11Ë°åÔºöÂçÅËøõÂà∂È´òÁ≤æÂ∫¶Êï∞2P‚àí12^{P}-12P‚àí1ÁöÑÊúÄÂêé500‰ΩçÊï∞Â≠ó„ÄÇÔºàÊØèË°åËæìÂá∫50‰ΩçÔºåÂÖ±ËæìÂá∫10Ë°åÔºå‰∏çË∂≥500‰ΩçÊó∂È´ò‰ΩçË°•0Ôºâ ‰∏çÂøÖÈ™åËØÅ2P‚àí12^{P}-12P‚àí1‰∏éPPPÊòØÂê¶‰∏∫Á¥†Êï∞„ÄÇ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 11279 ËæìÂá∫ #1 123456789101138600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087 ÊÄùË∑ØÔºö ÂàÜ‰∏∫‰∏§‰∏™ÈÉ®ÂàÜÔºåÈ¶ñÂÖàËæìÂá∫‰ΩçÊï∞ÔºåÈ¶ñÂÖàÁü•ÈÅìËøô‰∏™Êï∞ÁöÑÊúÄÂêé‰∏Ä‰∏™Êï∞‰∏çÂèØËÉΩÊØî1Â∞èÔºåÂÖ∂Ê¨°Êàë‰ª¨ÂèØ‰ª•Áü•ÈÅì10^kÁöÑ‰ΩçÊï∞ÊòØk+1‰ΩçÔºåÁÑ∂ÂêéÁî±‰∏ãÂàóÁ≠â‰ª∑ÂÖ¨ÂºèÂèØ‰ª•ÂæóÂà∞Ëøô‰∏™Êï∞ÁöÑ‰ΩçÊï∞ Â∞±ÊòØÂø´ÈÄüÂπÇÁöÑÈ´òÁ≤æÂ∫¶‰πòÊ≥ï $$2^k-1 Á≠â‰ª∑‰∫é (10^{\log_{10}2})^k -1$$ Âø´ÈÄüÂπÇÊ®°Êùø12345678int ans = 1;while (b)&#123; if (b &amp; 1) ans = ans * a; b &gt;&gt; = 1; a = a * a;&#125; AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// P1045 È∫¶Ê£ÆÊï∞.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ#include "pch.h"#include &lt;iostream&gt;#include &lt;cmath&gt;#include &lt;cstring&gt;using namespace std;int res[1005];int a[1005];int temp[1005];void solution(int a[], int b[])&#123; memset(temp, 0, sizeof(temp)); temp[0] = a[0] + b[0]; if (temp[0] &gt;= 500) temp[0] = 500; for (int i = 1; i &lt;= temp[0]; i++) for (int j = 1; j &lt;= temp[0]; j++) &#123; temp[i + j - 1] += a[i] * b[j]; if (temp[i + j - 1] &gt;= 10) &#123; temp[i + j] += temp[i + j - 1] / 10; temp[i + j - 1] = temp[i + j - 1] % 10; &#125; &#125; for (int i = 0; i &lt;= 600; i++) a[i] = temp[i];&#125;int main()&#123; res[0] = res[1] = a[0] = 1; a[1] = 2; int n; cin &gt;&gt; n; cout &lt;&lt; int(log10(2) * n + 1) &lt;&lt; endl; while (n) &#123; if (n &amp; 1) solution(res, a); n &gt;&gt;= 1; solution(a, a); &#125; res[1]--; int times = 0; for (int i = 500; i &gt; 0; i--) &#123; cout &lt;&lt; res[i]; times++; if (times == 50) &#123; cout &lt;&lt; endl; times = 0; &#125; &#125; return 0;&#125; ÊÄªÁªìÔºö Êï∞Â≠¶ÈóÆÈ¢òÔºåÈúÄË¶ÅËøõ‰∏ÄÊ≠•ÁÜüÊÇâÈ´òÁ≤æÂ∫¶ÁÆóÊ≥ïÂíåÂø´ÈÄüÂπÇÁÆóÊ≥ï]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>Êï∞ËÆ∫</category>
      </categories>
      <tags>
        <tag>Âø´ÈÄüÂπÇ</tag>
        <tag>È´òÁ≤æÂ∫¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁΩëÁªúÁà¨Ëô´]]></title>
    <url>%2Fpython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[ËØ∑Ê±ÇÂ§¥ accept:ÊñáÊú¨ÁöÑÊ†ºÂºè accept-coding:ÊñáÊú¨ÁöÑÁºñÁ†ÅÊ†ºÂºè connection:ÈïøÈìæÊé•ÔºåÁü≠ÈìæÊé• cookie:ÂÅöÈ™åËØÅÁî®ÁöÑ hostÔºöÂüüÂêç referer:Ë°®Á§∫‰ªéÂì™‰∏™ÁΩëÈ°µË∑≥ËΩ¨ËøáÊù•ÁöÑ user-agent:ÊµèËßàÂô®ÂíåÁî®Êà∑ÁöÑ‰ø°ÊÅØ]]></content>
      <categories>
        <category>pythonÁΩëÁªúÁà¨Ëô´</category>
      </categories>
      <tags>
        <tag>pythonÁΩëÁªúÁà¨Ëô´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-numpyÂü∫Á°Ä03]]></title>
    <url>%2Fpython-numpy%E5%9F%BA%E7%A1%8003%2F</url>
    <content type="text"><![CDATA[ÁÆÄÂçïÁöÑÁªüËÆ°ÂáΩÊï∞ ÂáΩÊï∞ ËØ¥Êòé mean, average ËÆ°ÁÆóÂπ≥ÂùáÂÄºÔºåÂä†ÊùÉÂπ≥ÂùáÂÄº var ËÆ°ÁÆóÊñπÂ∑Æ std Ê†áÂáÜÂ∑Æ min,max ÊúÄÂ∞èÂÄºÔºåÊúÄÂ§ßÂÄº argmin,argmax ËøîÂõûÊúÄÂ∞èÂÄºÔºåÊúÄÂ§ßÂÄºÁöÑÁ¥¢Âºï ptp ËÆ°ÁÆóÂÖ®Ë∑ùÔºåÂç≥ÊúÄÂ§ßÂÄºÂíåÊúÄÂ∞èÂÄºÁöÑÂ∑Æ percentile ËÆ°ÁÆóÁôæÂàÜ‰ΩçÂú®ÁªüËÆ°ÂØπË±°‰∏≠ÂÄº sum ËÆ°ÁÆóÁªüËÆ°ÂØπË±°ÁöÑÂíå median ËÆ°ÁÆóÁªüËÆ°ÈòüÂΩ¢ÁöÑ‰∏≠ÂÄº ÁîüÊàêÊ≠£ÊÄÅÂàÜÂ∏ÉÊï∞ÊçÆ np.random.normal () Ê†áÂáÜÊ≠£ÊÄÅÂàÜÂ∏ÉÔºönp.random.randn() 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import numpy as np g = np.random.normal(loc=0,scale=1,size=50) # loc:ÊµÆÁÇπÊï∞,ÂàÜÂ∏ÉÁöÑÂπ≥ÂùáÂÄº# scale:ÊµÆÁÇπÊï∞,ÂàÜÂ∏ÉÁöÑÊ†áÂáÜÂ∑Æ# np.random.randn(size) Ë°®Á§∫loc = 0.0,sclae=1.0ÁöÑÊ≠£ÊÄÅÂàÜÂ∏É,Áß∞‰∏∫Ê†áÂáÜÊ≠£ÊÄÅÂàÜÂ∏Éprint(g)g1 = np.random.randn(50)g = (g-g.min()) / 10phy = np.round(((100.1-20) * g + 20),1)g1 = (g1-g1.min()) / 10math = np.round(((100.1-20)*g1 + 20),1)print(np.mean(phy)) #Âπ≥ÂùáÂÄº# 40.924print(np.min(phy), np.max(phy))# 20.0 49.3marks = np.vstack((phy, math))print(marks)"""[[54.7 41. 58.6 33.6 33.8 39.9 31.9 36. 51. 35.8 37.2 47.8 41.1 40.4 46.5 27.8 44.2 46. 48.6 36.4 39.2 37.3 43.8 37.1 45.3 20. 24.3 39.5 41.1 31.2 32.4 28. 46.1 30.8 40.5 43.8 52.6 41.6 40.2 39.7 32.3 45.6 28.6 48.8 39.8 35.9 44.9 23.9 42. 31.2] [47.1 41.5 20. 36.1 34.5 40.7 46.6 43.1 31.4 51.7 31.4 42.7 45.5 27.6 32.4 41.8 47.2 37.2 29.3 24.4 42. 21.3 39.5 41.6 35.3 36.5 39.6 35.6 53.4 40.5 37.3 47.6 37.8 37.9 43.9 54. 33. 50.8 38.7 35.3 29.8 31.2 40.1 56.7 34.1 51.6 34.9 33.9 45.4 39.5]]"""# ÂØπÁªüËÆ°ÂáΩÊï∞ÊåáÂÆöËΩ¥ËøõË°åËÆ°ÁÆóprint(np.mean(marks, axis = 1)) #‰ºöÂæóÂà∞phy,mathÁöÑÂπ≥ÂùáÂÄº# [34.24 43.286]print(np.mean(marks,axis=0)) #‰∏§Èó®Â≠¶ÁßëÁöÑÂπ≥ÂùáÂÄº"""[38.15 45.1 42.45 36.95 38.2 38.5 32.8 38.5 38.15 49. 39.4 45.05 41.15 44.05 44.95 47. 37.8 34.45 37.2 32. 39.25 48.4 41. 38. 37.05 38.75 31.5 45. 33.85 35.65 38.7 40.85 32.75 48.55 42.35 46.4 41.85 48.65 44.45 45.35 37.3 39. 45.05 51.9 38.2 39.6 26.7 46.5 40.4 37.15]"""]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>numpy</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python--numpyÂü∫Á°Ä02]]></title>
    <url>%2Fpython-numpy%E5%9F%BA%E7%A1%8002%2F</url>
    <content type="text"><![CDATA[ËøêÁÆóÂíåÈÄöÁî®ÂáΩÊï∞ÁÆóÊúØËøêÁÆó ‰∏§‰∏™Êï∞ÁªÑÁöÑshapeÁõ∏ÂêåÊó∂ÔºåÂèØ‰ª•ËøõË°åÁÆóÊúØËøêÁÆóÔºå‰ΩÜÊòØnumpy‰∏≠Â≠òÂú®‚ÄùÂπøÊí≠‚ÄúÁöÑÊú∫Âà∂ÔºåÊüê‰∫õÁâπÊÆäÊÉÖÂÜµ‰πüÂèØ‰ª•ËøõË°åËøêÁÆó 12345678910111213141516171819202122232425262728293031import numpy as npdata = np.arange(10).reshape(2, 5)print(data)# [[0 1 2 3 4]# [5 6 7 8 9]]#Êï∞ÁªÑÊîØÊåÅÁÆóÊúØËøêÁÆóÔºåÂâçÊèêÊòØËøô‰∏§‰∏™Êï∞ÁªÑÁöÑÂΩ¢Áä∂Áõ∏ÂêåÔºå‰ΩÜÊòØ‰πüÊòØÂ≠òÂú®ÁâπÊÆäÊÉÖÂÜµ data1 = data * 3print(data1-data)# [[ 0 2 4 6 8]# [10 12 14 16 18]]print(data1 + data)# [[ 0 4 8 12 16]# [20 24 28 32 36]]print(data1 * data)# [[ 0 3 12 27 48]# [ 75 108 147 192 243]]data += 1print(data1 / data)# [[0. 1.5 2. 2.25 2.4 ]# [2.5 2.57142857 2.625 2.66666667 2.7 ]] ÁâπÊÆäÁöÑÂπøÊí≠Êú∫Âà∂Ôºö ÂΩì‰∏§‰∏™Êï∞ÁªÑÁöÑÁª¥Êï∞Áõ∏ÂêåÊó∂ÔºåËøõË°åÂπøÊí≠ÁöÑAÊï∞ÁªÑÂè™ËÉΩÊúâ‰∏Ä‰∏™ËΩ¥‰∏äÁöÑÂÖÉÁ¥†‰∏™Êï∞‰∏éBÊï∞ÁªÑ‰∏ä‰∏çÂêåÔºà‰æãÂ¶ÇÔºöÔºà1,2,3ÔºâÂíåÔºà1,2,3Ôºâ ÊàñËÄÖÔºà1,2,3ÔºâÂíåÔºà1,1,3Ôºâ ÊàñËÄÖÔºà1,2,3ÔºâÂíåÔºà1,2,1ÔºâÔºâÔºåÂπ∂‰∏îÈÇ£‰∏™‰∏çÂêåÁöÑËΩ¥‰∏äÁöÑÂÖÉÁ¥†‰∏™Êï∞ÂøÖÈ°ª‰∏∫1 ÂØπ‰∫é‰∏çÂêåÁª¥Êï∞ÁöÑÊï∞ÁªÑÔºåÊÉÖÂÜµÊúâ‰∫õÂ§çÊùÇÔºåÂ§ßËá¥‰∏äÊòØÁúãÂ∞æÁª¥Â∫¶ÔºåÂ¶ÇÊûú‰ªñ‰ª¨Áõ∏Á≠âÊàñËÄÖÂÖ∂‰∏≠‰∏Ä‰∏™‰∏∫1Ôºå‰æãÂ¶Ç (2,3,4)ÂíåÔºà3,4Ôºâ‰ªñ‰ª¨ÁöÑÂ∞æÁª¥Â∫¶Áõ∏ÂêåÔºåÂèØ‰ª•ËøõË°åÂπøÊí≠ Ôºà2,3,4ÔºâÂíåÔºà1ÔºåÔºâÊàñËÄÖ Ôºà2,3,4ÔºâÂíåÔºà1,1Ôºâ ÁâπÊÆäÊÉÖÂÜµÔºö‰∏çÁü•ÈÅìÊÄé‰πàËß£ÈáäÔºà2,3,4ÔºâÂíåÔºà3,1ÔºâÂèØ‰ª•ËøõË°åÂπøÊí≠Ôºå‰ΩÜÊòØÔºà2,3,4ÔºâÂíåÔºà5,1Ôºâ‰∏çÂèØ‰ª•ÔºåÈÄöËøáËøô‰∏™‰æãÂ≠êÔºåÊàë‰ª¨‰ªéÂÆòÊñπÊñáÊ°£Êü•ÈòÖÂæóÊù•ÁöÑÁü•ËØÜÊúâÊó∂ÂÄôÊòØÁêÜËß£‰∏ç‰∫ÜÁöÑÔºå‚ÄúÂÖ∂‰∏≠‰∏Ä‰∏™‰∏∫1Âà∞Â∫ïÊåáÁöÑÊòØ‰ªÄ‰πàÔºü=v=!!!‚Äù Ê≠§Â§ñÔºö‰æãÂ¶ÇÔºà2,3,4ÔºâÂíåÔºà3,4ÔºâÔºåÂπøÊí≠Â∞±ÊòØÂ∞ÜÔºà3,4ÔºâÂú®0ËΩ¥‰∏äËøõË°åÊâ©Â±ï Ê≠§Â§ñÔºöÂØπ‰∫é‰∏ÄÁª¥Êï∞ÁªÑÁöÑÂπøÊí≠Ôºå‰æãÂ¶ÇÔºöÔºà2,3ÔºâÂíåÔºà3ÔºåÔºâÔºåÈªòËÆ§Ê≤øÁùÄ0ËΩ¥ËøõË°åÂπøÊí≠ ÊÄª‰πãÔºåÂª∫ËÆÆËøòÊòØÁîªÂõæÔºå(‰æãÂ¶ÇÔºöÂ∞ÜÔºà2,3,4ÔºâÂíåÔºà3,1ÔºâÂÜôÂá∫Êù•Ôºå‰Ω†Â∞±ÂèëÁé∞‰ªñ‰ª¨ÂèØ‰ª•ËøõË°åÂπøÊí≠[ÊªëÁ®Ω])Â∞ÜÊï∞ÊçÆÂÜôÂá∫Êù•Ôºå‰Ω†Â∞±ÂèØ‰ª•ÊòéÁôΩ‰∫ÜÂêßÔºåÂπ∂‰∏îÂ§öÂÅöÂÆûÈ™å. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111data1 = np.array([[1,2,3],[2,3,4]])print(data1.shape) # (2,3)data2 = np.array([[1,2,3]])print(data2.shape) # (1,3)data1_data2 = data1 + data2 # (2,3)Âíå(1,3)print(data1_data2)"""[[2 4 6] [3 5 7]] """data3 = np.array([1])print(data3.shape) # (1,) data1_data3 = data1 + data3 # (2,3)Âíå(1,)print(data1_data3)"""[[2 3 4] [3 4 5]] """data3 = np.array([3])data1_data3 = data1 + data3 # (2,3)Âíå(1,)print(data1_data3) """[[4 5 6] [5 6 7]] """data4 = np.array([10,10,10])print(data4.shape) # (3,)data1_data4 = data1 + data4 # (2,3)Âíå(3,) ‰ΩÜÊòØ(2,3)Âíå(4,)Âç¥‰∏çËÉΩËøõË°åÂπøÊí≠,(2,3)Âíå(2,)‰πü‰∏çË°åprint(data1_data4)"""[[11 12 13] [12 13 14]] """data5 = np.array([[3]])print(data5.shape) #(1,1)data1_data5 = data1 + data5 # (2,3)Âíå(1,1)print(data1_data5)"""[[4 5 6] [5 6 7]] """data6 = np.array([[[1,2,3,4],[5,6,7,8],[9,10,11,12]],[[1,2,3,4],[5,6,7,8],[9,10,11,12]]])print(data6.shape) # (2,3,4)# data7 = np.array([[[1],[2]]])# print(data7.shape) #(1,2,1)data7 = np.arange(8).reshape(2,1,4)print(data7.shape) #(2, 1, 4)data6_data7 = data6 + data7 # (2,3,4)ÂíåÔºà1,2,1ÔºâÊàñËÄÖ (2,3,4)Âíå(2,2,4)ÁöÑÊï∞ÁªÑ‰∏çËÉΩËøõË°åÂπøÊí≠,‰ΩÜÊòØ(2,3,4)Âíå(2,1,4)ËÉΩËøõË°åÂπøÊí≠print(data6_data7)data8 = np.arange(4).reshape(2,2)# data1_data8 = data1 + data8 #(2,3)Âíå(2,2)‰∏çËÉΩËøõË°åÂπøÊí≠# print(data1_data8)data9 = np.arange(1,2,1).reshape(1,1) # (2,3,4)Âíå(1,1)data6_data9 = data6 + data9print(data6_data9)"""[[[ 2 3 4 5] [ 6 7 8 9] [10 11 12 13]] [[ 2 3 4 5] [ 6 7 8 9] [10 11 12 13]]]"""data9 = np.arange(3).reshape(3,1) # (2,3,4)Âíå(3,1)data6_data9 = data6 + data9print(data6_data9)"""ÂéüÊú¨ÁöÑdata6‰∏∫Ôºö[[[1,2,3,4],[5,6,7,8],[9,10,11,12]], [[1,2,3,4],[5,6,7,8],[9,10,11,12] ] ]data9‰∏∫Ôºö [ [0] , [1], [2]]ÂπøÊí≠ÂêéÔºö [[[0,0,0,0],[1,1,1,1],[2,2,2,2]], [[0,0,0,0],[1,1,1,1],[2,2,2,2]]][[[ 1 2 3 4] [ 6 7 8 9] [11 12 13 14]] [[ 1 2 3 4] [ 6 7 8 9] [11 12 13 14]]]"""data9 = np.arange(5).reshape(5,1) # ‰∏çËÉΩÊâßË°å(2,3,4)Âíå(5,1)data6_data9 = data6 + data9print(data6_data9) ÊØîËæÉËøêÁÆóÂíåÈÄªËæëËøêÁÆó ‰∫ãÂÆû‰∏äÔºåallÔºàÔºâÊìç‰ΩúÂ∞±ÊòØÂØπ‰∏§‰∏™Áü©ÈòµÁöÑÊØîÂØπÁªìÊûúÂÜçÂÅö‰∏ÄÊ¨°‰∏éËøêÁÆóÔºåËÄåanyÂàôÊòØÂÅö‰∏ÄÊ¨°ÊàñËøêÁÆó 123456789101112131415161718192021222324252627282930313233# ÊØîËæÉËøêÁÆóÂíåÈÄªËæëËøêÁÆóprint (np.array([6,5,4]) &gt; np.array([1,5,6])) # ‰∏Ä‰∏ÄÂØπÂ∫îËøõË°åÊØîËæÉÁöÑ# [ True False False]# # ÈÄªËæëËøêÁÆóÁ¨¶print(np.logical_or(np.array([True,False]), np.array([True, True])))# [ True True]a = np.array([3,6,9])b = np.array([4,5,8])print(np.any(a&gt;b) and np.any(a&lt;b)) # Trueprint(np.all(a&gt;b)) #False# ÂáΩÊï∞ÊåáÂÆöÊØîËæÉÁâπÂÆöÁöÑËΩ¥a = np.array([[1],[2]])b = np.array([[3],[1]])print("============")print(np.any(a&gt;b))# Trueprint(np.all(a&gt;b))# False# ÊÄªÁªì:np.any()ÂáΩÊï∞ËøêË°åËøáÁ®ã:È¶ñÂÖàÊï∞ÁªÑaÂíåÊï∞ÁªÑbËøõË°åÊØîËæÉËøêÁÆó,ÁîüÊàê‰∏Ä‰∏™Êñ∞ÁöÑÊï∞ÁªÑ,ÁÑ∂ÂêéÂú®ÂØπËøô‰∏™Êï∞ÁªÑÁöÑÂÖÉÁ¥†ËøõË°åÊàñËøêÁÆó# np.all(),:È¶ñÂÖàÊï∞ÁªÑaÂíåÊï∞ÁªÑbËøõË°åÊØîËæÉËøêÁÆó,ÁîüÊàê‰∏Ä‰∏™Êñ∞ÁöÑÊï∞ÁªÑ,ÁÑ∂ÂêéÂú®ÂØπËøô‰∏™Êï∞ÁªÑÁöÑÂÖÉÁ¥†ËøõË°åandËøêÁÆó ÈÄöÁî®ÂáΩÊï∞Â∏∏Áî®‰∏ÄÂÖÉÂáΩÊï∞ ÂáΩÊï∞ ËØ¥Êòé np.sin,np.cos,np.tan ‰∏âËßíÂáΩÊï∞ np.arcsin,np.arccos,np.arctan Âèç‰∏âËßíÂáΩÊï∞ np.sinh,np.cosh,np.tanh ÂèåÊõ≤‰∏âËßíÂáΩÊï∞ np.arcsinh,np.arccosh,np.arctanh ÂèçÂèåÊõ≤‰∏âËßíÂáΩÊï∞ np.sprt Âπ≥ÊñπÊ†π np.exp ËÆ°ÁÆóËá™ÁÑ∂ÊåáÊï∞ np.log,np.log2,np.log10 ËÆ°ÁÆóÂØπÊï∞Ôºà‰æùÊ¨°‰ª•e,2,10‰∏∫Â∫ïÔºâ Â∏∏Áî®‰∫åÂÖÉÂáΩÊï∞(‰ª•‰∏ãÂáΩÊï∞ÁúÅÁï•np) ÂáΩÊï∞ ËØ¥Êòé np.add, np.substract, np.multiply, np.divide ÁÆóÊúØËøêÁÆóÂáΩÊï∞ equal , not_equal, less , less_equal , greater ,greater_equal ÊØîËæÉËøêÁÆóÂáΩÊï∞ power ÊåáÊï∞ËøêÁÆó remainder ÂæóÂà∞‰ΩôÊï∞ reciprocal ËøîÂõûÂÄíÊï∞Ôºà‰∏çË¶Å‰ΩøÁî®Êï¥Êï∞ÂûãÔºâ real, imag, conj ËøîÂõûÂ§çÊï∞ÁöÑÂÆûÈÉ®ÔºåËôöÈÉ®ÂíåÂÆåÊï¥ÁöÑÂ§çÊï∞ sign, abs ÂæóÂà∞ÂØπË±°Á¨¶Âè∑ÂíåÁªùÂØπÂÄº floor , ceil , rint ÁªìÊûúÂæóÂà∞Êï¥Êï∞ round ÂõõËàç‰∫îÂÖ• Ëá™ÂÆö‰πâÂáΩÊï∞ np.vectorize() np.frompyfunc()‰ΩøÁî®Ëøô‰∏§ÁßçÂáΩÊï∞ÂèØ‰ª•Â∞ÜpythonÂáΩÊï∞ËΩ¨Âåñ‰∏∫ÈÄöÁî®ÂáΩÊï∞ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# Ëá™ÂÆö‰πâÈÄöÁî®ÂáΩÊï∞print(np.random.random_sample((4, 2)))"""[[0.95473307 0.36256674] [0.5869151 0.04447849] [0.25326141 0.23460101] [0.80424673 0.44243846]] """h = (2.2 - 1.4) * np.random.random_sample( (10, )) + 1.4 #Ë°®Á§∫ÈöèÊú∫ÁîüÊàê10‰∏™[1.4,2.2]‰πãÈó¥ÁöÑÊï∞h = np.round(h, 2)print(h)# [2.2 1.58 1.75 1.59 2.05 1.61 1.81 1.84 2.17 2.04]w = (96 - 30) * np.random.random_sample((10, )) + 30w = np.round(w, 2)print(w)# [53.67 82.56 85.12 44.22 41.68 65.2 40.54 82.02 31.38 91.85]## Âà§Êñ≠ÂáΩÊï∞def mni(height, weight): bmi_index = weight / height ** 2 if bmi_index &gt; 18 and bmi_index &lt; 25: return 0 elif bmi_index &lt;= 18 : return -1 else: return 1# ÂàóË°®Ëß£Êûêprint ([mni(h[i],w[i]) for i in range(len(h))])# [0, 0, -1, -1, -1, 0, 1, -1, 0, 1]bmi_ufunc = np.frompyfunc(mni, 2,1) #ËÆ≤pythonÂáΩÊï∞ËΩ¨Âåñ‰∏∫ÈÄöÁî®ÂáΩÊï∞# np.frompyfunc(func,nin,nout):ninË°®Á§∫funcÂáΩÊï∞ÊâÄÊé•Êî∂ÁöÑÂèÇÊï∞‰∏™Êï∞,noutË°®Á§∫funcÂáΩÊï∞ËøîÂõûÁöÑÂØπË±°ÁöÑ‰∏™Êï∞print(bmi_ufunc(h,w))# [0 -1 0 -1 1 1 0 0 0 1]## np.vectorize()Â∞ÜPythonÂáΩÊï∞ËΩ¨Âåñ‰∏∫ÈÄöÁî®ÂáΩÊï∞bmi_ufunc2 = np.vectorize(mni, otypes=[np.float]) #ËÆæÁΩÆËøîÂõûÊï∞ÁªÑÁöÑÂÖÉÁ¥†Á±ªÂûãprint(bmi_ufunc2(h,w))# [ 1. -1. -1. 0. 0. 1. 1. -1. 0. -1.]]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>numpy</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux‰∏≠swapÂàÜÂå∫]]></title>
    <url>%2Flinux%E4%B8%ADswap%E5%88%86%E5%8C%BA%2F</url>
    <content type="text"><![CDATA[swap‰∫§Êç¢ÂàÜÂå∫ SwapÂàÜÂå∫Âú®Á≥ªÁªüÁöÑÁâ©ÁêÜÂÜÖÂ≠ò(ËøôÈáåÂ∫îËØ•ÊòØËøêË°åÂÜÖÂ≠ò)‰∏çÂ§üÁî®ÁöÑÊó∂ÂÄôÔºåÊääÁâ©ÁêÜÂÜÖÂ≠ò‰∏≠ÁöÑ‰∏ÄÈÉ®ÂàÜÁ©∫Èó¥ÈáäÊîæÂá∫Êù•Ôºå‰ª•‰æõÂΩìÂâçËøêË°åÁöÑÁ®ãÂ∫è‰ΩøÁî®„ÄÇÈÇ£‰∫õË¢´ÈáäÊîæÁöÑÁ©∫Èó¥ÂèØËÉΩÊù•Ëá™‰∏Ä‰∫õÂæàÈïøÊó∂Èó¥Ê≤°Êúâ‰ªÄ‰πàÊìç‰ΩúÁöÑÁ®ãÂ∫èÔºåËøô‰∫õË¢´ÈáäÊîæÁöÑÁ©∫Èó¥Ë¢´‰∏¥Êó∂‰øùÂ≠òÂà∞SwapÂàÜÂå∫‰∏≠ÔºåÁ≠âÂà∞ÈÇ£‰∫õÁ®ãÂ∫èË¶ÅËøêË°åÊó∂ÔºåÂÜç‰ªéSwapÂàÜÂå∫‰∏≠ÊÅ¢Â§ç‰øùÂ≠òÁöÑÊï∞ÊçÆÂà∞ÂÜÖÂ≠ò‰∏≠ ‚Äã ‚Äî‚ÄîÁôæÂ∫¶ÁôæÁßë ÂàõÂª∫swapÂàÜÂå∫ ÂàÜÂå∫ÔºöfdiskÂëΩ‰ª§ÔºåËÄåpartedÂëΩ‰ª§Ôºà2TÁ°¨ÁõòÔºâ Â∞ÜÂàÜÂå∫Ê†ºÂºèÂåñ‰∏∫swapÂàÜÂå∫ ‰ΩøÁî®swapÂàÜÂå∫ freeÂëΩ‰ª§ Êü•ÁúãÁ≥ªÁªüÂÜÖÂ≠ò‰ΩøÁî®ÊÉÖÂÜµÂíåswapÂàÜÂå∫ÁöÑ‰ΩøÁî®ÊÉÖÂÜµ 123456[root@chenxiaojian Desktop]# free -h total used free shared buffers cachedMem: 979M 911M 68M 14M 408K 316M-/+ buffers/cache: 594M 385MSwap: 0B 0B 0B[root@chenxiaojian Desktop]# buffers:Ë°®Á§∫ÁºìÂÜ≤Âå∫Ôºå‰æãÂ¶ÇÊàë‰ª¨Áî®ÈîÆÁõòÊâìÂ≠óÊó∂ÔºåÂ∞±ÊòØÂÖàÂÜôÂÖ•ÁºìÂÜ≤Âå∫Ôºå‰πüÂ∞±ÊòØËØ¥Ëøô‰∏™Áî®‰∫éÂêëÊñá‰ª∂‰∏≠ÂÜôÊï∞ÊçÆÊó∂ËøõË°åÁºìÂ≠òÁöÑ cachedÔºöË°®Á§∫ÁºìÂ≠òÂå∫ÔºåÂΩìÊàë‰ª¨ÂèñÊï∞ÊçÆÊó∂ÔºåÊàë‰ª¨ÂèØ‰ª•‰∏çÈúÄË¶ÅËØªÂèñÁ£ÅÁõò‰∏äÁöÑÊï∞ÊçÆÔºàÁ£ÅÁõòËØªÂèñÂ§™ÊÖ¢‰∫ÜÔºâÔºå‰ΩøÁî®cachedÁºìÂ≠òÊõ¥Âø´ÁöÑËé∑ÂæóÊï∞ÊçÆ ÂàõÂª∫swapÂàÜÂå∫ÁöÑÂëΩ‰ª§ ÂàÜÂå∫Ôºöfdisk /dev/sdb Ê†ºÂºèÂåñÂàÜÂå∫Ôºömkswap /dev/sdb1 ÂêØÂä®ÂàÜÂå∫Ôºöswapon /dev/sdb1 ÂèñÊ∂àÂä†ÂÖ•ÁöÑÂàÜÂå∫Ôºöswapoff /dev/sdb1 ËÆæÁΩÆÂºÄÊú∫Ëá™ÂêØÔºö/dev/sdb1 swap swap defaults 0 0]]></content>
      <categories>
        <category>Linux</category>
        <category>Linux‰∏≠swapÂàÜÂå∫</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7_linuxÈò≤ÁÅ´Â¢ôËØ¶Ëß£]]></title>
    <url>%2Fcentos7-linux%E9%98%B2%E7%81%AB%E5%A2%99%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[‰ΩøÁî®firewall-configËøõË°åÈÖçÁΩÆ ‰ΩøÁî®ÂëΩ‰ª§Ë°åËøõË°åÈÖçÁΩÆÔºàfirewall-cmdÔºâ Â∏∏Áî®ÂëΩ‰ª§Ôºöfirewall-cmd ‚Äìlist-all / firewall-cmd ‚Äìreload (ÈáçËΩΩÔºâ ‰ΩøÁî®firewall-cmd ‚Äì + ‚ÄútabÈîÆ‚ÄùËøõË°åÊü•ÁúãÂëΩ‰ª§ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051[root@chenxiaojian ~]# firewall-cmd --add-service=http --permanent success[root@chenxiaojian ~]# firewall-cmd --list-allpublic (active) target: default icmp-block-inversion: no interfaces: ens33 sources: services: ssh dhcpv6-client nfs ports: protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: [root@chenxiaojian ~]# firewall-cmd --list-all --permanent public target: default icmp-block-inversion: no interfaces: sources: services: ssh dhcpv6-client nfs http ports: protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: [root@chenxiaojian ~]# firewall-cmd --reload success[root@chenxiaojian ~]# firewall-cmd --list-allpublic (active) target: default icmp-block-inversion: no interfaces: ens33 sources: services: ssh dhcpv6-client nfs http ports: protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: [root@chenxiaojian ~]# ^C[root@chenxiaojian ~]# ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ /etc/firewalld (‰øÆÊîπ) /usr/lib/firewalldÔºàÈªòËÆ§ÈÖçÁΩÆÊñá‰ª∂Ôºâ 123456789101112131415161718192021[root@chenxiaojian zones]# cd /etc/firewalld/[root@chenxiaojian firewalld]# llÊÄªÁî®Èáè 8-rw-r--r--. 1 root root 2006 10Êúà 31 2018 firewalld.confdrwxr-x---. 2 root root 6 10Êúà 31 2018 helpersdrwxr-x---. 2 root root 6 10Êúà 31 2018 icmptypesdrwxr-x---. 2 root root 6 10Êúà 31 2018 ipsets-rw-r--r--. 1 root root 271 10Êúà 31 2018 lockdown-whitelist.xmldrwxr-x---. 2 root root 6 10Êúà 31 2018 servicesdrwxr-x---. 2 root root 46 9Êúà 15 21:59 zones[root@chenxiaojian firewalld]# cat zones/public.xml&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;zone&gt; &lt;short&gt;Public&lt;/short&gt; &lt;description&gt;For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.&lt;/description&gt; &lt;service name="ssh"/&gt; &lt;service name="dhcpv6-client"/&gt; &lt;service name="nfs"/&gt; &lt;service name="http"/&gt;&lt;/zone&gt;[root@chenxiaojian firewalld]# 1234567891011121314151617181920212223[root@chenxiaojian zones]# cd /usr/lib/alsa/ firmware/ java-1.6.0/ jvm-private/ modules-load.d/ sysctl.d/binfmt.d/ fontconfig/ java-1.7.0/ kbd/ mozilla/ systemd/crda/ games/ java-1.8.0/ kdump/ NetworkManager/ tmpfiles.d/cups/ gcc/ java-ext/ kernel/ polkit-1/ tuned/debug/ grub/ jvm/ locale/ python2.7/ udev/dracut/ java/ jvm-commmon/ modprobe.d/ rpm/ yum-plugins/firewalld/ java-1.5.0/ jvm-exports/ modules/ sse2/ [root@chenxiaojian zones]# cd /usr/lib/firewalld/[root@chenxiaojian firewalld]# lshelpers icmptypes ipsets services xmlschema zones[root@chenxiaojian firewalld]# ll zones/ÊÄªÁî®Èáè 36-rw-r--r--. 1 root root 299 10Êúà 31 2018 block.xml-rw-r--r--. 1 root root 293 10Êúà 31 2018 dmz.xml-rw-r--r--. 1 root root 291 10Êúà 31 2018 drop.xml-rw-r--r--. 1 root root 304 10Êúà 31 2018 external.xml-rw-r--r--. 1 root root 369 10Êúà 31 2018 home.xml-rw-r--r--. 1 root root 384 10Êúà 31 2018 internal.xml-rw-r--r--. 1 root root 315 10Êúà 31 2018 public.xml-rw-r--r--. 1 root root 162 10Êúà 31 2018 trusted.xml-rw-r--r--. 1 root root 311 10Êúà 31 2018 work.xml[root@chenxiaojian firewalld]# firewallÁöÑÂå∫Âüü 123456789101112131415161718192021222324252627[root@chenxiaojian firewalld]# firewall-cmd --get-default-zone public# ÁΩëÂç°ÊøÄÊ¥ªÈÄâÊã©ÁöÑÂå∫ÂüüÊòØpublic[root@chenxiaojian firewalld]# firewall-cmd --get-active-zones public interfaces: ens33#Êü•ÁúãÁâπÂÆöÂå∫ÂüüÁöÑÊÉÖÂÜµ[root@chenxiaojian firewalld]# firewall-cmd --list-all --zone=public public (active) target: default icmp-block-inversion: no interfaces: ens33 sources: services: ssh dhcpv6-client nfs http ports: protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: #Êü•ÁúãÂå∫Âüü[root@chenxiaojian firewalld]# firewall-cmd --get-zonesblock dmz drop external home internal public trusted work Ê£ÄÊü•ÊéíÂ∫è(ÊöÇÊó∂‰∏çÂ§™ËÉΩÁêÜËß£) Ê∫êÂú∞ÂùÄÂÖ≥ËÅîÂå∫Âüü Êé•Âè£ÂÖ≥ËÅîÂå∫Âüü ÈªòËÆ§Âå∫Âüü Âå∫ÂüüËßÑÂàôÊéíÂ∫è Á´ØÂè£ËΩ¨ÂèëÂíå‰º™Ë£Ö ËÆ∞ÂΩïËßÑÂàô ÂÖÅËÆ∏ËßÑÂàô ÊãíÁªùËßÑÂàô ÈªòËÆ§ËßÑÂàô ÁºñÂÜôÂØåËßÑÂàôÂª∫ËÆÆËøòÊòØÁî®ÂõæÂΩ¢ÂåñÁïåÈù¢ËøõË°åÈÖçÁΩÆÂêßÔºÅÔºÅ ÂØåËßÑÂàôÂèØ‰ª•Áî®Âú®‰æãÂ¶ÇÊàë‰ª¨ÂÖÅËÆ∏‰∏ªÊú∫2ÁôªÂΩï‰∏ªÊú∫1Ôºå‰ΩÜÊòØ‰∏çÂÖÅËÆ∏‰∏ªÊú∫3ÁôªÂΩï‰∏ªÊú∫1ÔºåËøôÊó∂Êàë‰ª¨ÂèØ‰ª•ÂÖàÂºÄÂèëÊâÄÊúâÁöÑ‰∏ªÊú∫ËÆøÈóÆ‰∏ªÊú∫1ÔºåÁÑ∂ÂêéËÆæÁΩÆÂØåËßÑÂàôÔºåÊãíÁªù‰∏ªÊú∫3ËÆøÈóÆ‰∏ªÊú∫1 1234567891011121314151617181920#manÊâãÂÜåÊü•ÁúãÂØåËßÑÂàô[chenxiaojian@chenxiaojian ~]$ man -k firewalldfirewall-cmd (1) - firewalld command line clientfirewall-config (1) - firewalld GUI configuration toolfirewall-offline-cmd (1) - firewalld offline command line clientfirewalld (1) - Dynamic Firewall Managerfirewalld.conf (5) - firewalld configuration filefirewalld.dbus (5) - firewalld D-Bus interface descriptionfirewalld.direct (5) - firewalld direct configuration filefirewalld.helper (5) - firewalld helper configuration filesfirewalld.icmptype (5) - firewalld icmptype configuration filesfirewalld.ipset (5) - firewalld ipset configuration filesfirewalld.lockdown-whitelist (5) - firewalld lockdown whitelist configuration filefirewalld.richlanguage (5) - Rich Language Documentationfirewalld.service (5) - firewalld service configuration filesfirewalld.zone (5) - firewalld zone configuration filesfirewalld.zones (5) - firewalld zones[chenxiaojian@chenxiaojian ~]$ man firewalld.richlanguage[chenxiaojian@chenxiaojian ~]$ ÂØåËßÑÂàôËØ≠Ê≥ï [source] [destination] Ë°®Á§∫ÂèØÈÄâÔºåÂ¶ÇÊûúÁúÅÁï•ÔºåÂàô‰ª£Ë°®ÊâÄÊúâ‰∏ªÊú∫ ‰º™Ë£Ö ‰πüÂ∞±ÊòØËØ¥‰∏Ä‰∏™ÁΩëÂç°Ë∑üÂ§ñÁΩëËøûÊé•ÔºåÁÑ∂ÂêéÈÄöËøáËøô‰∏™ÁΩëÂç°‰º†ÈÄíÊï∞ÊçÆÂà∞Â§ñÁΩëÁöÑipÂú∞ÂùÄÈÉΩ‰ºöËΩ¨Êç¢‰∏∫Ëøô‰∏™ÁΩëÂç°ÁöÑipÂú∞ÂùÄ Áõ¥Êé•ÂºÄÂêØÁΩëÂç°ÁöÑ‰º™Ë£ÖÈÄâÈ°π ËøõË°åÂØåËßÑÂàôÁöÑÁºñÂÜôÂÆûÁé∞‰º™Ë£Ö Á´ØÂè£ËΩ¨Âèëforward-port Á´ØÂè£ËΩ¨ÂèëÔºàPort forwardingÔºâÔºåÊúâÊó∂Ë¢´Âè´ÂÅöÈößÈÅìÔºåÊòØÂÆâÂÖ®Â£≥(SSH) ‰∏∫ÁΩëÁªúÂÆâÂÖ®ÈÄö‰ø°‰ΩøÁî®ÁöÑ‰∏ÄÁßçÊñπÊ≥ï„ÄÇÁ´ØÂè£ËΩ¨ÂèëÊòØËΩ¨Âèë‰∏Ä‰∏™ÁΩëÁªúÁ´ØÂè£‰ªé‰∏Ä‰∏™ÁΩëÁªúËäÇÁÇπÂà∞Âè¶‰∏Ä‰∏™ÁΩëÁªúËäÇÁÇπÁöÑË°å‰∏∫Ôºå‰ΩøÂæó‰∏Ä‰∏™Â§ñÈÉ®Áî®Êà∑‰ªéÂ§ñÈÉ®ÁªèËøá‰∏Ä‰∏™Ë¢´ÊøÄÊ¥ªÁöÑNATË∑ØÁî±Âô®Âà∞Ëææ‰∏Ä‰∏™Âú®ÁßÅÊúâÂÜÖÈÉ®IPÂú∞ÂùÄÔºàÂ±ÄÂüüÁΩëÂÜÖÈÉ®Ôºâ‰∏äÁöÑ‰∏Ä‰∏™Á´ØÂè£„ÄÇ ‰πüÂ∞±ÊòØÊàë‰ª¨ËÆæÁΩÆÁ´ØÂè£Êò†Â∞Ñ‰æãÂ¶Ç‰∏∫80‚Äì„Äã„Äã8080ÔºåÈÇ£‰πàÊàë‰ª¨ËÆøÈóÆ80ÔºåÂ∞±Ëá™Âä®ËÆøÈóÆÂà∞Á´ØÂè£8080]]></content>
      <categories>
        <category>Linux</category>
        <category>firewall</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python‚Äî‚ÄînumpyÂü∫Á°Ä01]]></title>
    <url>%2Fpython-numpy%E5%9F%BA%E7%A1%8001%2F</url>
    <content type="text"><![CDATA[Êï∞ÁªÑÂØπË±°Â∏∏Áî®Â±ûÊÄß Â±ûÊÄß ËØ¥Êòé dtype ËøîÂõûÊï∞ÁªÑ‰∏≠ÂÖÉÁ¥†ÁöÑÁ±ªÂûã shape ËøîÂõûÁî±Êï¥Êï∞ÁªÑÊàêÁöÑÂÖÉÁªÑÔºåÂÖÉÁªÑ‰∏≠ÁöÑÊØè‰∏™Êï¥Êï∞‰æùÊ¨°ÂØπÂ∫îÊï∞ÁªÑÁöÑÊØè‰∏™ËΩ¥ÁöÑÂÖÉÁ¥†‰∏™Êï∞ size ËøîÂõûÊï∞ÁªÑ‰∏≠ÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ ndim ËøîÂõûÊï∞ÁªÑÁöÑÁª¥Â∫¶ ÂáΩÊï∞ÂàõÂª∫Êï∞ÁªÑarray()1234567data = np.array([1,2,3,4],dtype=float)data#array([1., 2., 3., 4.])data=np.array([1,2,3,4],ndmin=2)data#array([[1, 2, 3, 4]]) Ê≥®ÊÑèËøôÈáåÊòØ‰ª£Ë°®‰∫åÁª¥ zeros()123456np.zeros((2,10))#(2,10)2Ë°®Á§∫0Áª¥Â∫¶ÂÖÉÁ¥†‰∏™Êï∞‰∏∫2Ôºå1Áª¥Â∫¶ÂÖÉÁ¥†‰∏™Êï∞‰∏∫10"""array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])""" 123data = np.array([1,2,3,4])np.zeros_like(data) # ÂèÇÊï∞ÊòØ‰∏Ä‰∏™Êï∞ÁªÑÔºåËøô‰∏™ÂáΩÊï∞Â∞±ËÉΩÊ†πÊçÆËøô‰∏™Êï∞ÁªÑÁöÑÁª¥Â∫¶ÂàõÂª∫Êï∞ÁªÑÔºåÂè™‰∏çËøáÂÖÉÁ¥†ÁöÑÂÄºÂèòÊàê0#array([0, 0, 0, 0]) ÂàõÂª∫Âêå‰∏ÄÁßçÂÖÉÁ¥†ÁöÑÊï∞ÁªÑones,ones_like/ zeors,zeros_like /empty,empty_like12345678910np.ones((2,5), dtype=int)"""array([[1, 1, 1, 1, 1], [1, 1, 1, 1, 1]])"""np.ones((2,5))"""array([[1., 1., 1., 1., 1.], [1., 1., 1., 1., 1.]])""" 1234567891011121314151617data = np.array([[1,2,3,4],[2,2,3,4]])np.ones_like(data)"""array([[1, 1, 1, 1], [1, 1, 1, 1]]) """# Ê≥®ÊÑèÊñ∞Âª∫ÁöÑÊï∞ÁªÑ‰ºöÈªòËÆ§ÁªßÊâøones_likeÂèÇÊï∞ÁöÑÁ±ªÂûãdata = np.array([[1,2.2,3,4],[2,2,3,4]])np.ones_like(data)"""array([[1., 1., 1., 1.], [1., 1., 1., 1.]])"""# ËÆæÁΩÆÂèÇÊï∞data = np.array([[1,2,3,4],[2,2,3,4]])np.ones_like(data,dtype=float) ÂàõÂª∫ÂÖ∂‰ªñÊï∞ÂÄºÁöÑÊï∞ÁªÑ1234567891011121314da = np.array([[1,2,3,4],[5,5,5,5],[6,6,6,6]])df = 2 * np.ones_like(da)df"""array([[2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2]]) """ np.full(da.shape, 3)"""array([[3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3]]) """ ÂàõÂª∫ÂØπËßíÁ∫øÊï∞ÁªÑ eys() identity() diag() 12345678910111213141516171819202122232425# eys()ÂàõÂª∫‰∏Ä‰∏™ÊñπÈòµÔºåÂπ∂‰∏îËøô‰∏™ÊñπÈòµÁöÑÂØπËßíÁ∫øÂèØ‰ª•Ë∞ÉÊï¥np.eye(4,dtype=int)"""array([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) """np.eye(4,dtype=int,k=1)"""array([[0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0]]) """np.eye(4,dtype=int,k=-2)"""array([[0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [0, 1, 0, 0]]) """ 123456789101112131415#identity()‰∏çËÉΩÁßªÂä®ÂØπËßíÁ∫ønp.identity(4)"""array([[1., 0., 0., 0.], [0., 1., 0., 0.], [0., 0., 1., 0.], [0., 0., 0., 1.]]) """np.identity(4,dtype=int)"""array([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]])""" 12345678910111213141516171819202122232425262728#ÂØπËßíÁ∫øÁöÑÂÖÉÁ¥†ÁöÑÂÄºÂèØ‰ª•ÊúâËøô‰∏™ÂáΩÊï∞ÂÜ≥ÂÆöÔºå‰πüÂèØ‰ª•Ë∞ÉÊï¥ÂØπËßíÁ∫øÁöÑ‰ΩçÁΩÆnp.diag([1,2,3,4])"""array([[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]])"""np.diag((1,2,3,4))"""array([[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]]) """#Ê≥®ÊÑèËøôÈáåÂàõÂª∫‰∫Ü‰∏Ä‰∏™5Ë°å5ÂàóÁöÑÊñπÈòµnp.diag([1,2,3,5],k=1)"""array([[0, 1, 0, 0, 0], [0, 0, 2, 0, 0], [0, 0, 0, 3, 0], [0, 0, 0, 0, 5], [0, 0, 0, 0, 0]]) """ ÂàõÂª∫ÂÖÉÁ¥†ÊòØÁ≠âÂ∑ÆÁ≠âÊØîÊï∞Âàó12345678910111213# np.arange()ÂàõÂª∫‰∏Ä‰∏™Á±ª‰ºº‰∫érange()ÂáΩÊï∞ÁöÑÊï∞ÁªÑnp.arange(1,10,2)"""array([1, 3, 5, 7, 9])"""# np.linspace()ÂáΩÊï∞Ôºå‰πüÂ∞±ÊòØËØ¥Ëøô‰∏™ÂáΩÊï∞ÁöÑÁ¨¨‰∏â‰∏™ÂèÇÊï∞ÊòØËøô‰∏™Êï∞ÁªÑÁöÑÂÖÉÁ¥†ÁöÑ‰∏™Êï∞#Ëøô‰∏™ÂáΩÊï∞ÈªòËÆ§ÊòØÂåÖÂê´Âè≥Âå∫Èó¥ÁöÑÔºåÂèØ‰ª•ËÆæÁΩÆendpoint=false#Signature: np.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)np.linspace(1,10,7)#array([ 1. , 2.5, 4. , 5.5, 7. , 8.5, 10. ]) 1234567# ÂàõÂª∫ÁöÑÁ≠âÊØîÊï∞ÂàóÁöÑÂáΩÊï∞# np.logspace()ÈªòËÆ§ÊòØ‰ª•10‰∏∫Â∫ïÁöÑÔºåstart,end‰∏∫ÊåáÊï∞#Signature: np.logspace(start, stop, num=50, endpoint=True, base=10.0, dtype=None)np.logspace(2,5,4)#array([ 100., 1000., 10000., 100000.]) Êï∞ÁªÑÁöÑÁ¥¢ÂºïÂíåÂàáÁâáÊï∞ÁªÑÁöÑËΩ¥ 123456789101112131415161718192021# ÂàõÂª∫‰∏Ä‰∏™Êï∞ÁªÑÁöÑÁªìÊûÑ‰∏∫Ôºà2,3,4Ôºâa = np.arange(24).reshape((2,3,4))a"""array([[[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]])""" a[1]"""array([[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]])"""a[1][1][2] #Ë°®Á§∫ÁöÑÊòØÊï∞ÁªÑaÁöÑ0ËΩ¥ÊñπÂêëÁ¥¢Âºï‰∏∫1ÁöÑÂÖÉÁ¥†Ôºå1ËΩ¥ÊñπÂêëÁ¥¢Âºï‰∏∫1ÁöÑÂÖÉÁ¥†Ôºå2ËΩ¥ÊñπÂêëÁ¥¢Âºï‰∏∫2ÁöÑÂÖÉÁ¥†#18 Ê†πÊçÆÁ¥¢ÂºïÂèñÂæóÊï∞ÁªÑÁöÑÂÖÉÁ¥† Ë∑üÂàóË°®ÁöÑÊìç‰ΩúÂü∫Êú¨‰∏ÄËá¥ÔºåÂèØ‰ª•Ê†πÊçÆÊï∞ÁªÑÁöÑ‰∏ãÊ†áËøõË°åÊü•ÁúãÔºå‰øÆÊîπ Êü•ÁúãÊï∞ÁªÑÁöÑÂÖÉÁ¥†ÁöÑ‰∏ãÊ†áÂΩ¢Âºè array[1] / array[1,2] / array[(1,2)] / array[1][2] 1234567891011121314151617181920import numpy as npdata = np.arange(0,10,1).reshape(2,5)print(data)# [[0 1 2 3 4]# [5 6 7 8 9]]print(data[1])print(data[1][2])print(data[1,2])print(data[(1,2)])# 7# 7# 7# modify arraydata[1][2] = 9999print(data)# [[ 0 1 2 3 4]# [ 5 6 9999 8 9]] ÈÄöËøá‰∏ãÊ†áÊòØÂàóË°®ËÆøÈóÆÊï∞ÁªÑÂÖÉÁ¥† 1234567891011121314151617181920212223242526272829303132333435# ‰∏ãÊ†áÊòØÂàóË°®Ëé∑ÂèñÊï∞ÁªÑÂÖÉÁ¥†import numpy as np data = np.arange(0,12,1).reshape(3,4)print(data)# [[ 0 1 2 3]# [ 4 5 6 7]# [ 8 9 10 11]]data1 = data[[0,1]]yuansuprint(data1)# [[0 1 2 3]# [4 5 6 7]]data2 = data[[0,1],[1,2]]print(data2)# [1 6]data3 = data[[1,2],[1,3]] print(data3)# [ 5 11]#‰∏ÄÁª¥Êï∞ÁªÑa = np.arange(0,5,1)print(a)print(a[4])# [0 1 2 3 4]# 4# ÊÄªÁªìÔºöÂèØ‰ª•Ëøô‰πàÁêÜËß£Ôºå#ÂØπ‰∫é‰∏Ä‰∏™‰∏ÄÁª¥Êï∞ÁªÑÔºåËÆøÈóÆÂÖÉÁ¥†Â∞±ÊòØÊ†πÊçÆc[a,b,v]ÂàóË°®‰∏≠ÁöÑÂÖÉÁ¥†ËøõË°åÁ¥¢ÂºïÔºåË∑ülist‰∏ÄÊ†∑#ÂØπ‰∫é‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑËÄåË®ÄÔºåËã•ÁªôÂá∫c[[a,b],[c,d]]ÈÇ£‰πàÂ∞±ÊòØÂéªc[a,c]Âíåc[b,d] ÈÄöËøá‰∏ãÊ†áÊòØÊï∞ÁªÑËÆøÈóÆÊï∞ÁªÑÂÖÉÁ¥†12345678910111213data = np.arange(1,11)print(data)index = np.array([1,2,3,5])print("Êï∞ÁªÑ‰Ωú‰∏∫‰∏ãÊ†áÁöÑÔºö", data[index])# [1 2 3 4 5 6 7 8 9]# Êï∞ÁªÑ‰Ωú‰∏∫‰∏ãÊ†áÁöÑÔºö [2 3 4 6]data1 = data.reshape(2,5)print(data1)print(data1[[1,1], [0,2]])data1 = data1[np.array([1,1]), np.array([0,2])] #Á≠â‰ª∑‰∫édata1[[1,1],[0,2]]print(data1) 12345678910111213141516171819202122232425data1 = data.reshape(2,5)print(data1)print(data1[[1,1], [0,2]])data1 = data1[np.array([1,1]), np.array([0,2])] #Á≠â‰ª∑‰∫édata1[[1,1],[0,2]]print(data1)t = data1 == 2p = data == 2print("tÊï∞ÁªÑ‰∏∫Ôºö", t)print("pÊï∞ÁªÑ‰∏∫Ôºö", p)# tÊï∞ÁªÑ‰∏∫Ôºö [False False]# pÊï∞ÁªÑ‰∏∫Ôºö [False True False False False False False False False False]data2 = data.reshape(2,5)print(data2)index1 = np.array([False, True])print("data2ÁöÑÊï∞ÁªÑÔºö",data2[index1])# data2ÁöÑÊï∞ÁªÑÔºö [[ 6 7 8 9 10]],# TrueÂèñ‰∫Ü0ËΩ¥‰∏∫ÁúüÁöÑ‰∏ÄË°åprint("Êï∞ÁªÑ‰∏≠Â§ß‰∫é5ÁöÑÊï∞Â≠ó", data2[data2&gt;5])# Êï∞ÁªÑ‰∏≠Â§ß‰∫é5ÁöÑÊï∞Â≠ó [ 6 7 8 9 10] Êï∞ÁªÑÁöÑÂàáÁâáÈúÄÊ≥®ÊÑèÁöÑÊòØÈÄöËøáÂàáÁâáÂæóÂà∞ÁöÑÊï∞ÁªÑ‰∏éÂéüÊï∞ÁªÑÂÖ±‰∫´‰∏Ä‰∏™ÂÜÖÂ≠òÁ©∫Èó¥ ÂØπ‰∫é‰∏ÄÁª¥Êï∞ÁªÑ123456789101112131415161718192021222324252627import numpy as np# Êï∞ÁªÑÁúüÁöÑÂàáÁâá# ‰∏Ä‰ΩçÊï∞ÁªÑa = np.arange(10, 20)print(a)b = a[2:8] #Â∑¶ÂºÄÂè≥Èó≠print("bÊï∞ÁªÑÔºö", b)# [10 11 12 13 14 15 16 17 18 19]y# bÊï∞ÁªÑÔºö [12 13 14 15 16 17]b[0] = 9999print("bÊï∞ÁªÑ‰∏∫Ôºö", b)print("aÊï∞ÁªÑ‰∏∫Ôºö", a)# bÊï∞ÁªÑ‰∏∫Ôºö [9999 13 14 15 16 17]# aÊï∞ÁªÑ‰∏∫Ôºö [ 10 11 9999 13 14 15 16 17 18 19]print(a[::2])print(a[::-1])print(a[3:])# [ 10 9999 14 16 18]# [ 19 18 17 16 15 14 13 9999 11 10]# [13 14 15 16 17 18 19] ÂØπ‰∫é‰∫åÁª¥Êï∞ÁªÑ12345678910111213141516171819202122232425262728293031# ‰∫åÁª¥Êï∞ÁªÑc = np.arange(0, 60, 10).reshape(-1, 1) + np.arange(0, 6)print(c)print(c[1:4])print(c[1:4, 2:5])print(c[:, 2])print(c[::2, ::2])print(c[:3, [0, 3]])"""[[10 11 12 13 14 15] [20 21 22 23 24 25] [30 31 32 33 34 35]][[12 13 14] [22 23 24] [32 33 34]][ 2 12 22 32 42 52][[ 0 2 4] [20 22 24] [40 42 44]] [[ 0 3] [10 13] [20 23]]""" Êï∞ÁªÑÂèòÂΩ¢ np.narray.reshape()Âíånp.reshape(array,(1,2))ÊòØËøîÂõû‰∏Ä‰ªΩÊã∑Ë¥ùÔºå‰πüÂ∞±ÊòØËØ¥ÂØπÂÖ∂ÁöÑÊìç‰Ωú‰∏ç‰ºöÂΩ±ÂìçÂà∞ÂéüÊù•ÁöÑÊï∞ÁªÑÊú¨Ë∫´ ‰πüÂèØ‰ª•Áî®Êï∞ÁªÑÁöÑÂ±ûÊÄßarray.shape = Ôºà1,10ÔºâËøõË°åÂèòÂΩ¢ Âèò‰∏∫‰∏ÄÁª¥Êï∞ÁªÑÁöÑÂáΩÊï∞Ôºö np.array.flatten() ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™Êã∑Ë¥ù np.array.reval()‰∏énp.reval(array)ËøîÂõûÁöÑ‰∏Ä‰ªΩËßÜÂõæÔºåÂØπÂÖ∂Êìç‰Ωú‰ºöÂΩ±ÂìçÂà∞ÂéüÊù•ÁöÑÊï∞ÁªÑ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384import numpy as npdata = np.arange(10)data1 = data.reshape(2, 5)print(data, data1)print(id(data), "hahahh", id(data1))# 139928707398352 hahahh 139928707398432#data2 = np.reshape(data, (2, 5)) print(data2)print(id(data2))# 140256722626560##‰∏Ä‰∏™ÊòØ‰∏ÄÁª¥Êï∞ÁªÑÔºå‰∏Ä‰∏™ÊòØ‰∫åÁª¥Êï∞ÁªÑÔºåÂè™‰∏çËøáÊòØ0ËΩ¥Âè™Êúâ‰∏Ä‰∏™ÂÖÉÁ¥†print(np.reshape(data, (10, )))print(np.reshape(data, (1, 10)))# [0 1 2 3 4 5 6 7 8 9]# [[0 1 2 3 4 5 6 7 8 9]]##numpyÁü•ÈÅì1ËΩ¥‰∏äÂè™Êúâ‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÁÑ∂ÂêéÂ∞±‰ºöËá™Âä®Êé®Êñ≠0ËΩ¥‰∏äÊúâÂ§öÂ∞ë‰∏™ÂÖÉÁ¥†data3 = np.reshape(data, (-1, 1))print(data3)# [[0]# [1]# [2]# [3]# [4]# [5]# [6]# [7]# [8]# [9]]# =============================data3.shape = (2, 5) #Êìç‰ΩúÁöÑÊòØËøô‰∏™Êï∞ÁªÑÊú¨Ë∫´print(data3)# [[0 1 2 3 4]# [5 6 7 8 9]]# =============================#Â∞ÜÊï∞ÁªÑËÆæÁΩÆ‰∏∫‰∏ÄÁª¥Êï∞ÁªÑdata4 = data1print(data4)p = data4.flatten() #ÁîüÊàê‰∏Ä‰∏™Êñ∞Êï∞ÁªÑÔºåÂπ∂‰∏îÁõ∏ÂØπÂéüÊù•Êï∞ÁªÑ‰∏çÂú®Âêå‰∏Ä‰∏™ËßÜÂõæprint(p)print(id(data4))print(id(p))"""[[0 1 2 3 4] [5 6 7 8 9]][0 1 2 3 4 5 6 7 8 9]140612501121984140612211456480"""data5 = np.ravel(data1) #‰∏éÂéüÊï∞ÂÖ±‰∫´Âêå‰∏Ä‰∏™ËßÜÂõæprint(data5)# [0 1 2 3 4 5 6 7 8 9]#data5[2] = 88888print("data5:", data5)print("data1:", data1)print(id(data5),id(data1))print(data5 is data1)# False# # data5: [ 0 1 88888 3 4 5 6 7 8 9]# data1: [[ 0 1 88888 3 4]# [ 5 6 7 8 9]] Â∏∏Áî®ÊñπÊ≥ïastype() ËÉΩÂ§üÊ†πÊçÆÊåáÂÆöÁöÑÁ±ªÂûãÊñ∞ÁîüÊàê‰∏Ä‰∏™Êï∞ÁªÑ 12345678910111213import numpy as npdata = np.array([[1,2,3],[2,3,4],[3,4,5]])new_data = data.astype(float)new_data, data"""(array([[1., 2., 3.], [2., 3., 4.], [3., 4., 5.]]), array([[1, 2, 3], [2, 3, 4], [3, 4, 5]]))""" np.expand_dims(array,axis) Â¢ûÂä†Êï∞ÁªÑÁöÑËΩ¥Êï∞ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364# =========================# # ÂØπ‰∫éËøô‰∏™ÂáΩÊï∞ÔºåÊàë‰ª¨Êàë‰ª¨Áé∞Âú®ÂèØ‰ª•Á≤óÁï•Âú∞ÁêÜËß£ÔºåÂ∞±ÊòØÂ¢ûÂä†‰∏Ä‰∏™ËΩ¥ÔºåÂâçÊèêÂèÇÊï∞axisÊòØÂêàÊ≥ïÁöÑ„ÄÇÁÑ∂ÂêéÊï∞ÁªÑÁöÑshapeÂ∞±ÊòØaxisÊâÄÂú®ÁöÑËΩ¥ÂèòÊàê‰∏∫1Ôºå# ÂéüÂÖàÊï∞ÁªÑÁöÑËΩ¥ÂæÄÂè≥ÁßªÔºå‰æãÂ¶ÇÔºöÔºà1,2,3,4Ôºâ axis=2 ==&gt;ÁªìÊûú‰∏∫ÔºöÔºà1,2,1,3,4Ôºâ# data6 = np.arange(0,9)print(data6)print(data6.shape)# [0 1 2 3 4 5 6 7 8]# (9,)data8 = np.expand_dims(data6,axis=0)print(data8)print(data8.shape)# [[0 1 2 3 4 5 6 7 8]]# (1, 9)data6 = np.expand_dims(data6, axis=1)print(data6)print(data6.shape)# [[0]# [1]# [2]# [3]# [4]# [5]# [6]# [7]# [8]]# (9, 1)# =========================data7 = np.array([[1,2,3],[4,5,6]])print(data7.shape)# (2,3)data7 = np.expand_dims(data7,axis=2)print(data7)print(data7.shape)# (2,3,1)# =========================data8 = np.array([[[1,2,3,4]]])print(data8.shape)print(data8)# (1, 1, 4)# [[[1 2 3 4]]]data8 = np.expand_dims(data8,axis=2)print(data8.shape)print(data8)# (1, 1, 1, 4)# [[[[1 2 3 4]]]]# =========================data9 = np.array([[[1,2,5],[3,4,6]]])print(data9.shape)print(data9)data9 = np.expand_dims(data9,axis=2)print(data9.shape)# [[[1 2 5]# [3 4 6]]]# (1, 2, 1, 3) np.concatenate((a,b),axis=0/1) Â∞ÜÊï∞ÁªÑa,bËøõË°åÁªÑÂêàÔºåÂΩìaxis=0Êó∂Ë°®Á§∫ÂûÇÁõ¥ÁªÑÂêàÔºåÂΩìaxis=1Êó∂Ë°®Á§∫Ê∞¥Âπ≥ÁªÑÂêà np.random.random_sample() ÁîüÊàê[0,1)‰πãÈó¥ÈöèÊú∫Êï∞,np.random.random_sample((4,))Ë°®Á§∫ÁîüÊàê‰∏Ä‰∏™4‰∏™ÂÖÉÁ¥†ÁöÑ‰∏ÄÁª¥Êï∞ÁªÑ np.random.random_sample((4,2))Ë°®Á§∫ÁîüÊàê‰∏Ä‰∏™shape(4,2)ÁöÑ‰∫åÁª¥Êï∞ÁªÑ 12345678print(np.random.random_sample((4,2)))"""[[0.95473307 0.36256674] [0.5869151 0.04447849] [0.25326141 0.23460101] [0.80424673 0.44243846]] """ Êï∞ÁªÑÁöÑÁªÑÂêà‰∏éÂàÜÂâ≤Ê∞¥Âπ≥ÁªÑÂêà‚Äì0ËΩ¥ÊñπÂêëÂΩ¢Áä∂‰∏ÄÊ†∑ np.hstack(tuple)ÔºåÂèÇÊï∞‰∏∫ÂÖÉÁªÑÔºåÂåÖÂê´Ë¢´ÁªÑÂêàÂú®‰∏ÄËµ∑ÁöÑÊï∞ÁªÑ 1234567891011121314import numpy as np a = np.arange(9).reshape(3,3)b = np.arange(12).reshape(3,4)c = np.arange(15).reshape(3,5)# Ê∞¥Âπ≥ÁªÑÂêà:ÈúÄË¶Å‰øùËØÅ0ËΩ¥‰∏äÂÖÉÁ¥†‰∏™Êï∞ÊòØÁõ∏ÂêåÁöÑa_b = np.hstack((a,b))print(a_b)"""[[ 0 1 2 0 1 2 3] [ 3 4 5 4 5 6 7] [ 6 7 8 8 9 10 11]]""" ÂûÇÁõ¥ÁªÑÂêà‚Äì1ËΩ¥ÊñπÂêëÂΩ¢Áä∂‰∏ÄÊ†∑ np.vstack(tuple) 1234567891011121314151617181920# ÂûÇÁõ¥ÁªÑÂêàÔºöÈúÄË¶Å‰øùËØÅ1ËΩ¥‰∏äÂÖÉÁ¥†‰∏™Êï∞ÊòØÁõ∏ÂêåÁöÑb1 = b.Tprint(b1)"""[[ 0 4 8] [ 1 5 9] [ 2 6 10] [ 3 7 11]] """ab1 = np.vstack((a,b1))print(ab1)# [[ 0 1 2]# [ 3 4 5]# [ 6 7 8]# [ 0 4 8]# [ 1 5 9]# [ 2 6 10]# [ 3 7 11]] ÂÖ∂‰ªñÁªÑÂêà123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#Ê∑±Â∫¶ÁªÑÂêà:ÂèØ‰ª•ÊÉ≥Ë±°‰∏∫‰∏§‰∏™Èù¢Âπ≥Ë°åÔºåÁÑ∂Âêé‰∏§‰∏™Èù¢ÂØπÂ∫îÁöÑÊï∞ËøõË°åÁªÑÂêàa = np.arange(9).reshape(3,3)print(a)"""[[0 1 2] [3 4 5] [6 7 8]]"""b = a * 3print("array b Ôºö",b)c = np.dstack((a,b))print ("Êï∞ÁªÑc:",c)print(c.shape)"""Êï∞ÁªÑc: [[[ 0 0] [ 1 3] [ 2 6]] [[ 3 9] [ 4 12] [ 5 15]] [[ 6 18] [ 7 21] [ 8 24]]](3, 3, 2)"""# Ë°åÁªÑÂêàdata1 = np.arange(5)data2 = np.arange(5,10)data_column_add = np.column_stack((data1,data2))print("Ë°åÁªÑÂêà‰∏∫Ôºö", data_column_add)"""Ë°åÁªÑÂêà‰∏∫Ôºö [[0 5] [1 6] [2 7] [3 8] [4 9]] """print(data_column_add.shape) # (5,2)# ÂàóÁªÑÂêàdata_row_add = np.row_stack((data1,data2))print("ÂàóÁªÑÂêà‰∏∫Ôºö",data_row_add)print(data_row_add.shape)"""ÂàóÁªÑÂêà‰∏∫Ôºö [[0 1 2 3 4] [5 6 7 8 9]](2, 5)""" Êï∞ÁªÑÁöÑÂàÜÂâ≤1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253# Êï∞ÁªÑÁöÑÂàÜÂâ≤data3 = np.arange(24).reshape(4, 6)print("data3‰∏∫Ôºö", data3)"""data3‰∏∫Ôºö [[ 0 1 2 3 4 5] [ 6 7 8 9 10 11] [12 13 14 15 16 17] [18 19 20 21 22 23]]"""split_data3 = np.split(data3,2, axis=1) #ÂØπ1ËΩ¥ËøõË°åÂàÜÂâ≤print(split_data3)"""[array([[ 0, 1, 2], [ 6, 7, 8], [12, 13, 14], [18, 19, 20]]), array([[ 3, 4, 5], [ 9, 10, 11], [15, 16, 17], [21, 22, 23]])]"""split_data3_1 = np.split(data3, 2, axis=0) #ÂØπ0ËΩ¥ËøõË°åÂàÜÂâ≤print(split_data3_1)"""[array([[ 0, 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10, 11]]), array([[12, 13, 14, 15, 16, 17], [18, 19, 20, 21, 22, 23]])]"""# ‰∏ìÈó®ÈíàÂØπÊüê‰∏™ÊñπÂêëÁöÑÂàÜÂâ≤print(np.hsplit(data3,2))"""[array([[ 0, 1, 2], [ 6, 7, 8], [12, 13, 14], [18, 19, 20]]), array([[ 3, 4, 5], [ 9, 10, 11], [15, 16, 17], [21, 22, 23]])]"""print(np.vsplit(data3,2))"""[array([[ 0, 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10, 11]]), array([[12, 13, 14, 15, 16, 17], [18, 19, 20, 21, 22, 23]])]""" Êï∞ÁªÑÁöÑÊîπÁºñÔºà‚ÄúÂ¢ûÂä†‚ÄùÔºå‚Äú‰øÆÊîπ‚ÄùÔºå‚ÄúÂà†Èô§‚ÄùÔºâ np.append , np.delete, np.insertÔºåËøô‰∏âÁßçÊñπÊ≥ïÂÖ∂ÂÆûÈÉΩÊòØÂàõÂª∫‰∫Ü‰∏Ä‰∏™Êñ∞Êï∞ÁªÑ 12345678910111213141516171819202122232425262728293031323334353637383940414243# Êï∞ÁªÑÁöÑÊîπÁºña = np.array([[2, 3, 4], [5, 6, 7]]) # shape (2,3)b = np.array([[7, 8, 9]])r = np.append(a, b, axis=0) #ËÆ≤Êï∞ÁªÑbËøΩÂä†Âà∞aÁöÑÊã∑Ë¥ùÁöÑ0ËΩ¥ÂêéÈù¢ÔºåÂØπÊï∞ÁªÑaÊ≤°Êúâ‰ªª‰ΩïÂΩ±Âìçprint("Êï∞ÁªÑr‰∏∫Ôºö", r) # rÁöÑshape(3,3) --&gt;&gt;0ËΩ¥Â§ö‰∫Ü‰∏ÄÁªÑÂÖÉÁ¥†"""Êï∞ÁªÑr‰∏∫Ôºö [[2 3 4] [5 6 7] [7 8 9]] """# appendÊñπÊ≥ï‰∏çÂ£∞ÊòéËΩ¥ÔºåÂàôÊÑèÂë≥ÁùÄ‰∏§‰∏™Êï∞ÁªÑÁöÑÂÖÉÁ¥†ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑ‰∏ÄÁª¥Êï∞ÁªÑr = np.append(a, b)print("rÊï∞ÁªÑ‰∏∫:", r)# rÊï∞ÁªÑ‰∏∫: [2 3 4 5 6 7 7 8 9]# Â∞ÜÊüê‰∫õÂÖÉÁ¥†ÊèíÂÖ•Âà∞Âà∂ÂÆö‰ΩçÁΩÆa1 = a.flatten()print("ÈôçÁª¥ÂêéÔºö", a1)# ÈôçÁª¥ÂêéÔºö [2 3 4 5 6 7]r = np.insert(a1, 5, 99) #Âú®Á¥¢Âºï‰∏∫5ÁöÑ‰ΩçÁΩÆÊèíÂÖ•ÂÖÉÁ¥†print("ÊèíÂÖ•ÂêéÊï∞ÁªÑ‰∏∫Ôºö", r)# ÊèíÂÖ•ÂêéÊï∞ÁªÑ‰∏∫Ôºö [ 2 3 4 5 6 99 7]# Âà†Èô§Êìç‰Ωúprint("aÊï∞ÁªÑ‰∏∫Ôºö", a)"""aÊï∞ÁªÑ‰∏∫Ôºö [[2 3 4] [5 6 7]] """del_1 = np.delete(a, 1, axis=0) #Âà†Èô§0ËΩ¥Á¥¢Âºï‰∏∫1ÁöÑprint(del_1)# [[2 3 4]]del_2 = np.delete(a,0, axis=0)print(del_2)# [[5 6 7]]]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>numpy</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux‰∏ãjupyter_notebookÁöÑ‰ΩøÁî®Âá∫Áé∞ÁöÑÈóÆÈ¢ò]]></title>
    <url>%2Flinux%E4%B8%8Bjupyter-notebook%E7%9A%84%E4%BD%BF%E7%94%A8%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ÈíàÂØπÈ±ºlinux,È¶ñÂÖàËøô‰∏™jupyter ntebookÊñ∞Âª∫‰∏Ä‰∏™python3ÁöÑÊñá‰ª∂Âá∫Áé∞error,ÂèØËÉΩÊòØÁî±‰∫éÈò≤ÁÅ´Â¢ôÁöÑÂéüÂõ†ÔºåÂÖ≥Èó≠Èò≤ÁÅ´Â¢ôÔºåÊàñËÄÖÂºÄÊîæ8888Á´ØÂè£ 1systemctl stop firewall.service ÂïäÂïäÂïäÂïäÂïäÂïäÂïäÂïä]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÂàÜÊûê</category>
        <category>ÈÖçÁΩÆÈóÆÈ¢ò</category>
      </categories>
      <tags>
        <tag>pythonÊï∞ÊçÆÂàÜÊûê</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[È´òÁ≤æÂ∫¶ÁÆóÊ≥ï]]></title>
    <url>%2F%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[È´òÁ≤æÂ∫¶‰πòÊ≥ïÔºàÊó†Á¨¶Âè∑Ôºâ ÁÆóÊ≥ïÁöÑËøáÁ®ãÂ∞±ÊòØÊ®°ÊãüÊàë‰ª¨ÊâãÁÆó‰πòÊ≥ïÁöÑËøáÁ®ã 123456789101112131415161718192021222324252627282930313233343536#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;//È´òÁ≤æÂ∫¶‰πòÊ≥ïint main()&#123; string a, b; int arr[200]; int brr[200]; int crr[400]; cin &gt;&gt; a &gt;&gt; b; memset(arr, 0, sizeof(arr)); //ËµãÂÄº0 for (int i = 1; i &lt;= a.size(); i++) arr[i] = a[a.size() - i] - '0'; //Â∞ÜÂ≠óÁ¨¶‰∏≤aÁöÑÈ´ò‰Ωç(ÂÖ∂ÂÆûÊòØÊï∞Â≠óÁöÑ‰Ωé‰Ωç)Â≠òÂú®Êï∞ÁªÑarrÁöÑÂú∞‰Ωç for (int j = 1; j &lt;= b.size(); j++) brr[j] = b[b.size() - j] - '0'; memset(crr, 0, sizeof(crr)); for (int i = 1;i &lt;= a.size();i++) for (int j = 1; j &lt;= b.size(); j++) &#123; crr[i + j - 1] += arr[i] * brr[j]; //‰æãÂ¶Ç1234 X 23456 ÂàôÂ≠òÊîæÁ±ª‰ºº 6*4=30 crr[i + j] += crr[i + j - 1] /10; //30Â§ß‰∫é10Ëøõ‰ΩçÔºå--„Äã„Äã3 crr[i + j - 1] %= 10; //ËøõÂÆå‰ΩçÔºåÂâ©‰∏ãÁöÑ‰ΩôÊï∞ &#125; //ÊéßÂà∂ËæìÂá∫ÔºåÊ∏ÖÈô§È´ò‰ΩçÁöÑ0Ôºå‰πüÂ∞±ÊòØÁ°ÆÂÆöËøô‰∏™ÁßØÊúâÂ§öÂ∞ë‰ΩçÊï∞ int result_length = a.size() + b.size(); while (crr[result_length] == 0) result_length--; for (int i = result_length; i &gt;0; i--) cout &lt;&lt; crr[i]; cout &lt;&lt; endl;&#125; È´òÁ≤æÂ∫¶Âä†Ê≥ïÔºàÊó†Á¨¶Âè∑Ôºâ Ê®°ÊãüÂä†Ê≥ïÁöÑËøáÁ®ã 123456789101112131415161718192021222324252627282930313233343536int main()&#123; string a, b; cin &gt;&gt; a &gt;&gt; b; int arr[500]; int brr[500]; int crr[500]; memset(arr, 0, sizeof(arr)); memset(brr, 0, sizeof(brr)); memset(crr, 0, sizeof(crr)); for (int i = 1; i &lt;= a.size(); i++) arr[i] = a[a.size() - i] - '0'; for (int i = 1; i &lt;= b.size(); i++) brr[i] = b[b.size() - i] - '0'; int max_length = a.size() &gt; b.size() ? a.size() : b.size(); for (int i = 1; i &lt;= max_length; i++) &#123; crr[i] = arr[i] + brr[i]; crr[i + 1] += crr[i] / 10; crr[i] %= 10; &#125; max_length++; while (crr[max_length] == 0) &#123; max_length--; &#125; for (int i = max_length; i &gt; 0; i--) cout &lt;&lt; crr[i]; cout &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>ÁÆóÊ≥ï</category>
        <category>È´òÁ≤æÂ∫¶</category>
      </categories>
      <tags>
        <tag>È´òÁ≤æÂ∫¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linuxÁöÑhttpÊúçÂä°]]></title>
    <url>%2Flinux%E7%9A%84http%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[httpÊúçÂä° ÈÖçÁΩÆÊñá‰ª∂Ôºö/etc/httpd/conf/httpd.conf ÈÖçÁΩÆÊñá‰ª∂ÂÜÖÂÆπÔºö ServerRoot ‚Äú/etc/httpd‚Äù Ë°®Á§∫‰∏ªË¶ÅÈÖçÁΩÆÊñá‰ª∂ DocumentRoot ‚Äú/var/www/html‚Äù Ë°®Á§∫ËÆøÈóÆ‰∏ªÁõÆÂΩïÁöÑË∑ØÂæÑ Listen 80 ÁõëÂê¨Á´ØÂè£ &lt;Directory ‚Äú/var/www/html‚Äù&gt; AllowOverride None # Allow open access: Require all granted&lt;/Directory&gt; Ë°®Á§∫ÂØπËøô‰∏™/var/wwwÊñá‰ª∂ÁöÑËÆøÈóÆÊùÉÈôê Require all granted / denied &lt;RequireAll&gt; ËÆæÁΩÆÁâπÂÆö‰∏ªÊú∫Âêç„ÄÅipÂú∞ÂùÄ‰∏çËÉΩËÆøÈóÆ Ê≥®ÊÑèË¶ÅÂä†Ê†áÁ≠æ&lt;RequireAll&gt; require all granted require not ip/host &lt;ÂÜÖÂÆπ&gt; &lt;/RequireAll&gt; ËÆæÁΩÆÂÆåÊàêÂêéËÆ∞ÂæóÈáçÂêØÊúçÂä°ÔºåÂ¶ÇÊûúÂá∫Áé∞error systemctl status httpd -lÔºåÊü•ÁúãÈîôËØØÂéüÂõ† ls -Z Êü•ÁúãÊñá‰ª∂ÁöÑ‰∏ä‰∏ãÊñá]]></content>
      <categories>
        <category>Linux</category>
        <category>http</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxËøõÁ®ãÁÆ°ÁêÜ]]></title>
    <url>%2F%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[ËøõÁ®ãÁÆ°ÁêÜËøõÁ®ãÊòØËøêË°å‰∏≠ÁöÑÂèØÊâßË°åÁ®ãÂ∫èÔºå‰∏Ä‰∏™Á®ãÂ∫èÊúâ‰∏Ä‰∏™ÊàñÂ§ö‰∏™ËøõÁ®ãËøõÁ®ãÔºöÂÜÖÂ≠òÂú∞ÂùÄÁ©∫Èó¥ÔºåÂÆâÂÖ®Â±ûÊÄßÔºå‰∏Ä‰∏™ÊàñÂ§ö‰∏™Á∫øÁ®ãÔºåÁä∂ÊÄÅÁà∂ËøõÁ®ãÂèØ‰ª•ÂàõÂª∫Â≠êËøõÁ®ã Á∫¢Â∏Ω7ÁöÑÁ¨¨‰∏Ä‰∏™ËøõÁ®ãÊòØsystemdÔºåÊâÄÊúâËøõÁ®ãÈÉΩÊòØÁ¨¨‰∏Ä‰∏™ËøõÁ®ãÁöÑÂêé‰ª£ÔºåPIDÔºàËøõÁ®ãidÔºâ,systemdÁöÑPIDÊòØ1ÔºåPPIDÔºàÁà∂ËøõÁ®ãidÔºâ ps aux Êü•ÁúãÊâÄÊúâÁªàÁ´ØÔºåÊâÄÊúâ Áî®Êà∑ÔºåÊâÄÊúâËøõÁ®ã(ÈùôÊÄÅÁöÑÔºåÊü•ÁúãÊüê‰∏Ä‰∏™Áû¨Èó¥ÁöÑ‰ø°ÊÅØ) pstreeÊü•ÁúãËøõÁ®ãÊ†ë ËøõÁ®ãÊúâ‰∏âÁßçÁä∂ÊÄÅ R ËøêË°åÁä∂ÊÄÅ S Áù°Áú†Áä∂ÊÄÅ T ÊöÇÊó∂Áä∂ÊÄÅ ps aux ÂëΩ‰ª§ Êü•ÁúãÊâÄÊúâÁªàÁ´ØÔºåÊâÄÊúâÁî®Êà∑ÔºåÊâÄÊúâÁî®Êà∑ÁöÑËøõÁ®ã ttyË°®Á§∫ÁªàÁ´ØÔºåËÄåptsÊòØÊâÄË∞ìÁöÑËôöÊãüÁªàÁ´ØÔºåÂÖ∑‰ΩìË°®Áé∞‰∏∫ÂΩì‰Ω†ÊâìÂºÄ‰∏Ä‰∏™ÁªàÁ´ØÔºåËøô‰∏™ÁªàÁ´ØÂ∞±Âè´ÂÅöpts/0ÔºåÂΩì‰Ω†Âú®ÊâìÂºÄÂè¶‰∏Ä‰∏™ÁªàÁ´ØÔºåËøô‰∏™ÁªàÁ´ØÂ∞±Âè´ÂÅöpts/1 123456789101112# Êü•ÁúãÂΩìÂâçÁªàÁ´ØÁöÑËøõÁ®ã# tty1 Ë°®Á§∫ÂΩìÂâçÁªàÁ´Ø# pts/0Ë°®Á§∫ËôöÊãüÁªàÁ´Ø[root@chenxiaojian chenxiaojian]# ps a PID TTY STAT TIME COMMAND 8138 tty1 Ssl+ 0:13 /usr/bin/X :0 -background none -noreset -audit 4 -verbose -auth /run/gdm/aut 10434 pts/0 Ss 0:00 bash 11331 pts/0 S 0:00 su 11362 pts/0 S 0:00 bash 11922 pts/0 R+ 0:00 ps a[root@chenxiaojian chenxiaojian]# 12345678910111213# headÈªòËÆ§ÊòØËæìÂá∫10Ë°åÁªìÊûú[root@chenxiaojian chenxiaojian]# ps aux | headUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDroot 1 0.3 0.3 128560 7208 ? Ss 20:59 0:13 /usr/lib/systemd/systemd --switched-root --system --deserialize 22root 2 0.0 0.0 0 0 ? S 20:59 0:00 [kthreadd]root 3 0.0 0.0 0 0 ? S 20:59 0:00 [ksoftirqd/0]root 5 0.0 0.0 0 0 ? S&lt; 20:59 0:00 [kworker/0:0H]root 7 0.0 0.0 0 0 ? S 20:59 0:00 [migration/0]root 8 0.0 0.0 0 0 ? S 20:59 0:00 [rcu_bh]root 9 0.0 0.0 0 0 ? R 20:59 0:02 [rcu_sched]root 10 0.0 0.0 0 0 ? S&lt; 20:59 0:00 [lru-add-drain]root 11 0.0 0.0 0 0 ? S 20:59 0:00 [watchdog/0] USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND 1Ôºö‰ª£Ë°®Ëøô‰∏™ËøõÁ®ãÊòØ‰ª•‰ªÄ‰πàÁî®Êà∑ËøõË°åÊâßË°å 2Ôºö‰ª£Ë°®ËøõÁ®ãÂîØ‰∏ÄÊ†áËØÜID 3ÔºöË°®Á§∫ËøõÁ®ãÂç†Áî®ÁöÑCPU 4ÔºöË°®Á§∫ËøõÁ®ãÂç†Áî®ÁöÑÂÜÖÂ≠ò 5ÔºöVSZË°®Á§∫ËôöÊãüÂÜÖÂ≠ò ÔºàËôöÊãüÂÜÖÂ≠òÔºåÂ∞±ÊòØÂΩìÁâ©ÁêÜÂÜÖÂ≠ò‰∏çË∂≥Êó∂ÔºåÂ∞ÜÁ°¨ÁõòÁ©∫Èó¥‰Ωú‰∏∫ÂÜÖÂ≠òËøõË°å‰ΩøÁî®ÔºåWindowsÂÆ∂ÊóèÁöÑ‚ÄúËôöÊãüÂÜÖÂ≠ò‚ÄùÔºõLinuxÁöÑ‚Äú‰∫§Êç¢Á©∫Èó¥‚ÄúÔºâ 6ÔºöË°®Á§∫Âç†Áî®ÁöÑÁâ©ÁêÜÂÜÖÂ≠ò 7ÔºöTTYË°®Á§∫ËøõÁ®ãÁî®Êà∑ÁôªÂΩïÁöÑÁªàÁ´ØÔºåÂ¶ÇÊûúÊòØÔºüÔºåÂàôË°®Á§∫ÊòØÁ≥ªÁªüÂÜÖÈÉ®ËøõÁ®ã 8ÔºöË°®Á§∫ËøõÁ®ãÁöÑÁä∂ÊÄÅ ÔºàËøõÁ®ãÁöÑÁä∂ÊÄÅÂèÇËßÅhttps://blog.csdn.net/weixin_43116910/article/details/88544155Ôºâ 9ÔºöËøõÁ®ãÂºÄÂßãÁöÑÊó∂Èó¥ 10ÔºöËøõÁ®ãÊâßË°å‰∫ÜÂ§öÂ∞ëÊó∂Èó¥ 11ÔºöË°®Á§∫ËøõÁ®ãÁöÑÂêçÁß∞ topÂëΩ‰ª§Âä®ÊÄÅÊü•ÁúãËøõÁ®ãÁöÑÁä∂ÊÄÅ ‰Ωú‰∏öÁÆ°ÁêÜjobsÊü•Áúã -l ÂèØ‰ª•Êü•ÁúãËøõÁ®ãÁöÑPID Ôºàps j ÂèØ‰ª•Êü•ÁúãÔºâ ctrl + cÁªìÊùü‰Ωú‰∏ö ctrl + zÊöÇÂÅú‰Ωú‰∏ö fg % ËøõÁ®ãÂè∑ ‚ÄîÂ∞ÜËøõÁ®ãË∞ÉÂà∞ÂâçÂè∞ËøõË°åËøêË°å bg %ËøõÁ®ãÂè∑ ‚ÄîÂ∞ÜËøõÁ®ãË∞ÉÂà∞ÂêéÂè∞ËøõË°åËøêË°å Â¶ÇÊûú‰∏Ä‰∏™ËøõÁ®ãÂêéÈù¢Âä†‰∏™&amp; Ë°®Á§∫Âú®ÂêéÂè∞ËøõË°å [chenxiaojian@chenxiaojian ~]$ sleep 100&amp;[6] 19004[chenxiaojian@chenxiaojian ~]$ jobs[1]+ Â∑≤ÂÅúÊ≠¢ sleep 1000[2] Â∑≤ÂÅúÊ≠¢ sleep 1000[3] Â∑≤ÂÅúÊ≠¢ sleep 1000[4] Â∑≤ÂÅúÊ≠¢ sleep 1000[5]- Â∑≤ÂÅúÊ≠¢ sleep 1000[6] ËøêË°å‰∏≠ sleep 100 &amp;[chenxiaojian@chenxiaojian ~]$ killÂëΩ‰ª§ ÂêëËøõÁ®ãÂèëÈÄÅ‰ø°Âè∑Ôºåkill + PID ÁªìÊùüËøõÁ®ã ÔºàËøô‰∏™ËøõÁ®ãÈúÄÊòØÊ≠£Âú®ËøêË°åÁöÑÔºâ kill -l Êü•ÁúãÊâÄÊúâÁöÑ‰ø°Âè∑ 15) SIGTERMÔºàÁªìÊùüËøõÁ®ãÔºâ 18) SIGCONT 19) SIGSTOP ÔºàÊöÇÊó∂ÂÅúÊ≠¢Ôºâ Áî®Ê≥ïÔºökill -s ‰ø°Âè∑ ËøõÁ®ãID 123456789101112131415161718192021[chenxiaojian@chenxiaojian ~]$ sleep 10000^Z[1]+ Â∑≤ÂÅúÊ≠¢ sleep 10000[chenxiaojian@chenxiaojian ~]$ [chenxiaojian@chenxiaojian ~]$ [chenxiaojian@chenxiaojian ~]$ ps j PPID PID PGID SID TTY TPGID STAT UID TIME COMMAND 10412 10434 10434 10434 pts/0 20677 Ss 1000 0:00 bash 15446 15485 15485 15485 tty2 15485 Ss+ 1000 0:00 -bash 17494 17495 17495 10434 pts/0 20677 S 1000 0:00 bash 17495 20651 20651 10434 pts/0 20677 T 1000 0:00 sleep 10000 17495 20677 20677 10434 pts/0 20677 R+ 1000 0:00 ps j[chenxiaojian@chenxiaojian ~]$ kill -s 18 20651[chenxiaojian@chenxiaojian ~]$ ps j PPID PID PGID SID TTY TPGID STAT UID TIME COMMAND 10412 10434 10434 10434 pts/0 20703 Ss 1000 0:00 bash 15446 15485 15485 15485 tty2 15485 Ss+ 1000 0:00 -bash 17494 17495 17495 10434 pts/0 20703 S 1000 0:00 bash 17495 20651 20651 10434 pts/0 20703 S 1000 0:00 sleep 10000 17495 20703 20703 10434 pts/0 20703 R+ 1000 0:00 ps j[chenxiaojian@chenxiaojian ~]$ pkillÂëΩ‰ª§ pkill + ËøõÁ®ãÂêç pkill httpd killallÂëΩ‰ª§ ÊùÄÊ≠ª‰∏Ä‰∏™ËøõÁ®ãÊâÄÊúâÁöÑÁõ∏ÂÖ≥ËøõÁ®ã nice ‰ºòÂÖàÁ∫ß ‰ΩøÁî®cpuÔºå‰ºòÂÖàÁ∫ßË∂äÂ§ßÔºàÊï∞ÂÄºË∂äÂ∞èÔºâÔºå‰ΩøÁî®CPUË∂ä‰ºòÂÖà NI -20~19 nice -n &lt;‰ºòÂÖàÁ∫ß&gt; &lt;ÂëΩ‰ª§&gt; ÊåáÂÆöÂëΩ‰ª§ËøêË°åÁöÑ‰ºòÂÖàÁ∫ß 1234567891011121314151617[root@chenxiaojian chenxiaojian]# toptop - 22:11:20 up 18 min, 2 users, load average: 0.40, 0.29, 0.41Tasks: 290 total, 4 running, 286 sleeping, 0 stopped, 0 zombie%Cpu(s): 20.5 us, 10.4 sy, 0.0 ni, 68.7 id, 0.0 wa, 0.0 hi, 0.4 si, KiB Mem : 1863224 total, 166364 free, 775772 used, 921088 buff/caKiB Swap: 0 total, 0 free, 0 used. 836644 avail M PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ 9687 chenxia+ 20 0 3047484 194884 57180 S 14.1 10.5 0:12.69 8080 root 20 0 330764 56620 31216 R 9.5 3.0 0:04.84 11070 chenxia+ 20 0 840580 27216 15696 S 4.6 1.5 0:02.38 12472 root 20 0 162144 2440 1596 R 1.3 0.1 0:00.39 7054 root 20 0 320216 4504 3000 S 1.0 0.2 0:01.55 12331 root 20 0 0 0 0 S 1.0 0.0 0:00.03 1 root 20 0 128436 6664 3740 S 0.7 0.4 0:03.30 7846 root 20 0 1016748 10724 3624 S 0.3 0.6 0:01.01 renice Ë∞ÉÊï¥ËøêË°åÁöÑÁ®ãÂ∫èÁöÑ‰ºòÂÖàÁ∫ß renice -n &lt;‰ºòÂÖàÁ∫ß&gt; -p SSH ÔºàÂÆâÂÖ®Â§ñÂ£≥ÂçèËÆÆÔºâ Áî®Êù•ÂÆûÁé∞‰∏§Âè∞Êú∫Âô®ÁöÑËøúÁ®ãÁôªÂΩïÂíåÂÆâÂÖ®ÁöÑÊï∞ÊçÆ‰º†ËæìÔºåÂÖ∂‰øùËØÅÊï∞ÊçÆÂÆâÂÖ®ÁöÑÂéüÁêÜÊòØÈùûÂØπÁß∞Âä†ÂØÜ ‰º†ÁªüÁöÑÂØπÁß∞Âä†ÂØÜ‰ΩøÁî®ÁöÑÊòØ‰∏Ä‰∏™Â•óÁßòÂåôÔºåÊï∞ÊçÆÁöÑÂä†ÂØÜ‰ª•ÂèäËß£ÂØÜÁî®ÁöÑÈÉΩÊòØËøô‰∏ÄÂ•óÂØÜÂåôÔºåÈ£éÈô©ÊÄßËæÉÂ§ß ÈùûÂØπÁß∞Âä†ÂØÜÂ∞±ÊòØ‰∏∫‰∫ÜËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºåÂÆÉÂåÖÂê´‰∏§Â•óÂØÜÂåôÔºåÂÖ¨ÂåôÂíåÁßÅÂåô„ÄÇÂÖ¨ÂåôÁî®Êù•Âä†ÂØÜÔºåÁßÅÂåôÁî®Êù•Ëß£ÂØÜÔºåÂÖ¨Âåô‰∏çËÉΩËÆ°ÁÆóÂéªÁßÅÂåôÔºåÊâÄ‰ª•ÂÖ¨Âåô‰øùÂ≠òÂú®ÂÆ¢Êà∑Á´ØÔºå‰πü‰∏ç‰ºö‰∫ßÁîüÈ£éÈô©„ÄÇ ËøêË°åÂéüÁêÜhttps://www.cnblogs.com/xz816111/p/9479139.html ÂÆûÁé∞ÂÖçÂØÜÁôªÂΩï ssh-keygenÂëΩ‰ª§ Âú®ÂÆ¢Êà∑Á´ØÁîüÊàêÂØÜÈí•ÂØπÔºåËæìÂÖ•ssh-keygenÂëΩ‰ª§ ssh-copy-id &lt;ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄ&gt; Ôºà‰∏∫Á¨¨‰∏ÄÊ¨°ÁôªÂΩïÂÅöÂáÜÂ§áÔºâ ‰∏ãÊ¨°Áõ¥Êé•ÁôªÂΩïÂ∞±Ë°åÂï¶ÔºÅÔºÅÔºÅ ÊéßÂà∂ssh /etc/ssh/sshd_config ÈÖçÁΩÆÊñá‰ª∂ PasswordAuthentication yes ÊòØÂê¶ÊîØÊåÅÂØÜÁ†ÅÁ≠âÂΩï PermitRootLogin yes ÊòØÂê¶ÊîØÊåÅrootÁî®Êà∑ÁôªÂΩï PubkeyAuthentication yes ÊòØÂê¶ÊîØÊåÅÂÖ¨Èí•ÂÖçÂØÜÁôª ÔºàËÆ∞ÂæóÈáçÂêØssdÊúçÂä°Ôºâ scp Ë∑®Á≥ªÁªüÂ§çÂà∂ Êñá‰ª∂ scp -r 192.168.18.132:/root/dir2 /root/ ‰ªéËøúÁ´ØÊúçÂä°Âô®Êã∑Ë¥ùÂà∞Êú¨Êú∫ -rË°®Á§∫Êã∑Ë¥ùÁõÆÂΩï scp -r /root/dir1/ 192.168.18.132:/root/ ‰ªéÊú¨Êú∫Êã∑Ë¥ùÊñá‰ª∂/ÁõÆÂΩïÂà∞ËøúÁ´ØÊúçÂä°Âô® SFTP &lt;ÊúçÂä°Âô®ÁöÑip&gt; ÂêåÊ≠•Êñá‰ª∂„ÄÅrsync &lt;ÈÄâÈ°π&gt; &lt;Ê∫êÊñá‰ª∂&gt; &lt;ÁõÆÊ†áÊñá‰ª∂&gt; -a ÂΩíÊ°£Ê®°Âºè -v Êü•ÁúãËøáÁ®ã -nË°®Á§∫Á©∫ËøêË°åÔºàÂ∞±ÊòØÊâßË°åËøô‰∏™ÈÄâÈ°πÂêéÔºå‰ºöËæìÂá∫ÈÇ£‰∫õÊñá‰ª∂‰ºöÂêåÊ≠•ÔºåÁ°ÆËÆ§Êó†ËØØÂêéÂ∞±ÂèØ‰ª•Áî®-avËøõË°åÂêåÊ≠•‰∫ÜÔºâ Âú®‰∏§‰∏™Á≥ªÁªüÈó¥ÂêåÊ≠•Êñá‰ª∂ÔºåÂè™‰ºöÂêåÊ≠•‰∏çÂêåÁöÑÊñá‰ª∂ 123456789101112131415161718192021222324252627282930313233343536[root@chenxiaojian ~]# mkdir dir1 dir2[root@chenxiaojian ~]# llÊÄªÁî®Èáè 8-rw-------. 1 root root 1694 9Êúà 15 22:00 anaconda-ks.cfgdrwxr-xr-x. 2 root root 6 9Êúà 27 11:27 dir1drwxr-xr-x. 2 root root 6 9Êúà 27 11:27 dir2-rw-r--r--. 1 root root 1742 9Êúà 15 22:03 initial-setup-ks.cfgdrwxr-xr-x. 2 root root 6 9Êúà 20 21:37 ÂÖ¨ÂÖ±drwxr-xr-x. 2 root root 6 9Êúà 20 21:37 Ê®°Êùødrwxr-xr-x. 2 root root 6 9Êúà 20 21:37 ËßÜÈ¢ëdrwxr-xr-x. 2 root root 6 9Êúà 20 21:37 ÂõæÁâádrwxr-xr-x. 2 root root 6 9Êúà 20 21:37 ÊñáÊ°£drwxr-xr-x. 2 root root 6 9Êúà 20 21:37 ‰∏ãËΩΩdrwxr-xr-x. 2 root root 6 9Êúà 20 21:37 Èü≥‰πêdrwxr-xr-x. 2 root root 6 9Êúà 20 21:37 Ê°åÈù¢[root@chenxiaojian ~]# touch dir1/1.txt[root@chenxiaojian ~]# [root@chenxiaojian ~]# ls dir1 dir2dir1:1.txt[root@chenxiaojian ~]# rsync -av dir1 dir2sending incremental file listdir1/dir1/1.txtsent 119 bytes received 39 bytes 316.00 bytes/sectotal size is 0 speedup is 0.00[root@chenxiaojian ~]# ls dir1 dir2dir1:1.txtdir2:dir1[root@chenxiaojian ~]# Êó•ÂøóÁõÆÂΩïÁªìÊûÑ systemctl status rsyslog Á≥ªÁªüÊó•ÂøóÊúçÂä° systemctl status systemd-journal Êî∂ÈõÜÊó•ÂøóÊúçÂä° /var/log Êó•ÂøóÁõÆÂΩï message Â§ßÈÉ®ÂàÜÊó•Âøó secure ÂÆâÂÖ® boot.log Á≥ªÁªüÂêØÂä®ÁöÑÊó•Âøó ÈÖçÁΩÆÊñá‰ª∂/etc/rsyslog.conf Á≥ªÁªüÂêØÂä® graphical.target (ÂõæÂΩ¢ÂåñÁïåÈù¢) muti-user.target ÂëΩ‰ª§Ë°å emergency.target Á¥ßÊÄ•Ê®°Âºè rescue.target ÊïëÊè¥Ê®°Âºè systemctl set-default &lt;ÁõÆÊ†á&gt; Ê∞∏‰πÖ systemd.unit=&lt;ÁõÆÊ†á&gt;ÔºåÊåâctrl + x Âä†ËΩΩ]]></content>
      <categories>
        <category>Linux</category>
        <category>LinuxËøõÁ®ãÁÆ°ÁêÜ</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxÁ∫¢Â∏ΩÊØîËµõÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢ò]]></title>
    <url>%2FLinux%E7%BA%A2%E5%B8%BD%E6%AF%94%E8%B5%9B%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[Êü•ÁúãÊú¨Êú∫ÁöÑËØ≠Ë®Ä echo $LANGÔºålocale ÔºàÊü•ÁúãÊú¨Êú∫ÂÆâË£ÖÁöÑËØ≠Ë®ÄÂåÖÔºâ‰πüÂèØ‰ª•ËÆæÁΩÆsshÂ∑•ÂÖ∑ÁöÑËØ≠Ë®ÄÁºñÁ†ÅÁ¨¨0ÈÅìÈ¢ò ÈúÄË¶ÅÊ≥®ÊÑètouch /.autorelabelÁöÑÊãºÂÜô ‰øÆÊîπÁΩëÂç°ÁöÑÁΩëÁªúËøûÊé•ÁöÑÈÖçÁΩÆ‰ø°ÊÅØÔºåÂ¶ÇÊûúÁΩëÂç°ÁöÑÂêçÂ≠óÊòØsystem eth0,ÈÇ£‰πànmcli con modifyÊó∂ Ë¶ÅÂä†ÂèåÂºïÂè∑‚Äù connectionÁöÑÈÖçÁΩÆ‰ø°ÊÅØÁöÑÊñá‰ª∂‰∏∫Ôºö/etc/sysconfig/network-scripts/ifcfg-ens33 ÔºàË∑ØÂæÑÊúÄÂêé‰∏Ä‰∏™‰∏∫ÁΩëÂç°ÁöÑÂêçÔºâ Ê≥®ÊÑèÔºö‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂Êó∂ÔºåÊ∑ªÂä†ip‰∏∫IPADDR1= Ê∑ªÂä†Êé©Á†Å‰∏∫ÔºöPREFIX1= ÔºàÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØIPADDRÁöÑ1Ë°®Á§∫‰∏Ä‰∏™connectionÂèØ‰ª•ÊúâÂ§ö‰∏™IpÔºåÈÇ£‰πàPREFIX1ÂêéÈù¢ÁöÑÊï∞Â≠óË¶ÅÂØπÂ∫îÔºâÔºåÁΩëÂÖ≥ÔºöGATEWAY1= DNS1= ËÆ∞ÂæóÈáçÂêØÁΩëÁªú systemctl restart network Á¨¨‰∏ÄÈÅìÈ¢òÔºöËÆæÁΩÆselinux Ê∞∏‰πÖÁîüÊïà vim /etc/selinux/config ËÆæÁΩÆ‰∏∫enforcing Á¨¨‰∫åÈÅìÈ¢òÔºöyumÊ∫ê /etc/yum.repo/*.repo yum-config-manager ‚Äìadd &lt;Âä†Ê∫êÁöÑÂú∞ÂùÄ&gt; ÁÑ∂ÂêéÂú®ÂæÄÊñ∞ÁîüÊàêÁöÑ.repoÊñá‰ª∂‰∏≠Â¢ûÂä†gpgcheck=0ÔºåÊâßË°åyum clean all ,Êü•ÁúãÂåÖÊï∞Èáè‚Äìyum repolist Á¨¨‰∏âÈÅìÈ¢òÔºöÊâ©ÂÆπLVM Êü•ÁúãÂëΩ‰ª§Ôºölsblk df -Th pvs „ÄÅvgs lvs È¶ñÂÖàÊü•ÁúãvgÊòØÂê¶ÊúâÂâ©‰ΩôÁ©∫Èó¥ÔºåÂ¶ÇÊûúÊúâÔºåÁõ¥Êé•ÊâßË°ålvextend -L 700M /dev/vg1/lvm1 ÔºàËøô‰∏™Ë∑ØÂæÑÂèØ‰ª•Êü•ÁúãÔºâ ÂàõÂª∫Â•ΩÂàÜÂå∫ÂêéÔºå‰ΩøÁî®pvcreate /dev/sdb2ÔºåÂ¶ÇÊûúÊú™ÊâæÂà∞ËÆæÂ§áÔºåÂèØ‰ª•‰ΩøÁî®partprobe ÂèØ‰ª•‰ΩøÁî®fdisk -l /dev/sdbÊü•ÁúãÁ£ÅÁõòÁöÑ‰ø°ÊÅØÔºå‰πüÂèØ‰ª•ËøõÂÖ•fdisk /dev/sdbËøõÂÖ•Êìç‰ΩúÁïåÈù¢ÔºåpÊâìÂç∞‰ø°ÊÅØÊü•ÁúãÔºå fdisk -lÊü•ÁúãÊâÄÊúâÁ£ÅÁõòÁöÑ‰ø°ÊÅØ ÈóÆÈ¢òÔºöÈúÄË¶ÅÂ∞ÜÂàÜÂå∫ÁöÑÁ±ªÂûã‰ªéÈªòËÆ§ÁöÑlinuxÊîπ‰∏∫8e linux lvm Â∞±ËÉΩÂàõÂª∫lvmÂêó Á≠îÊ°àÊòØ‰∏çËÉΩÔºöÂ¶ÇÊûú‰∏ç‰øÆÊîπÂàÜÂå∫ÁöÑÁ≥ªÁªüÁ±ªÂûãÔºåÈáçÂêØÂ∞±‰ºöËøõÂÖ•Á¥ßÊÄ•Ê®°ÂºèÔºåÂèØËÉΩÊòØÂõ†‰∏∫‰∏çËÉΩÊ≠£Á°ÆÊåÇËΩΩÁÑ∂ÂêéÂá∫Áé∞ÈîôËØØ Ê≥®ÊÑèÔºölv + -LÊåáÂÆöÂ§ßÂ∞èÔºå-nÊåáÂÆöÂêçÂ≠ó lvcreate -L 500M vg2 -n lvm2 lvextend -L 600M /dev/vg2/lvm2 ÈáçÊñ∞ËØÜÂà´Êñá‰ª∂Â§ßÂ∞èresizeof Á¨¨ÂõõÈÅìÈ¢òÔºöÁî®Êà∑‰∏éÁªÑ echo 123 | passwd ‚Äìstdin user1 Ë∑üÁî®Êà∑Áõ∏ÂÖ≥ÁöÑ‰∏â‰∏™Êñá‰ª∂ /etc/passwd /etc/group /etc/shadow Á¨¨‰∫îÈÅìÈ¢òÔºöÊñá‰ª∂ÊùÉÈôê ‰øÆÊîπÊñá‰ª∂ÁöÑÊâÄÊúâËÄÖÂíåÊâÄÊúâÁªÑ chown : &lt;Êñá‰ª∂&gt; ACLÁâπÊÆäÊùÉÈôê Á¨¨ÂÖ≠ÈÅìÈ¢òÔºöÂë®Êúü‰ªªÂä°ÔºàÂàÜÊó∂Êó•ÊúàÂë®Ôºâ crontab -e -u natasha -eË°®Á§∫ÁºñËæëÔºåuË°®Á§∫Áî®Êà∑ Á¨¨‰∏ÉÂà∞È¢òÔºöÁõÆÂΩïÊùÉÈôê ËÆ∞‰ΩèUGOA Ê≥®ÊÑèÁâπÊÆäÊùÉÈôê chomd g+s &lt;ÁõÆÂΩï&gt; ËØ•ÁõÆÂΩï‰∏ãÁöÑÊñá‰ª∂Ëá™Âä®ÁªßÊâøgroupÂêç Á¨¨ÂÖ´ÈÅìÈ¢òÔºöÊõ¥Êñ∞ÂÜÖÊ†∏ Ê≥®ÊÑèwgetÂëΩ‰ª§Ôºå‰∏ãËΩΩÊñá‰ª∂ÊòØ‰∏ãËΩΩÂà∞ÂΩìÂâçÁõÆÂΩïÔºåÂ¶ÇÊûúÊ≤°ÊúâÊåáÂÆö-OÔºåÈÇ£‰πàËøô‰∏™Êñá‰ª∂ÁöÑÈªòËÆ§ÂëΩÂêçÂ∞±ÊòØÁΩëÁªúÈìæÊé•ÁöÑÊúÄÂêé‰∏Ä‰∏™ / ÂêéÈù¢ÁöÑÂ≠óÁ¨¶ ÁÑ∂ÂêéÂÆâË£ÖÔºårpm -ivh &lt;ÂåÖÂêç&gt; uname -r Êü•Áúã rpm -ivh ‚ÄìforceË°®Á§∫Âº∫Âà∂ÂÆâË£Ö Á¨¨‰πùÈ¢òÔºöLDAPÁ¨¨ÂçÅÈ¢òÔºöautofsËá™Âä®ÊåÇËΩΩÁ¨¨ÂçÅ‰∏ÄÈ¢òÔºöÂèØËÉΩÈúÄË¶ÅÂÆâË£ÖËΩØ‰ª∂ÂåÖyum -y install chrony ÂæÖÂÆåÊàê‰ªªÂä°ÔºöÈÖçÁΩÆssh https://wenku.baidu.com/view/6486caa384868762cbaed52e.html?sxts=1569289654410]]></content>
      <categories>
        <category>Linux</category>
        <category>LinuxÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢ò</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxÁΩëÁªúÈÖçÁΩÆ]]></title>
    <url>%2FLinux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[ÁΩëÁªúÈÖçÁΩÆdevice ËÆæÂ§áÔºöÊúâÁâ©ÁêÜËÆæÂ§áÔºàens33Ôºâ ËôöÊãüËÆæÂ§á Ôºàvirbr0Ôºâ‰∏Ä‰∏™ËÆæÂ§áÂèØ‰ª•ÊúâÂ§ö‰∏™connectÔºàËøûÊé•ÔºâÔºå‰ΩÜÊòØÂêå‰∏Ä‰∏™Êó∂Èó¥Âè™ËÉΩÊøÄÊ¥ª‰∏Ä‰∏™ËøûÊé•ÔºåÁõ∏ÂΩì‰∫é‰∏Ä‰∏™ÁΩëÂç°ÂèØ‰ª•ÂàáÊç¢‰∏çÂêåÁöÑÁΩëÁªúÈÖçÁΩÆ ÁΩëÁªúÁÆ°ÁêÜ NetworkManagerÂ∑•ÂÖ∑Êúânmcli , nmtui, nm-connection-editor‰ΩøÁî®Ëøô‰∫õÂ∑•ÂÖ∑ÁöÑÂâçÊèêÊòØNetworkManagerËøô‰∏™ÊúçÂä°ÊúâÂºÄÁùÄsystemctl status NetworkManager Êñπ‰æøËÆ∞ÂøÜÔºönm ==&gt; NetworkManager cli ==&gt; command line ÔºàÂëΩ‰ª§Ë°åÔºâ tui ==&gt;text user interface ÔºàÊñáÊú¨Áî®Êà∑Êé•Âè£Ôºâ nmcliÂëΩ‰ª§Ë°åÊñπÂºèÁÆ°ÁêÜÁΩëÁªú nmcli connection Êü•ÁúãÁΩëÁªúËøûÊé• nmcli device Êü•ÁúãÁΩëÁªúËÆæÂ§á 1234567891011[chenxiaojian@chenxiaojian ~]$ nmcli connection NAME UUID TYPE DEVICE ens33 fdb135ea-6548-47ca-9de3-f2d2fb390962 ethernet ens33 virbr0 7db188c9-a5ef-4000-ae38-925de7a46397 bridge virbr0 [chenxiaojian@chenxiaojian ~]$ nmcli deviceDEVICE TYPE STATE CONNECTION ens33 ethernet ËøûÊé•ÁöÑ ens33 virbr0 bridge ËøûÊé•ÁöÑ virbr0 lo loopback Êú™ÊâòÁÆ° -- virbr0-nic tun Êú™ÊâòÁÆ° -- [chenxiaojian@chenxiaojian ~]$ nmcli device show ens33 Êü•Áúãens33Ëøô‰∏™ÁΩëÂç°ÁöÑÁΩëÁªúÈÖçÁΩÆ 1234567891011121314151617181920[chenxiaojian@chenxiaojian ~]$ nmcli device show ens33GENERAL.DEVICE: ens33GENERAL.TYPE: ethernetGENERAL.HWADDR: 00:0C:29:21:50:C3GENERAL.MTU: 1500GENERAL.STATE: 100 (ËøûÊé•ÁöÑ)GENERAL.CONNECTION: ens33GENERAL.CON-PATH: /org/freedesktop/NetworkManager/ActiveConnection/1WIRED-PROPERTIES.CARRIER: ÂºÄIP4.ADDRESS[1]: 192.168.18.131/24IP4.GATEWAY: 192.168.18.2IP4.ROUTE[1]: dst = 0.0.0.0/0, nh = 192.168.18.2, mt = 100IP4.ROUTE[2]: dst = 192.168.18.0/24, nh = 0.0.0.0, mt = 100IP4.DNS[1]: 192.168.18.2IP4.DOMAIN[1]: localdomainIP6.ADDRESS[1]: fe80::f12e:225c:75ea:d0e4/64IP6.GATEWAY: --IP6.ROUTE[1]: dst = fe80::/64, nh = ::, mt = 100IP6.ROUTE[2]: dst = ff00::/8, nh = ::, mt = 256, table=255[chenxiaojian@chenxiaojian ~]$ \ addËøûÊé• ÔºàËã•ÂøòËÆ∞Áõ∏ÂÖ≥ÂëΩ‰ª§ÔºåÊåâtabËøõË°åÊü•ÁúãÔºâcon-name Ë°®Á§∫ËøûÊé•ÂêçÔºàËá™Â∑±ËÆæÁΩÆÔºâ autoconnect Ë°®Á§∫Ëá™Âä®ËøûÊé• ifname Ë°®Á§∫Êé•Âè£Âêç ÔºàÂÜôÁΩëÂç°ÁöÑÂêçÂ≠óÔºâ type ethernet ÔºàË°®Á§∫‰ª•Â§™ÁΩëÔºâ 123456789[chenxiaojian@chenxiaojian ~]$ nmcli connection add con-name ens33-con1 autoconnect yes ifname ens33 type ethernet ipv4.addresses 10.10.10.10/24 ipv4.gateway 10.10.10.254ËøûÊé•‚Äúens33-con1‚Äù(fbd49c40-2e33-4fc7-87f5-1b06bc6a304d) Â∑≤ÊàêÂäüÊ∑ªÂä†„ÄÇ[chenxiaojian@chenxiaojian ~]$ nmcli connection NAME UUID TYPE DEVICE ens33 fdb135ea-6548-47ca-9de3-f2d2fb390962 ethernet ens33 virbr0 7db188c9-a5ef-4000-ae38-925de7a46397 bridge virbr0 ens33-con1 fbd49c40-2e33-4fc7-87f5-1b06bc6a304d ethernet -- [chenxiaojian@chenxiaojian ~]$ 123456789[chenxiaojian@chenxiaojian ~]$ ls /etc/sysconfig/network-scripts/ifcfg-ens33 ifdown-ippp ifdown-Team ifup-ib ifup-ppp init.ipv6-globalifcfg-ens33-con1 ifdown-ipv6 ifdown-TeamPort ifup-ippp ifup-routes network-functionsifcfg-lo ifdown-isdn ifdown-tunnel ifup-ipv6 ifup-sit network-functions-ipv6ifdown ifdown-post ifup ifup-isdn ifup-Team ifdown-bnep ifdown-ppp ifup-aliases ifup-plip ifup-TeamPort ifdown-eth ifdown-routes ifup-bnep ifup-plusb ifup-tunnel ifdown-ib ifdown-sit ifup-eth ifup-post ifup-wireless [chenxiaojian@chenxiaojian ~]$ ls /etc/sysconfig/network-scripts/ ÂèØ‰ª•ÂèëÁé∞ÔºåÂú®/etc/sysconfig/network-scriptsËøô‰∏™ÁõÆÂΩï‰∏ãÂàõÂª∫‰∫Üifcfg-ens33-con1Ëøô‰∏™Êñá‰ª∂ÔºåËøôÊ†∑Â¶ÇÊûúÊàë‰ª¨ÊÉ≥‰øÆÊîπËøô‰∏™ËøûÊé•ÁöÑÈÖçÁΩÆÔºåÂØπËøô‰∏™Êñá‰ª∂ËøõË°å‰øÆÊîπÂ∞±ÂèØ‰ª•‰∫Ü up ÊøÄÊ¥ªËøûÊé•nmcli connection up &lt;ËøûÊé•Âêç&gt; 12345678[chenxiaojian@chenxiaojian ~]$ nmcli connection up ens33-con1ËøûÊé•Â∑≤ÊàêÂäüÊøÄÊ¥ªÔºàD-Bus Ê¥ªÂä®Ë∑ØÂæÑÔºö/org/freedesktop/NetworkManager/ActiveConnection/4Ôºâ[chenxiaojian@chenxiaojian ~]$ nmcli connection NAME UUID TYPE DEVICE ens33-con1 fbd49c40-2e33-4fc7-87f5-1b06bc6a304d ethernet ens33 virbr0 7db188c9-a5ef-4000-ae38-925de7a46397 bridge virbr0 ens33 fdb135ea-6548-47ca-9de3-f2d2fb390962 ethernet -- [chenxiaojian@chenxiaojian ~]$ 12345678910111213141516171819202122[chenxiaojian@chenxiaojian ~]$ ip a1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:0c:29:21:50:c3 brd ff:ff:ff:ff:ff:ff inet 192.168.18.131/24 brd 192.168.18.255 scope global noprefixroute dynamic ens33 valid_lft 1796sec preferred_lft 1796sec inet 10.10.10.10/24 brd 10.10.10.255 scope global noprefixroute ens33 valid_lft forever preferred_lft forever inet6 fe80::8e5a:83f1:7c40:6578/64 scope link noprefixroute valid_lft forever preferred_lft forever3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000 link/ether 52:54:00:e1:6b:19 brd ff:ff:ff:ff:ff:ff inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0 valid_lft forever preferred_lft forever4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000 link/ether 52:54:00:e1:6b:19 brd ff:ff:ff:ff:ff:ff[chenxiaojian@chenxiaojian ~]$ ÂèØ‰ª•ÁúãËßÅens33Ëøô‰∏™ÁΩëÂç°Â§ö‰∫Ü‰∏™ipÂú∞ÂùÄ10.10.10.10/24 delete Âà†Èô§ËøûÊé•nmcli connection delete &lt;ËøûÊé•Âêç&gt; 1234567[chenxiaojian@chenxiaojian ~]$ nmcli connection delete ens33-con1ÊàêÂäüÂà†Èô§ËøûÊé• 'ens33-con1'Ôºàfbd49c40-2e33-4fc7-87f5-1b06bc6a304dÔºâ„ÄÇ[chenxiaojian@chenxiaojian ~]$ nmcli connection NAME UUID TYPE DEVICE ens33 fdb135ea-6548-47ca-9de3-f2d2fb390962 ethernet ens33 virbr0 7db188c9-a5ef-4000-ae38-925de7a46397 bridge virbr0 [chenxiaojian@chenxiaojian ~]$ Áõ∏ÂÖ≥ÊäÄÂ∑ßnmcli connection show ens33 | grep ipv4 Êü•Áúãipv4ÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØ ipv4.method ‚Äì autoË°®Á§∫Ëá™Âä®Ëé∑Âèñ ‚Äìmanual Ë°®Á§∫‰∫∫‰∏∫ËÆæÁΩÆ 1234567891011121314151617181920212223[chenxiaojian@chenxiaojian ~]$ nmcli connection show ens33 | grep ipv4ipv4.method: autoipv4.dns: --ipv4.dns-search: --ipv4.dns-options: ""ipv4.dns-priority: 0ipv4.addresses: --ipv4.gateway: --ipv4.routes: --ipv4.route-metric: -1ipv4.route-table: 0 (unspec)ipv4.ignore-auto-routes: Âê¶ipv4.ignore-auto-dns: Âê¶ipv4.dhcp-client-id: --ipv4.dhcp-timeout: 0 (default)ipv4.dhcp-send-hostname: ÊòØipv4.dhcp-hostname: --ipv4.dhcp-fqdn: --ipv4.never-default: Âê¶ipv4.may-fail: ÊòØipv4.dad-timeout: -1 (default)[chenxiaojian@chenxiaojian ~]$ ÊúâÂÖ≥ÈóÆÈ¢òËÆæÁΩÆÂÆåÈùôÊÄÅipÂêéip addrÊü•ÁúãipÂú∞ÂùÄÂá∫Áé∞‰∏§‰∏™ipÁöÑÂéüÂõ†cat /etc/sysconfig/network-scripts/ifcfg-ens33-con1‰∏≠BOOTPROTO=HDCPÔºåÔºàÂºïÂØºÂçèËÆÆÔºâË°®Á§∫Ëá™Âä®Ëé∑ÂèñipÔºåÊâÄ‰ª•ÂΩìÊàë‰ª¨ËÆæÁΩÆÂÆåÊàêÈùôÊÄÅipÂêéÔºåÂä†‰∏äËá™Âä®Ëé∑ÂèñipÂ∞±‰ºöÂá∫Áé∞‰∏§‰∏™ipÔºåËøô‰∏™‰πüÊòØÂÖÅËÆ∏ÁöÑÔºå‰πüÂ∞±ÊòØËØ¥‰∏Ä‰∏™connectionÂèØ‰ª•ËÆæÁΩÆÂ§ö‰∏™ip Ëß£ÂÜ≥ÊñπÊ≥ï Â¶ÇÊûúÊúârootÁî®Êà∑ÊùÉÈôêÔºåÈÇ£‰πà‰øÆÊîπËØ•ËøûÊé•ÁöÑÈÖçÁΩÆ‰ø°ÊÅØ vim /etc/sysconfig/network-scripts/ifcfg-ens33-con1 ÁÑ∂ÂêéÊâæÂà∞BOOTPROTO=HDCPÂ∞ÜÂÖ∂Êîπ‰∏∫noneÔºåË°®Á§∫ÊâãÂä®ËÆæÁΩÆÔºåÊé•ÁùÄÈáçËΩΩÈÖçÁΩÆÊñá‰ª∂Ôºà‰øÆÊîπÂÆåÈÖçÁΩÆÊñá‰ª∂ÈÉΩË¶ÅÈáçËΩΩÔºâÔºå‰∏â‰∏™Ê≠•È™§Ôºönmcli connection reload Ôºånmcli connection down ens33-con1;nmcli connection up ens33-con1ÔºåËá≥‰∫éÊúÄÂêé‰∏ÄÊù°ÂëΩ‰ª§‰∏∫‰ΩïË¶ÅÂä†ÂàÜÂè∑Ôºå‰∏ªË¶ÅÊòØÂΩìÊàë‰ª¨ËøúÁ®ãËøûÊé•Êó∂Ôºå‰Ω†downÂÆåÂêéÔºåÁΩëÁªú‰πüÂ∞±Êñ≠‰∫Ü Â¶ÇÊûúÊ≤°ÊúârootÊùÉÈôêÔºåÂèØ‰ª•‰ΩøÁî®nmcliÂ∑•ÂÖ∑ËøõË°å‰øÆÊîπ nmcli connection modify ens33-con1 ipv4.method a Ë°®Á§∫‰øÆÊîπËé∑Âèñipv4Âú∞ÂùÄÁöÑÊñπÂºè‰∏∫autoÔºåÂ¶ÇÊûúËÆæÁΩÆ‰∏∫ÊâãÂä®Â∞±ËÆæÁΩÆ‰∏∫manual/m,ÁÑ∂ÂêéËøõË°åÂêåÊ†∑ÁöÑ‰∏â‰∏™Ê≠•È™§ Ëøô‰∏™‰∏â‰∏™Ê≠•È™§ÔºåÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®systemctl restart network ÔºàÂΩìNetworkManager‰∏çËÉΩ‰ΩøÁî®ÁöÑÊó∂ÂÄô) ËÆæÁΩÆhostname Ôºà‰∏ªÊú∫ÂêçÁöÑÈÖçÁΩÆÊñá‰ª∂ /etc/hostnameÔºâ12345678[chenxiaojian@chenxiaojian ~]$ hostnamectl set-hostname chen[chenxiaojian@chenxiaojian ~]$ [chenxiaojian@chenxiaojian ~]$ hostnamechen[chenxiaojian@chenxiaojian ~]$ cat /etc/hostnamechen[chenxiaojian@chenxiaojian ~]$ hostnamectl set-hostname chenxiaojian[chenxiaojian@chenxiaojian ~]$ ËÆæÁΩÆÂêçÂ≠óËß£Êûê(Ê†°Âõ≠ÁΩëËá™ÂÆ∂ÁöÑDNSÊúçÂä°Âô®ÁöÑÂú∞ÂùÄÔºö192.168.18.2)hostsÊñá‰ª∂ /etc/hosts Ëøô‰∏™Êñá‰ª∂ÂÖ∂ÂÆûÊ≤°ÊúâÂ§öÂ§ßÁöÑ‰ΩúÁî®Ôºå‰ΩÜÊòØÂ¶ÇÊûú‰Ω†ÊÉ≥Ping ‰∏ªÊú∫ÂêçÔºå‰∏ÄËà¨Êù•ËØ¥ÔºåÈÄöÂ∏∏ÊòØ‰∏ç‰ºöPingÂà∞ÁöÑÔºåÂõ†‰∏∫DNSÊúçÂä°Âô®Ê≤°Êúâ‰Ω†Ëøô‰∏™‰∏ªÊú∫ÂêçÂØπÂ∫îÁöÑipÂú∞ÂùÄÔºåÂ¶ÇÊûúÊÉ≥Ë¶ÅÂÆûÁé∞Ëøô‰∏™ping chenxiaojianËøô‰∏™Ë¶ÅÊ±ÇÔºåÂèØ‰ª•Âú®/etc/hostsËøõË°åÁºñËæë12345678910111213[root@chenxiaojian chenxiaojian]# cat /etc/hosts127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 chenxiaojian::1 localhost localhost.localdomain localhost6 localhost6.localdomain6[root@chenxiaojian chenxiaojian]# ping chenxiaojianPING localhost (127.0.0.1) 56(84) bytes of data.64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.062 ms64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.149 ms64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.111 ms^C--- localhost ping statistics ---3 packets transmitted, 3 received, 0% packet loss, time 2000msrtt min/avg/max/mdev = 0.062/0.107/0.149/0.036 ms[root@chenxiaojian chenxiaojian]# ÈÄöËøáDNSËß£ÊûêÂüüÂêç cat /etc/resolv.conf DNSÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏çÈúÄË¶Å‰øÆÊîπËøô‰∏™Êñá‰ª∂ÔºåÂØπ‰πãÂâçÈÖçÁΩÆÁΩëË∑ØÊñá‰ª∂ÁöÑ‰øÆÊîπ‰ºöËá™Âä®Êõ¥Êñ∞Âà∞Ëøô‰∏™Êñá‰ª∂ vim /etc/sysconfig/network-scripts/ifcfg-ens33 Â∏∏Áî®ÁöÑÁΩëÁªúÊµãËØïÂ∑•ÂÖ∑ ip addr ‚ÄìipÂú∞ÂùÄ ip rout ‚ÄìË∑ØÁî±Ë°® ping ww.baidu,com ping -c2 www.baidu.com Êé•Âèó‰∏§‰∏™ÂåÖÂêéÁªìÊùü ip -s link show ens33 ÊòæÁ§∫ÁΩëÂç°Êé•ÂèóÂåÖÁöÑËØ¶ÁªÜ‰ø°ÊÅØ Êü•ÁúãÁΩëÂç°ÊòØÂê¶ËøûÊé• ethtool + &lt;ÁΩëÂç°Âêç&gt; 1234567[root@chenxiaojian chenxiaojian]# ip -s link show ens332: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000 link/ether 00:0c:29:21:50:c3 brd ff:ff:ff:ff:ff:ff RX: bytes packets errors dropped overrun mcast 5696008 6763 0 0 0 0 TX: bytes packets errors dropped carrier collsns 459731 2879 0 0 0 0 123456789101112131415161718192021222324252627282930313233343536[root@chenxiaojian chenxiaojian]# ethtool ens33Settings for ens33: Supported ports: [ TP ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Full Supported pause frame use: No Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Full Advertised pause frame use: No Advertised auto-negotiation: Yes Advertised FEC modes: Not reported Speed: 1000Mb/s Duplex: Full Port: Twisted Pair PHYAD: 0 Transceiver: internal Auto-negotiation: on MDI-X: off (auto) Supports Wake-on: d Wake-on: d Current message level: 0x00000007 (7) drv probe link Link detected: yes[root@chenxiaojian chenxiaojian]# nmcli conNAME UUID TYPE DEVICE ens33 fdb135ea-6548-47ca-9de3-f2d2fb390962 ethernet ens33 virbr0 ba0275b4-23a5-4131-a3dc-412e0276bf5a bridge virbr0 ÊúâÁ∫øËøûÊé• 1 f496b294-a26f-3b0b-a738-6735c9b47f89 ethernet -- [root@chenxiaojian chenxiaojian]# ethtool virbr0Settings for virbr0: Link detected: no[root@chenxiaojian chenxiaojian]#]]></content>
      <categories>
        <category>Linux</category>
        <category>ÁΩëÁªúÈÖçÁΩÆ</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êó∂ÈíüÂêåÊ≠•ÂíåÂÆöÊó∂‰ªªÂä°]]></title>
    <url>%2F%E6%97%B6%E9%92%9F%E5%90%8C%E6%AD%A5%E5%92%8C%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[Êó∂ÈíüÂêåÊ≠•Êó•ÂøóÔºåÂ§öÁ≥ªÁªüÂçè‰ΩúÔºåÂàÜÂ∏ÉÂºè NTPÔºàÁΩëÁªúÊó∂ÈíüÂçèËÆÆÔºâ‰ΩøÁî®ÂõæÂΩ¢ÂåñËøûÊé•Âà∞Êó∂ÈíüÊúçÂä°Âô® ÂÆâË£ÖËΩØ‰ª∂ÂåÖ yum -y install system-config-date ËøêË°åsystem-config-date system-config-date ‰ΩøÁî®ÂëΩ‰ª§Ë°åËøûÊé•Âà∞Êó∂ÈíüÊúçÂä°Âô® vim /etc/chrony.conf consider joining the pool (http://www.pool.ntp.org/join.html).server 0.centos.pool.ntp.org iburstserver 1.centos.pool.ntp.org iburstserver 2.centos.pool.ntp.org iburstserver 3.centos.pool.ntp.org iburst Ôºàcentos7ÈªòËÆ§ËøûÊé•ÁöÑÊó∂ÈíüÊúçÂä°Âô®Ôºåserver + ÊúçÂä°Âô®Âú∞ÂùÄ + iburstÔºâ ÈáçÂêØÊúçÂä° systemctl restart chrony timedatectlÂëΩ‰ª§ËÆæÁΩÆÁ≥ªÁªüÊó∂Èó¥‰∏éÊó•Êúü ËÆæÁΩÆÊó∂Âå∫ÔºåÂèØ‰ª•ÂÖàÊü•ÁúãÊó∂Âå∫Ë°®ÊòØÂê¶ÊúâÊâÄËÆæÂÆöÁöÑÊó∂Âå∫ 12[chenxiaojian@chenxiaojian ~]$ timedatectl list-timezones | grep -i shangAsia/Shanghai Êü•Áúã‰ø°ÊÅØ 123456789[chenxiaojian@chenxiaojian ~]$ timedatectl status Local time: ‰∫î 2019-09-20 17:28:43 CST Universal time: ‰∫î 2019-09-20 09:28:43 UTC RTC time: ‰∫î 2019-09-20 09:28:44 Time zone: Asia/Shanghai (CST, +0800) NTP enabled: noNTP synchronized: no RTC in local TZ: no DST active: n/a ËÆæÁΩÆ nfp timedatectl set-ntp true ËÆ°Âàí‰ªªÂä°ËÆ°Âàí‰∏ÄÊ¨°ÊÄß‰ªªÂä°at &lt;Êó∂Èó¥&gt; at&gt; ÂëΩ‰ª§ Êåâctrl + DÁªìÊùü atqÊü•Áúã‰ªªÂä° atrm Âà†Èô§‰ªªÂä° 123456789[chenxiaojian@chenxiaojian ~]$ at 17.36at&gt; echo helloat&gt; &lt;EOT&gt;job 1 at Fri Sep 20 17:36:00 2019[chenxiaojian@chenxiaojian ~]$ atq1 Fri Sep 20 17:36:00 2019 a chenxiaojian[chenxiaojian@chenxiaojian ~]$ ÊÇ®Âú® /var/spool/mail/chenxiaojian ‰∏≠ÊúâÊñ∞ÈÇÆ‰ª∂[chenxiaojian@chenxiaojian ~]$ ËÆ°ÂàíÂë®Êúü‰ªªÂä°crontab -e ÁºñËæë -l Êü•Áúã -r Âà†Èô§ -u rootÁî®Êà∑‰∏∫ÂÖ∂‰ªñÁî®Êà∑ËÆæÁΩÆ‰ªªÂä° ‰æãÂ≠êÔºö crontab -e crontab -e -u chenxiaojian Ê†ºÂºèÔºö ÂàÜ Êó∂ Êó• Êúà ÊòüÊúü ÂëΩ‰ª§ * * * * * ‰ª£Ë°®ÊØè‰∏ÄÂàÜÈíü N ËÆæÁΩÆÊï∞Â≠ó Ôºà0Âíå7‰ª£Ë°®ÊòüÊúü‰∏ÄÂíåÊòüÊúüÂ§©Ôºâ */N Ë°®Á§∫ÊØèNÁöÑÊÑèÊÄù n-N Ë°®Á§∫‰ªénÂà∞NËøôÊÆµÊó∂Èó¥ n, N Ë°®Á§∫‰∏§‰∏™Êó∂Èó¥]]></content>
      <categories>
        <category>Linux</category>
        <category>Êó∂ÈíüÂêåÊ≠•ÂíåÂÆöÊó∂‰ªªÂä°</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑„ÄëP1498ÂçóËõÆÂõæËÖæ‰∏éÊù®Ëæâ‰∏âËßíÁöÑÂ∫îÁî®]]></title>
    <url>%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1498%E5%8D%97%E8%9B%AE%E5%9B%BE%E8%85%BE%E4%B8%8E%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E7%9A%84%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[ÊâìÂç∞Êù®Ëæâ‰∏âËßí12345678910111213141516171819202122232425262728293031323334353637// P1498 ÂçóËõÆÂõæËÖæ.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//#include "pch.h"#include &lt;iostream&gt;using namespace std;int yhsj[15][15];int main()&#123; int n; cin &gt;&gt; n; yhsj[1][1] = 1; for (int i = 2; i &lt;= pow(2, n); i++) &#123; for (int j = 1; j &lt;= pow(2, n); j++) &#123; yhsj[i][j] = yhsj[i-1][j-1] + yhsj[i-1][j]; &#125; &#125; int nums = 1; //‰ª£Ë°®ÊØèË°åË¶ÅËæìÂá∫ÁöÑ‰∏™Êï∞ for (int i = 1; i &lt;= pow(2,n); i++) &#123; int space_times = pow(2,n) - nums; for (int k = 0; k &lt; space_times; k++) //ËæìÂá∫Á©∫Ê†º cout &lt;&lt; " "; for (int j = 1; j &lt;= nums; j++) &#123; cout &lt;&lt; yhsj[i][j] &lt;&lt; " "; &#125; nums++; cout &lt;&lt; endl; &#125; return 0;&#125; È¢òÁõÆÊèèËø∞Ëá™‰ªéÂà∞‰∫ÜÂçóËõÆ‰πãÂú∞ÔºåÂ≠îÊòé‰∏ç‰ªÖÊääÂ≠üËé∑Êî∂ÊãæÁöÑÊúçÊúçÂ∏ñÂ∏ñÔºåËÄå‰∏îËøòÂèëÁé∞‰∫Ü‰∏çÂ∞ëÂ∞ëÊï∞Ê∞ëÊóèÁöÑÊô∫ÊÖßÔºå‰ªñÂèëÁé∞Â∞ëÊï∞Ê∞ëÊóèÁöÑÂõæËÖæÂæÄÂæÄÊúâÁùÄ‰∏ÄÁßçÂàÜÂΩ¢ÁöÑÊïàÊûúÔºåÂú®ÂæóÂà∞‰∫ÜÈÖãÈïøÁöÑ‰º†ÊéàÂêéÔºåÂ≠îÊòéÊéåÊè°‰∫Ü‰∏çÂ∞ëÁªòÂõæÊäÄÊúØÔºå‰ΩÜÂîØÁã¨‰∏ç‰ºöÁîª‰ªñ‰ª¨ÁöÑÂõæËÖæÔºå‰∫éÊòØ‰ªñÊâæ‰∏ä‰∫Ü‰Ω†ÁöÑÁà∑Áà∑ÁöÑÁà∑Áà∑ÁöÑÁà∑Áà∑ÁöÑÁà∑Áà∑‚Ä¶‚Ä¶Â∏ÆÂøôÔºå‰Ωú‰∏∫‰∏Ä‰∏™Â•ΩÂ≠ôÂ≠êÁöÑÂ≠ôÂ≠êÁöÑÂ≠ôÂ≠êÁöÑÂ≠ôÂ≠ê‚Ä¶‚Ä¶‰Ω†ËÉΩÂÅöÂà∞ÂêóÔºü ËæìÂÖ•Ê†ºÂºèÊØè‰∏™Êï∞ÊçÆ‰∏Ä‰∏™Êï∞Â≠óÔºåË°®Á§∫ÂõæËÖæÁöÑÂ§ßÂ∞èÔºàÊ≠§Â§ßÂ∞èÈùûÂΩºÂ§ßÂ∞èÔºâ n&lt;=10 ËæìÂá∫Ê†ºÂºèËøô‰∏™Â§ßÂ∞èÁöÑÂõæËÖæ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 12 ËæìÂá∫ #1 1234 /\ /__\ /\ /\/__\/__\ ËæìÂÖ• #2 13 ËæìÂá∫ #2 12345678 /\ /__\ /\ /\ /__\/__\ /\ /\ /__\ /__\ /\ /\ /\ /\/__\/__\/__\/__\ Á¨¨‰∏ÄÁßçÊÄùË∑ØÔºöÂèØ‰ª•Áî®‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑÂ≠òÊîæ1024Ë°åÁöÑÊù®Ëæâ‰∏âËßíÁöÑÂÄºÔºåÁÑ∂ÂêéËÆ©‰ªñ‰ª¨ÂØπ2ÂèñÊ®°ÔºåÁÑ∂ÂêéËæìÂá∫Êù®Ëæâ‰∏âËßíÁöÑÊó∂Â¶ÇÊûúÁ¢∞Âà∞‰∏Ä‰∏™1ÔºåÂ∞±ÊòØËæìÂá∫/\ÔºåÂ¶ÇÊûúÁ¢∞Âà∞‰∏§‰∏™1ÔºåÂ∞±ÊòØËæìÂá∫/__,Â¶ÇÊûúÁ¢∞Âà∞0Â∞±ËæìÂá∫‰∏§‰∏™Á©∫Ê†ºÔºõ ‰ΩÜÊòØËøôÁßçÊÄùË∑ØÊúâ‰∏™‰∏•ÈáçÁöÑbug,Â∞±ÊòØÁî®long longÂ≠òÊîæ‰∏ç‰∏ãÊù®Ëæâ‰∏âËßí1024Ë°åÁöÑÊï∞ÁöÑÂÄº Long longËÉΩÂ§üÂ≠òÊîæÁöÑÂçÅËøõÂà∂Â§ßÊ¶ÇÊòØ19‰Ωç ÊúâbugÁöÑ‰ª£Á†ÅÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061// P1498 ÂçóËõÆÂõæËÖæ.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//#include "pch.h"#include &lt;iostream&gt;#include &lt;math.h&gt;using namespace std;long long yhsj[1050][1050]; //Ê≥®ÊÑèÈïøÂ∫¶Ë¶ÅÂ§ß‰∫é2ÁöÑ10Ê¨°Êñπ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÂ∞±ÊòØÂèØËÉΩÂ≠ò‰∏ç‰∏ã=v=int main()&#123; int n; cin &gt;&gt; n; yhsj[1][1] = 1; for (int i = 2; i &lt;= pow(2, n); i++) &#123; for (int j = 1; j &lt;= pow(2, n); j++) &#123; yhsj[i][j] = yhsj[i-1][j-1] + yhsj[i-1][j]; &#125; &#125; //cout &lt;&lt; yhsj[1024][505] &lt;&lt; endl; //system("pause"); int nums = 1; for (int i = 1; i &lt;= pow(2,n); i++) &#123; int space_times = pow(2,n) - nums; for (int k = 0; k &lt; space_times; k++) cout &lt;&lt; " "; for (int j = 1; j &lt;= nums; j++) &#123; yhsj[i][j] %= 2; &#125; for (int j = 1; j &lt;= nums; j++) &#123; if (yhsj[i][j] == 1) &#123; if (yhsj[i][j + 1] == 1) &#123; cout &lt;&lt; "/__\\"; j++; &#125; else &#123; cout &lt;&lt; "/\\"; &#125; &#125; else if (yhsj[i][j] == 0) cout &lt;&lt; " "; &#125; nums++; cout &lt;&lt; endl; &#125; return 0;&#125; bug‰øÆÊîπÂõ†‰∏∫Êù®Ëæâ‰∏âËßíÂú®ÈÄíÊé®ÁöÑËøáÁ®ã‰∏≠ÂÄº‰∏çÊñ≠Â¢ûÂ§ßÔºå‰ΩÜÊòØÊàë‰ª¨Âè™ÊòØÂØπ‰ªñ‰ª¨ÁöÑÂÄºËøõË°åÂèñÊ®°ÔºåÂ¶ÇÊûú‰∏ÄÂºÄÂßãÁîüÊàêÁ¨¨‰∏ÄË°åÊï∞Â∞±ËøõË°åÂèñÊ®°ÔºåÈÇ£‰πàÂêéÈù¢ÁöÑÊï∞‰πüÂ∞±ÊòØ‰∏ç‰ºöËÉΩÂ§ß‰∫Ü 123456789for (int i = 2; i &lt;= pow(2, n); i++) &#123; for (int j = 1; j &lt;= pow(2, n); j++) &#123; yhsj[i][j] = yhsj[i-1][j-1] + yhsj[i-1][j]; //Âõ†‰∏∫ËøôÊ†∑ÈÄíÂä†‰∏ãÂéªÔºåÈöæÂÖçË∂ÖËøáLong long,‰ΩÜÊòØÂèØ‰ª•ÂèëÁé∞Âú®ËøôÈáåËøõË°åÂèñÊ®°ÔºåÂØπÂêéÈù¢ÁîüÊàêÁöÑÊï∞Ê≤°Êúâ‰ªª‰ΩïÂΩ±ÂìçÔºå // Âõ†‰∏∫ÂèñÊ®°ÂêéÂÄºËøòÊòØÊ≤°ÊúâÂèòÂåñÁöÑ yhsj[i][j] %= 2; &#125; &#125; AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// P1498 ÂçóËõÆÂõæËÖæ.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//#include "pch.h"#include &lt;iostream&gt;#include &lt;math.h&gt;using namespace std;long long yhsj[1050][1050]; //Ê≥®ÊÑèÈïøÂ∫¶Ë¶ÅÂ§ß‰∫é2ÁöÑ10Ê¨°Êñπ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢òÂ∞±ÊòØÂèØËÉΩÂ≠ò‰∏ç‰∏ã=v=int main()&#123; int n; cin &gt;&gt; n; yhsj[1][1] = 1; for (int i = 2; i &lt;= pow(2, n); i++) &#123; for (int j = 1; j &lt;= pow(2, n); j++) &#123; yhsj[i][j] = yhsj[i-1][j-1] + yhsj[i-1][j]; //Âõ†‰∏∫ËøôÊ†∑ÈÄíÂä†‰∏ãÂéªÔºåÈöæÂÖçË∂ÖËøáLong long,‰ΩÜÊòØÂèØ‰ª•ÂèëÁé∞Âú®ËøôÈáåËøõË°åÂèñÊ®°ÔºåÂØπÂêéÈù¢ÁîüÊàêÁöÑÊï∞Ê≤°Êúâ‰ªª‰ΩïÂΩ±ÂìçÔºå // Âõ†‰∏∫ÂèñÊ®°ÂêéÂÄºËøòÊòØÊ≤°ÊúâÂèòÂåñÁöÑ yhsj[i][j] %= 2; &#125; &#125; //cout &lt;&lt; yhsj[1024][505] &lt;&lt; endl; //system("pause"); int nums = 1; for (int i = 1; i &lt;= pow(2,n); i++) &#123; int space_times = pow(2,n) - nums; for (int k = 0; k &lt; space_times; k++) cout &lt;&lt; " "; // for (int j = 1; j &lt;= nums; j++) // &#123; // yhsj[i][j] %= 2; // &#125; for (int j = 1; j &lt;= nums; j++) &#123; if (yhsj[i][j] == 1) &#123; if (yhsj[i][j + 1] == 1) &#123; cout &lt;&lt; "/__\\"; j++; &#125; else &#123; cout &lt;&lt; "/\\"; &#125; &#125; else if (yhsj[i][j] == 0) cout &lt;&lt; " "; &#125; nums++; cout &lt;&lt; endl; &#125; return 0;&#125; ÊÄªÁªì ÈúÄË¶ÅÊ≥®ÊÑèÂÄºÁöÑÊúÄÂ§ßËåÉÂõ¥ Ê≠§Â§ñÔºåËøô‰∫õËæìÂÖ•È¢òÈÄöÂ∏∏ÊòØÊâæËßÑÂæãËÄåË®ÄÔºåÂÄòËã•Áü•ÈÅìËßÑÂæãÔºåÈÇ£‰πàÂØπËß£È¢òÊúâÂæàÂ§ßÁöÑÂ∏ÆÂä© ËÑëÂ≠ê‰æùÊóßÊòØ‰∏™Â•Ω‰∏úË•øÔºåÊàëËøòÊ≤°Êúâ=v=]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
      </categories>
      <tags>
        <tag>Êù®Ëæâ‰∏âËßí</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂΩíÂπ∂ÊéíÂ∫è--ÈÄÜÂ∫èÂØπ]]></title>
    <url>%2F%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F-%E9%80%86%E5%BA%8F%E5%AF%B9%2F</url>
    <content type="text"><![CDATA[ÂΩíÂπ∂ÊéíÂ∫èÂ∞Ü‰∏§‰∏™Êàñ‰∏§‰∏™‰ª•‰∏äÁöÑÊúâÂ∫èË°®ÂêàÂπ∂Êàê‰∏Ä‰∏™ÊúâÂ∫èË°®ÁöÑËøáÁ®ã Êó∂Èó¥Â§çÊùÇÂ∫¶ÔºöO(nlog2n) Á©∫Èó¥Â§çÊùÇÂ∫¶ÔºöÈúÄË¶Å‰∏Ä‰∏™ËæÖÂä©Êï∞ÁªÑÁ©∫Èó¥ÔºåÂ§çÊùÇÂ∫¶‰∏∫O(n) È¢òÁõÆÊèèËø∞Áå´Áå´TOMÂíåÂ∞èËÄÅÈº†JERRYÊúÄËøëÂèàËæÉÈáè‰∏ä‰∫ÜÔºå‰ΩÜÊòØÊØïÁ´üÈÉΩÊòØÊàêÂπ¥‰∫∫Ôºå‰ªñ‰ª¨Â∑≤Áªè‰∏çÂñúÊ¨¢ÂÜçÁé©ÈÇ£Áßç‰Ω†ËøΩÊàëËµ∂ÁöÑÊ∏∏ÊàèÔºåÁé∞Âú®‰ªñ‰ª¨ÂñúÊ¨¢Áé©ÁªüËÆ°„ÄÇÊúÄËøëÔºåTOMËÄÅÁå´Êü•ÈòÖÂà∞‰∏Ä‰∏™‰∫∫Á±ªÁß∞‰πã‰∏∫‚ÄúÈÄÜÂ∫èÂØπ‚ÄùÁöÑ‰∏úË•øÔºåËøô‰∏úË•øÊòØËøôÊ†∑ÂÆö‰πâÁöÑÔºöÂØπ‰∫éÁªôÂÆöÁöÑ‰∏ÄÊÆµÊ≠£Êï¥Êï∞Â∫èÂàóÔºåÈÄÜÂ∫èÂØπÂ∞±ÊòØÂ∫èÂàó‰∏≠ai&gt;aj‰∏îi&lt;jÁöÑÊúâÂ∫èÂØπ„ÄÇÁü•ÈÅìËøôÊ¶ÇÂøµÂêéÔºå‰ªñ‰ª¨Â∞±ÊØîËµõË∞ÅÂÖàÁÆóÂá∫ÁªôÂÆöÁöÑ‰∏ÄÊÆµÊ≠£Êï¥Êï∞Â∫èÂàó‰∏≠ÈÄÜÂ∫èÂØπÁöÑÊï∞ÁõÆ„ÄÇ Update:Êï∞ÊçÆÂ∑≤Âä†Âº∫„ÄÇ ËæìÂÖ•Ê†ºÂºèÁ¨¨‰∏ÄË°åÔºå‰∏Ä‰∏™Êï∞nÔºåË°®Á§∫Â∫èÂàó‰∏≠Êúân‰∏™Êï∞„ÄÇ Á¨¨‰∫åË°ån‰∏™Êï∞ÔºåË°®Á§∫ÁªôÂÆöÁöÑÂ∫èÂàó„ÄÇÂ∫èÂàó‰∏≠ÊØè‰∏™Êï∞Â≠ó‰∏çË∂ÖËøá10910^9109 ËæìÂá∫Ê†ºÂºèÁªôÂÆöÂ∫èÂàó‰∏≠ÈÄÜÂ∫èÂØπÁöÑÊï∞ÁõÆ„ÄÇ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 1265 4 2 6 3 1 ËæìÂá∫ #1 111 ËØ¥Êòé/ÊèêÁ§∫ÂØπ‰∫é25%ÁöÑÊï∞ÊçÆÔºån‚â§2500n \leq 2500n‚â§2500 ÂØπ‰∫é50%ÁöÑÊï∞ÊçÆÔºån‚â§4√ó104n \leq 4 \times 10^4n‚â§4√ó104„ÄÇ ÂØπ‰∫éÊâÄÊúâÊï∞ÊçÆÔºån‚â§5√ó105n \leq 5 \times 10^5n‚â§5√ó105 ËØ∑‰ΩøÁî®ËæÉÂø´ÁöÑËæìÂÖ•ËæìÂá∫ Â∫îËØ•‰∏ç‰ºönÊñπËøá50‰∏áÂêß by chen_zhe ÊÄùË∑ØÔºöÊö¥ÂäõÊØîËæÉËÇØÂÆö‰ºöË∂ÖÊó∂ÔºåÈúÄË¶ÅËøõË°ån!Ê¨°ÊØîËæÉÔºåÂèØ‰ª•‰ΩøÁî®ÂΩíÂπ∂ÊéíÂ∫èÔºåÂîØ‰∏ÄÈúÄË¶ÅÂ§ÑÁêÜÁöÑÂ∞±ÊòØÂú®ÂΩíÂπ∂ÊØîËæÉÂà§Êñ≠Â§ßÂ∞èÊéíÂ∫èÊó∂ÔºåÂèØ‰ª•ÂØπresÔºàË°®Á§∫ÈÄÜÂ∫èÂØπÁöÑ‰∏™Êï∞ÔºâËøõË°åÊõ¥Êñ∞Ôºå‰æãÂ¶ÇÔºö[5 4 ] [8 3 2 1]ÔºåÂõ†‰∏∫ÊØè‰∏Ä‰∏™Âå∫Èó¥ÈÉΩÊòØ‰∏Ä‰∏™ÊúâÂ∫èË°®ÔºåÊâÄ‰ª•Â∞ÜËøô‰∏§‰∏™Âå∫Èó¥ËøõË°åÂΩíÂπ∂ÁöÑÊó∂ÂÄôÔºåÊØîËæÉÔºåÂ¶ÇÊûú5Â§ß‰∫é3ÂêéÔºåÈÇ£‰πà5ËÇØÂÆö‰πüÂ§ßÂ∞èÁ¨¨‰∫å‰∏™Âå∫Èó¥ÂêéÈù¢ÁöÑÊâÄÊúâÁöÑÊï∞ÔºåÊâÄÊúâËøôÊó∂ÂÄôÂ∞±ÂèØ‰ª•ËøõË°åÊõ¥Êñ∞resÁöÑÂÄº„ÄÇ„ÄÅ AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253// P1908 ÈÄÜÂ∫èÂØπ.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//#include "pch.h"#include &lt;iostream&gt;using namespace std;int arr[500008];int temp[500008];long long n;int res = 0;void merge(int low,int high, int mid)&#123; int i = low; int j = mid+1; int k = low; while (i &lt;= mid &amp;&amp; j&lt;=high) &#123; if (arr[i] &gt; arr[j]) &#123; temp[k++] = arr[i++]; res += high - j+1; //Âä†‰∏äÂâ©‰∏ãÁöÑ‰∏™Êï∞ &#125; else temp[k++] = arr[j++]; &#125; while (i &lt;= mid) temp[k++] = arr[i++]; while (j &lt;= high) temp[k++] = arr[j++]; for (int i = low; i &lt;= high; i++) //Êõ¥Êñ∞arrÊï∞ÁªÑ arr[i] = temp[i];&#125;void f(int low, int high)&#123; if (low &lt; high) &#123; int mid = (low + high) / 2; f(low, mid); f(mid + 1, high); merge(low, high, mid); &#125;&#125;int main()&#123; cin &gt;&gt; n; for (int i = 1; i &lt;= n; i++) cin &gt;&gt; arr[i]; f(1, n); cout &lt;&lt; res &lt;&lt; endl; &#125; ÊÄªÁªì ËÆ§ËØÜÂà∞‰∫ÜÂ¶Ç‰ΩïÁî®ÈÄíÂΩíÂÆûÁé∞ÂΩíÂπ∂ÊéíÂ∫èÔºå‰∏îË¶ÅÊ≥®ÊÑèÔºåÂΩíÂπ∂Â•Ω‰∏§‰∏™Âå∫Èó¥ÁöÑÂÄºÂêéÔºåË¶ÅÊõ¥Êñ∞ÂéüÊù•ÁöÑÊï∞ÁªÑÔºåÊ≥®ÊÑèÔºÅÔºÅÔºÅ ÂæÖÂÆåÊàêÔºöÁî®Ëø≠‰ª£ÂÆûÁé∞ÂΩíÂπ∂ÊéíÂ∫è]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>ÊéíÂ∫èÁÆóÊ≥ï</category>
        <category>ÂΩíÂπ∂ÊéíÂ∫è</category>
      </categories>
      <tags>
        <tag>ÂΩíÂπ∂</tag>
        <tag>ÂàÜÊ≤ª</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NFSÁΩëÁªúÊñá‰ª∂Á≥ªÁªü]]></title>
    <url>%2FNFS%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[NFSÁΩëÁªúÊñá‰ª∂Á≥ªÁªü‚ÄìÊñá‰ª∂ÂÖ±‰∫´‚ÄìÁõÆÂΩï ÈÖçÁΩÆNFSÊúçÂä° ÂÆâË£ÖËΩØËΩØ‰ª∂ÂåÖ yum -y install nfs-utils ÈÖçÁΩÆÊñá‰ª∂ vim /etc/exports Ê†ºÂºèÔºö ÂÖ±‰∫´ÁõÆÂΩï ÂÆ¢Êà∑Á´ØÂàóË°®ÔºàÈÄâÈ°πÔºâ /nfs *(rw) 123[root@chenxiaojian chenxiaojian]# vim /etc/exports[root@chenxiaojian chenxiaojian]# cat /etc/exports/nfs *(rw) ÂàõÂª∫ÂÖ±‰∫´ÁõÆÂΩï mkdir /nfs ÈáçËΩΩÈÖçÁΩÆÊñá‰ª∂ exportfs -rv ÂêØÂä®nfsÊúçÂä° systemctl enable nfs ËÆæÁΩÆÂºÄÊú∫ÂêØÂä® systemctl start nfs systemctl status nfs Èò≤ÁÅ´Â¢ô firewall-cmd ‚Äìadd-service=nfs ‚Äìpermanent Êü•ÁúãÊòØÂê¶ÊàêÂäüÔºö ip addr Êü•ÁúãipÂú∞ÂùÄ 123t@chenxiaojian /]# showmount -e 192.168.18.131Export list for 192.168.18.131:/nfs * ÂÆ¢Êà∑Á´ØÊåÇËΩΩ Ôºàvim /etc/fstabÔºâ 192.168.18.131:/nfs /mnt/nfs nfs defaults 0 0 Êü•Áúã‰ø°ÊÅØ mountÂëΩ‰ª§ 12192.168.18.131:/nfs on /mnt/nfs type nfs4 (rw,relatime,vers=4.1,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.18.131,local_lock=none,addr=192.168.18.131)[root@chenxiaojian nfs]# ‰æãÂ¶ÇÔºöhardË°®Á§∫Â∞±ÊòØËØ∑Ê±ÇnfsÊúçÂä°Êó∂Ôºå‰ºöÁ≠âÂà∞ÂìçÂ∫îÊâçÁªìÊùüÔºåÂèØ‰ª•ËÆæÁΩÆsoft ÔºàÂ∑≤Ëß£ÂÜ≥Ôºâ 123456789101112131415[root@chenxiaojian nfs]# cat /etc/fstab## /etc/fstab# Created by anaconda on Sun Sep 15 21:47:41 2019## Accessible filesystems, by reference, are maintained under '/dev/disk'# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info#/dev/mapper/centos_chenxiaojian-root / xfs defaults 0 0UUID=cad510ce-5467-4544-89aa-efd687b4ac39 /boot xfs defaults 0 0/dev/mapper/cetos_chenxiaojian-swap swap swap defaults 0 0192.168.18.131:/nfs /mnt/nfs nfs rw,soft defaults 0 0# ÂØπÊñá‰ª∂Á≥ªÁªüÊåÇËΩΩË°®ËøõË°åÈÖçÁΩÆÂ∞±ÂèØ‰ª•‰∫Ü...# Ê≠§Â§ñÔºå‰øÆÊîπÂÆåÊàêÂêéÔºåÊúâ‰∫õÈúÄË¶ÅÈáçÂêØÊâçËÉΩÁúãÂæóÂà∞ÊïàÊûú (Ê≥®ÊÑèÂä†ÈÄóÂè∑ÔºåÈÖçÁΩÆsoftËΩØÊåÇËΩΩ) Ëá™Âä®ÊåÇËΩΩ AutoFSËá™Âä®ÊåÇËΩΩ ÈÄöËøáËÑöÊú¨ÂÆûÁé∞ ‰ºòÁÇπÔºöËäÇÁúÅËµÑÊ∫ê Ê†∑‰æã1ÔºöÈÄöËøáAutoFSÊåÇËΩΩÊú¨Âú∞ÈïúÂÉè ÂÆâË£ÖËΩØ‰ª∂ÂåÖ yum -y install autofs ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ vim /etc/auto.master ‰∏ªÈÖçÁΩÆÊñá‰ª∂ Ê†ºÂºèÔºöÊåÇËΩΩÁÇπÁà∂ÁõÆÂΩï ËæÖÂä©ÈÖçÁΩÆÊñá‰ª∂ È¶ñÂÖàË¶ÅÊòéÁôΩÊåÇ‰ªÄ‰πàÔºåÁÑ∂ÂêéÊåÇÂú®Âì™ÈáåÔºå‰æãÂ¶ÇÊàë‰ª¨Êú¨Ê¨°‰æãÂ≠ê‰∏≠ÔºåÊåÇÁöÑÊòØÊú¨Âú∞ÈïúÂÉèÔºåÊâÄ‰ª•Êàë‰ª¨Ë¶ÅÊåÇÁöÑÊòØ/dev/sr0ÔºåÁÑ∂ÂêéÊàë‰ª¨ÊâìÁÆóÊåÇÂú®/mnt/autofs/sr0Ëøô‰∏™ÁõÆÂΩï‰∏ã ÊâÄ‰ª•Ê†ºÂºè‰∏∫Ôºö/mnt/autofs /etc/auto.sr0 ÁÑ∂ÂêéÂàõÂª∫/etc/auto/sr0Êñá‰ª∂Âπ∂ÂéªÁºñËæë‰ªñÔºàÂèØ‰ª•ÂèÇËÄÉ cat /etc/auto.miscÔºâ Ê†ºÂºèÔºöÊåÇËΩΩÁÇπÁöÑÁõ∏ÂØπË∑ØÂæÑÔºàÁõ∏ÂØπ‰∫éÁà∂ÁõÆÂΩïÔºâ ÈÄâÈ°π ÊåÇËΩΩËÆæÂ§á ‰æãÂ≠êÔºö sr0 -fstype=iso9660ÔºàË°®Á§∫Êñá‰ª∂ÁöÑÁ±ªÂûãÔºâ:/dev/sr0 ÔºàÂÜíÂè∑Ë°®Á§∫ÁöÑÊòØÊú¨Âú∞Êñá‰ª∂Ôºâ vim /etc/auto.sr0 1sr0 -fstype=iso9660 :/dev/sr0 ÂêØÂä®ÊúçÂä° systemctl enable autofs systemctl restart autofs È™åËØÅÊü•Áúã È¶ñÂÖàÊàë‰ª¨ÂÖàÂ∞Ü‰πãÂâçÊåÇËΩΩÁÇπÂç∏ËΩΩ umount /dev/sr0ÔºåÁÑ∂Âêé‰Ω†ÈÄöËøádf-ThÊòØÊü•Áúã‰∏çÂà∞Êú¨Âú∞ÈïúÂÉèÁöÑÊåÇËΩΩÊÉÖÂÜµÔºå‰ΩÜÊòØÂΩì‰Ω†ÂéªËÆøÈóÆ‰πãÂâçÊåÇËΩΩÁÇπÁöÑÁõÆÂΩïÊó∂ÔºåÂ∞±‰ºöËá™Âä®ÊåÇËΩΩ‰∫Ücd /mnt/auto.sr0ÔºåÁÑ∂ÂêéÂú®ÊâßË°ådf-ThÂ∞±‰ºöÊü•ÁúãÂà∞Ëøô‰∏™ÂÖâÁ¢üÁöÑÊåÇËΩΩÊÉÖÂÜµ‰∫ÜÔºåÂ¶ÇÊûúÊ≤°Êúâ‰ΩøÁî®Ôºå‰ªñÂ∞±‰ºöËá™Âä®Â∞ÜÂÆÉÂç∏ËΩΩ‰∫Ü„ÄÇ Ê†∑‰æã2ÔºöÈÄöËøáAutoFSÊåÇËΩΩNFS ÂêåÊ†∑ÁöÑÊìç‰ΩúÔºåÂè™‰∏çËøáË¶ÅÊ≥®ÊÑèÊåÇËΩΩÁÇπÁöÑÁà∂ÁõÆÂΩï‰∏çË¶Å‰∏ÄÊ†∑ÔºåÂõ†‰∏∫ÊåÇËΩΩÁÇπÁöÑÁà∂ÁõÆÂΩï‰ºöË¢´ÈîÅÂÆö Ê†∑‰æã3ÔºöÈÄöËøáAutoFSÊåÇËΩΩLDAPÁî®Êà∑ÁöÑ‰∏ªÁõÆÂΩï]]></content>
      <categories>
        <category>Linux</category>
        <category>NFS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxËΩØ‰ª∂ÂåÖÁÆ°ÁêÜ]]></title>
    <url>%2FLinux%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[ËΩØ‰ª∂ÂåÖÁÆ°ÁêÜ rpmÊòØ‰∏Ä‰∏™‰∏≠ËΩØ‰ª∂ÂåÖÁÆ°ÁêÜÔºåÂêåÊó∂‰∏ÄÁßçËΩØ‰ª∂ÂåÖÊ†ºÂºè RPMÂåÖÁÆ°ÁêÜÂô®RPMÁöÑËΩØ‰ª∂ÂåÖÊü•ËØ¢ rpm -qa Êü•ËØ¢Â∑≤ÁªèÂÆâË£ÖÁöÑËΩØ‰ª∂ÂêçÁß∞ rpm -q &lt;ËΩØ‰ª∂ÂåÖ&gt; Êü•ËØ¢ËΩØ‰ª∂ÊòØÂê¶ÂÆâË£ÖÔºåÂÆâË£ÖËøáÂàôËæìÂá∫ËØ•ËΩØ‰ª∂ÂåÖÁöÑ‰ø°ÊÅØ 1234567[chenxiaojian@chenxiaojian ~]$ rpm -q sshÊú™ÂÆâË£ÖËΩØ‰ª∂ÂåÖ ssh [chenxiaojian@chenxiaojian ~]$ rpm -q sshdÊú™ÂÆâË£ÖËΩØ‰ª∂ÂåÖ sshd [chenxiaojian@chenxiaojian ~]$ rpm -q pythonpython-2.7.5-76.el7.x86_64[chenxiaojian@chenxiaojian ~]$ RPMÁöÑËΩØ‰ª∂ÂåÖÁöÑ‰∏ãËΩΩ yum -ivh &lt;ËΩØ‰ª∂ÂåÖ&gt; iÔºöË°®Á§∫ÂÆâË£Ö vÔºöË°®Á§∫Êõ¥ËØ¶ÁªÜÁöÑÂÆâË£Ö‰ø°ÊÅØÈ°µÈù¢ hÔºöË°®Á§∫ÊòæÁ§∫ÂÆâË£ÖËøõÂ∫¶ ‰æãÂ¶Ç;‰ªéÈïúÂÉèÁΩëÁ´ô‰∏ãËΩΩ‰∏Ä‰∏™rpmÂåÖ ÂèØ‰ª•ÂÖà‰ΩøÁî®wgetÂëΩ‰ª§‰∏ãËΩΩÔºåwget -O ÔºàË°®Á§∫‰∏ã‰∏ãËΩΩÂà∞ÊåáÂÆöÁöÑÁõÆÂΩïÔºåÂ¶ÇÊûúÊ≤°Êúâ-OÔºåÂàôÊòØ‰∏ãËΩΩÂà∞ÂΩìÂâçÁõÆÂΩïÔºâ yumËΩØ‰ª∂ÂåÖÁÆ°ÁêÜ Áõ∏ÂÖ≥ÂëΩ‰ª§ÔºöLinux unameÂëΩ‰ª§Áî®‰∫éÊòæÁ§∫Á≥ªÁªü‰ø°ÊÅØÔºåunameÂèØÊòæÁ§∫ÁîµËÑë‰ª•ÂèäÊìç‰ΩúÁ≥ªÁªüÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØ 12chenxiaojian@ohenxiaojian:~$ uname -aLinux ohenxiaojian 5.0.0-27-generic #28~18.04.1-Ubuntu SMP Thu Aug 22 03:00:32 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux ËΩØ‰ª∂ÁöÑÁ±ªÂûã Ê∫êÁ†ÅÂåÖ ÈúÄË¶ÅÁºñËØë ‰∫åËøõÂà∂ÂåÖ Â∑≤ÁºñËØë Âú®ubantuÁ≥ªÁªü‰∏äÔºåÂú®Á∫øÂåÖÁÆ°ÁêÜÂ∑•ÂÖ∑ÊòØapt,ËÄåÂú®Á∫¢Â∏Ω‰∏≠Âàô‰∏∫yumÔºàÂú®Á∫øÂ∑•ÂÖ∑ÔºâÁÆ°ÁêÜ ‰ΩøÁî®yumÁÆ°ÁêÜRPMÂåÖÂÆâË£Ö yum -y install &lt;ÂåÖÂêç&gt; yum -y reinstall &lt;ÂåÖÂêç&gt; yum -y update &lt;ÂåÖÂêç&gt; yum -y update Êõ¥Êñ∞ÊâÄÊúâÂåÖ Âç∏ËΩΩ yum remove &lt;ÂåÖÂêç&gt; Êü•ËØ¢ yum list &lt;ÂåÖÂêç&gt; yum info &lt;ÂåÖÂêç&gt; ÂèØ‰ª•Êü•ËØ¢ÂåÖÁöÑ‰ø°ÊÅØÔºàÊó†ËÆ∫ÊòØÂê¶ÂÆâË£ÖËøáÔºâ yum history info 2 „ÄÅyum history Êí§ÈîÄyum historyÁöÑÂä®‰ΩúÔºåyum history undo yum search &lt;ÂåÖÂêç&gt; ÊêúÁ¥¢ËΩØ‰ª∂ÂåÖ yum provides &lt;Êñá‰ª∂&gt; Êü•ËØ¢ÂëΩ‰ª§Êèê‰æõÁöÑËΩØ‰ª∂ÂåÖ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081root@chenxiaojian yum.repos.d]# yum history Â∑≤Âä†ËΩΩÊèí‰ª∂Ôºöfastestmirror, langpacksID | ÁôªÂΩïÁî®Êà∑ | Êó•ÊúüÂíåÊó∂Èó¥ | Êìç‰Ωú | ÂèòÊõ¥Êï∞ ------------------------------------------------------------------------------- 2 | &lt;chenxiaojian&gt; | 2019-09-16 22:29 | Install | 3 1 | Á≥ªÁªü &lt;Á©∫&gt; | 2019-09-15 21:48 | Install | 1527 history list[root@chenxiaojian yum.repos.d]# yum history info 2Â∑≤Âä†ËΩΩÊèí‰ª∂Ôºöfastestmirror, langpacks‰∫ãÂä° IDÔºö 2Ëµ∑ÂßãÊó∂Èó¥ Ôºö Mon Sep 16 22:29:52 2019ÂêØÂä® RPM Êï∞ÊçÆÂ∫ì Ôºö 1527:8b2dcf21844ade1205674f58ecb3b0f2be946f78ÁªìÊùüÊó∂Èó¥ Ôºö 22:29:54 2019 Ôºà2 ÁßíÔºâÁªìÊùü RPM Êï∞ÊçÆÂ∫ì Ôºö 1530:34cb8a59af417b144b21b6f139a91d27f8216274Áî®Êà∑ Ôºö chenxiaojian &lt;chenxiaojian&gt;ËøîÂõûÁ†Å Ôºö ÊàêÂäüÂëΩ‰ª§Ë°å Ôºö install httpd‰∫ãÂä°ÂÆåÊàêÂ±û‰∏ªÔºö Â∑≤ÂÆâË£Ö rpm-4.11.3-35.el7.x86_64 @anaconda Â∑≤ÂÆâË£Ö yum-3.4.3-161.el7.centos.noarch @anaconda Â∑≤ÂÆâË£Ö yum-plugin-fastestmirror-1.1.31-50.el7.noarch @anacondaÂ∑≤ÂèòÊõ¥ÁöÑÂåÖÔºö ÂÆâË£Ö httpd-2.4.6-89.el7.centos.1.x86_64 @updates ‰æùËµñÂÆâË£Ö httpd-tools-2.4.6-89.el7.centos.1.x86_64 @updates ‰æùËµñÂÆâË£Ö mailcap-2.1.41-2.el7.noarch @basehistory info[root@chenxiaojian yum.repos.d]# yum history undo 2Â∑≤Âä†ËΩΩÊèí‰ª∂Ôºöfastestmirror, langpacksUndoing transaction 2, from Mon Sep 16 22:29:52 2019 ÂÆâË£Ö httpd-2.4.6-89.el7.centos.1.x86_64 @updates ‰æùËµñÂÆâË£Ö httpd-tools-2.4.6-89.el7.centos.1.x86_64 @updates ‰æùËµñÂÆâË£Ö mailcap-2.1.41-2.el7.noarch @baseÊ≠£Âú®Ëß£ÂÜ≥‰æùËµñÂÖ≥Á≥ª--&gt; Ê≠£Âú®Ê£ÄÊü•‰∫ãÂä°---&gt; ËΩØ‰ª∂ÂåÖ httpd.x86_64.0.2.4.6-89.el7.centos.1 Â∞ÜË¢´ Âà†Èô§---&gt; ËΩØ‰ª∂ÂåÖ httpd-tools.x86_64.0.2.4.6-89.el7.centos.1 Â∞ÜË¢´ Âà†Èô§---&gt; ËΩØ‰ª∂ÂåÖ mailcap.noarch.0.2.1.41-2.el7 Â∞ÜË¢´ Âà†Èô§--&gt; Ëß£ÂÜ≥‰æùËµñÂÖ≥Á≥ªÂÆåÊàê‰æùËµñÂÖ≥Á≥ªËß£ÂÜ≥===================================================================================== Package Êû∂ÊûÑ ÁâàÊú¨ Ê∫ê Â§ßÂ∞è=====================================================================================Ê≠£Âú®Âà†Èô§: httpd x86_64 2.4.6-89.el7.centos.1 @updates 9.4 M httpd-tools x86_64 2.4.6-89.el7.centos.1 @updates 169 k mailcap noarch 2.1.41-2.el7 @base 62 k‰∫ãÂä°Ê¶ÇË¶Å=====================================================================================ÁßªÈô§ 3 ËΩØ‰ª∂ÂåÖÂÆâË£ÖÂ§ßÂ∞èÔºö9.6 MÊòØÂê¶ÁªßÁª≠Ôºü[y/N]ÔºöyDownloading packages:Running transaction checkRunning transaction testTransaction test succeededRunning transaction Ê≠£Âú®Âà†Èô§ : httpd-2.4.6-89.el7.centos.1.x86_64 1/3 Ê≠£Âú®Âà†Èô§ : mailcap-2.1.41-2.el7.noarch 2/3 Ê≠£Âú®Âà†Èô§ : httpd-tools-2.4.6-89.el7.centos.1.x86_64 3/3 È™åËØÅ‰∏≠ : httpd-2.4.6-89.el7.centos.1.x86_64 1/3 È™åËØÅ‰∏≠ : mailcap-2.1.41-2.el7.noarch 2/3 È™åËØÅ‰∏≠ : httpd-tools-2.4.6-89.el7.centos.1.x86_64 3/3 Âà†Èô§: httpd.x86_64 0:2.4.6-89.el7.centos.1 httpd-tools.x86_64 0:2.4.6-89.el7.centos.1 mailcap.noarch 0:2.1.41-2.el7 ÂÆåÊØïÔºÅ[root@chenxiaojian yum.repos.d]# yum list httpdÂ∑≤Âä†ËΩΩÊèí‰ª∂Ôºöfastestmirror, langpacksLoading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.comÂèØÂÆâË£ÖÁöÑËΩØ‰ª∂ÂåÖhttpd.x86_64 2.4.6-89.el7.centos.1 updates[root@chenxiaojian yum.repos.d]# Â∞ÜÊ∫êÊç¢ÊàêÈòøÈáå‰∫ëÁöÑÊ∫ê https://opsx.alibaba.com/mirror?lang=zh-CN Êü•Áúã‰∏çÂêåÁöÑÊ∫êÁöÑÈÖçÁΩÆÊñá‰ª∂/etc/yum.repos.d/.. ÂÆâË£ÖepelÊâ©Â±ïÊ∫êhttps://opsx.alibaba.com/mirror ËøôÊ†∑ÂÅöÔºåÂ∞±ÂèØ‰ª•ÂÆâË£ÖÁ±ª‰ºº‰∫énginxÁöÑÂåÖ 12345678910[root@chenxiaojian ~]# [root@chenxiaojian ~]# yum list nginxÂ∑≤Âä†ËΩΩÊèí‰ª∂Ôºöfastestmirror, langpacksLoading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.comÂèØÂÆâË£ÖÁöÑËΩØ‰ª∂ÂåÖnginx.x86_64 1:1.12.2-3.el7 epel[root@chenxiaojian ~]# ËΩØ‰ª∂ÂåÖÁÆ°ÁêÜÁõ∏ÂÖ≥ÂëΩ‰ª§ uname 12345678910111213141516171819202122232425[chenxiaojian@chenxiaojian ~]$ uname -mx86_64[chenxiaojian@chenxiaojian ~]$ uname Linux[chenxiaojian@chenxiaojian ~]$ uname --helpÁî®Ê≥ïÔºöuname [ÈÄâÈ°π]...ËæìÂá∫‰∏ÄÁªÑÁ≥ªÁªü‰ø°ÊÅØ„ÄÇÂ¶ÇÊûú‰∏çË∑üÈöèÈÄâÈ°πÔºåÂàôËßÜ‰∏∫Âè™ÈôÑÂä†-s ÈÄâÈ°π„ÄÇ -a, --all ‰ª•Â¶Ç‰∏ãÊ¨°Â∫èËæìÂá∫ÊâÄÊúâ‰ø°ÊÅØ„ÄÇÂÖ∂‰∏≠Ëã•-p Âíå -i ÁöÑÊé¢ÊµãÁªìÊûú‰∏çÂèØÁü•ÂàôË¢´ÁúÅÁï•Ôºö -s, --kernel-name ËæìÂá∫ÂÜÖÊ†∏ÂêçÁß∞ -n, --nodename ËæìÂá∫ÁΩëÁªúËäÇÁÇπ‰∏äÁöÑ‰∏ªÊú∫Âêç -r, --kernel-release ËæìÂá∫ÂÜÖÊ†∏ÂèëË°åÂè∑ -v, --kernel-version ËæìÂá∫ÂÜÖÊ†∏ÁâàÊú¨ -m, --machine ËæìÂá∫‰∏ªÊú∫ÁöÑÁ°¨‰ª∂Êû∂ÊûÑÂêçÁß∞ -p, --processor ËæìÂá∫Â§ÑÁêÜÂô®Á±ªÂûãÊàñ"unknown" -i, --hardware-platform ËæìÂá∫Á°¨‰ª∂Âπ≥Âè∞Êàñ"unknown" -o, --operating-system ËæìÂá∫Êìç‰ΩúÁ≥ªÁªüÂêçÁß∞ --help ÊòæÁ§∫Ê≠§Â∏ÆÂä©‰ø°ÊÅØÂπ∂ÈÄÄÂá∫ --version ÊòæÁ§∫ÁâàÊú¨‰ø°ÊÅØÂπ∂ÈÄÄÂá∫GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;ËØ∑Âêë&lt;http://translationproject.org/team/zh_CN.html&gt; Êä•Âëäuname ÁöÑÁøªËØëÈîôËØØË¶ÅËé∑ÂèñÂÆåÊï¥ÊñáÊ°£ÔºåËØ∑ËøêË°åÔºöinfo coreutils 'uname invocation'[chenxiaojian@chenxiaojian ~]$ 12[chenxiaojian@chenxiaojian etc]$ cat /etc/redhat-releaseCentOS Linux release 7.6.1810 (Core) 123456789101112[chenxiaojian@chenxiaojian etc]$ yum repolistÂ∑≤Âä†ËΩΩÊèí‰ª∂Ôºöfastestmirror, langpacksDetermining fastest mirrors * base: ftp.sjtu.edu.cn * extras: mirrors.163.com * updates: mirrors.cn99.comÊ∫êÊ†áËØÜ Ê∫êÂêçÁß∞ Áä∂ÊÄÅ!base/7/x86_64 CentOS-7 - Base 10,019!extras/7/x86_64 CentOS-7 - Extras 435!updates/7/x86_64 CentOS-7 - Updates 2,500repolist: 12,954# ÈªòËÆ§ÁöÑ‰∏â‰∏™ÂõΩÂ§ñÊ∫ê firewalld Èò≤ÁÅ´Â¢ôÊúçÂä°systemctl status firewalld Êü•ÁúãÈò≤ÁÅ´Â¢ôÂÆàÊä§ËøõÁ®ã ÂëΩ‰ª§Ë°åÊñπÂºèÊìç‰ΩúÈò≤ÁÅ´Â¢ô firewall-cmd ÂõæÂΩ¢ÂåñÁïåÈù¢Êìç‰ΩúÊìç‰ΩúÈò≤ÁÅ´Â¢ô firewall-config 1234567891011121314151617[root@chenxiaojian chenxiaojian]# firewall-cmd --add-service=http --permanent Warning: ALREADY_ENABLED: httpsuccess[root@chenxiaojian chenxiaojian]# firewall-cmd --list-allpublic (active) target: default icmp-block-inversion: no interfaces: ens33 sources: services: ssh dhcpv6-client http ports: protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: ÈÖçÁΩÆÊñá‰ª∂ /etc/firewalld/ ÂΩìÂâçÈÖçÁΩÆ 12345678910111213141516171819[root@chenxiaojian etc]# cd firewalld[root@chenxiaojian firewalld]# llÊÄªÁî®Èáè 8-rw-r--r--. 1 root root 2006 10Êúà 31 2018 firewalld.confdrwxr-x---. 2 root root 6 10Êúà 31 2018 helpersdrwxr-x---. 2 root root 6 10Êúà 31 2018 icmptypesdrwxr-x---. 2 root root 6 10Êúà 31 2018 ipsets-rw-r--r--. 1 root root 271 10Êúà 31 2018 lockdown-whitelist.xmldrwxr-x---. 2 root root 6 10Êúà 31 2018 servicesdrwxr-x---. 2 root root 46 9Êúà 15 21:59 zones[root@chenxiaojian firewalld]# cat lockdown-whitelist.xml &lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;whitelist&gt; &lt;command name="/usr/bin/python -Es /usr/bin/firewall-config"/&gt; &lt;selinux context="system_u:system_r:NetworkManager_t:s0"/&gt; &lt;selinux context="system_u:system_r:virtd_t:s0-s0:c0.c1023"/&gt; &lt;user id="0"/&gt;&lt;/whitelist&gt;[root@chenxiaojian firewalld]# SELinuxÂü∫Á°ÄSELinuxÂèØ‰ª•ÁªôÊñá‰ª∂ÔºåÁõÆÂΩïÔºåÁ´ØÂè£ÔºåËøõÁ®ãÊâì‰∏äÊ†áÁ≠æÔºåÊ†áÁ≠æÁß∞‰∏∫‰∏ä‰∏ãÊñá ‰∏çÂêåÁöÑÊ†áÁ≠æÂ∞±‰∏çËÉΩËÆøÈóÆÂêÑËá™ÁöÑ‰∏ä‰∏ãÊñá httpdÊúçÂä°ÁöÑËøõÁ®ã‰∏ä‰∏ãÊñáÔºöhttpd_t httpdÊúçÂä°ÁöÑÊñá‰ª∂‰∏ä‰∏ãÊñáÔºöhttpd_sys_content_t httpdÊúçÂä°ÁöÑËøõÁ®ã‰∏ä‰∏ãÊñáÔºöhttp_port_t Ê®°Âºè enforcing ÔºàÂº∫Âà∂Ê®°ÂºèÔºâÂêØÂä®SELinuxÔºåÁ¶ÅÁî®ËøùÂèçÁ≠ñÁï•ÁöÑË°å‰∏∫ÔºåÂπ∂ÂèëÈÄÅË≠¶Âëä permissiveÔºàÂÖÅËÆ∏Ê®°ÂºèÔºâÂêØÁî®SELinuxÔºå‰∏çÁ¶ÅÁî®ËøùÂèçÁ≠ñÁï•ÁöÑË°å‰∏∫ disabledÔºàÁ¶ÅÁî®Ê®°ÂºèÔºâ ‰∏¥Êó∂Êõ¥ÊîπÔºösetenforce 1 | 0 Ê∞∏‰πÖÊõ¥ÊîπÔºö/etc/selinux/config 12345678910111213[root@chenxiaojian /]# cat /etc/selinux/config # This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=enforcing# SELINUXTYPE= can take one of three values:# targeted - Targeted processes are protected,# minimum - Modification of targeted policy. Only selected processes are protected. # mls - Multi Level Security protection.SELINUXTYPE=targeted Êñá‰ª∂‰∏ä‰∏ãÊñáÊü•ÁúãÊñá‰ª∂‰∏ä‰∏ãÊñá ls -Z[d] Êü•ÁúãÁõÆÂΩïÊàñÊñá‰ª∂ÁöÑ‰∏ä‰∏ãÊñá -Z Ë°®Á§∫Êü•Áúã‰∏ä‰∏ãÊñáÔºådË°®Á§∫Êü•ÁúãÊñá‰ª∂ÔºåÁõÆÂΩïÊú¨Ë∫´ 12[root@chenxiaojian chenxiaojian]# semanage fcontext -l#Êü•ÁúãÊâÄÊúâÊñá‰ª∂ÁöÑ‰∏ä‰∏ãÊñá ÈÖçÁΩÆÁÆ°ÈÅìÂëΩ‰ª§ | grep Ê∑ªÂä†Êñá‰ª∂‰∏ä‰∏ãÊñá semanage fcontext -a -t &lt;‰∏ä‰∏ãÊñá&gt; &lt;ÁõÆÂΩïÊñá‰ª∂&gt; aË°®Á§∫Ê∑ªÂä†Ôºå-tË°®Á§∫‰∏ä‰∏ãÊñáÁ±ªÂûã restorecon -RFvv &lt;ÁõÆÂΩïÊñá‰ª∂&gt; vvË°®Á§∫Êü•ÁúãËøáÁ®ã ‰øÆÊîπÊñá‰ª∂‰∏ä‰∏ãÊñá semanage fcontext -m -t &lt;‰∏ä‰∏ãÊñá&gt; &lt;ÁõÆÂΩïÊñá‰ª∂&gt; mË°®Á§∫‰øÆÊîπÔºå-tË°®Á§∫‰∏ä‰∏ãÊñáÁ±ªÂûã restorecon -RFvv &lt;ÁõÆÂΩïÊñá‰ª∂&gt; vvË°®Á§∫Êü•ÁúãËøáÁ®ã ‰∏¥Êó∂‰øÆÊîπ‰∏ä‰∏ãÊñáÔºöchcon -t &lt;‰∏ä‰∏ãÊñáÁ±ªÂûã&gt; &lt;Êñá‰ª∂ÁõÆÂΩï&gt;ÔºåÂÜÖÊ†∏ÂÆâÂÖ®‰∏ä‰∏ãÊñáÂàóË°®Ôºàsemanage fcontent -lÔºâÁªèËøáÂà∑Êñ∞ÂêéÔºàrestorecon -RFvv &lt; Êñá‰ª∂&gt;ÔºâÂ∞±‰ºöÊÅ¢Â§ç‰πãÂâçÁöÑ‰∏ä‰∏ãÊñá ÂëΩ‰ª§Ôºö chcon -t &lt;‰∏ä‰∏ãÊñáÁ±ªÂûã&gt; &lt;Êñá‰ª∂„ÄÅÁõÆÂΩï&gt; ‰∏¥Êó∂‰øÆÊîπ semanage fcontent -a -t &lt;‰∏ä‰∏ãÊñáÁ±ªÂûã&gt; &lt;Êñá‰ª∂„ÄÅÁõÆÂΩï&gt; Ê∑ªÂä†ÈªòËÆ§‰∏ä‰∏ãÊñá semanage fcontent -m -t &lt;‰∏ä‰∏ãÊñáÁ±ªÂûã&gt; &lt;Êñá‰ª∂„ÄÅÁõÆÂΩï&gt; ‰øÆÊîπÈªòËÆ§‰∏ä‰∏ãÊñá restorecon -RFvv &lt;Êñá‰ª∂„ÄÇÁõÆÂΩï&gt; ÂΩìËøô‰∏™Êñá‰ª∂Âú®Á≠ñÁï•ÈáåÊúâÂÆö‰πâÊòØÔºåÂèØ‰ª•ÊÅ¢Â§çÂéüÊù•ÁöÑ Êñá‰ª∂Ê†áÁ≠æ„ÄÇ Ê†∑‰æãÔºö123456789101112[root@chenxiaojian chenxiaojian]# mkdir dir3[root@chenxiaojian chenxiaojian]# ls1.sh dir1 dir3 test_file.txt Ê®°Êùø ÂõæÁâá ‰∏ãËΩΩ Ê°åÈù¢Anaconda3-2018.12-Linux-x86_64.sh dir2 fstab ÂÖ¨ÂÖ± ËßÜÈ¢ë ÊñáÊ°£ Èü≥‰πê[root@chenxiaojian chenxiaojian]# ls -Zd dir3drwxr-xr-x. root root unconfined_u:object_r:user_home_t:s0 dir3[root@chenxiaojian chenxiaojian]# semanage fcontext -a -t httpd_sys_content_t /home/chenxiaojian/dir3[root@chenxiaojian chenxiaojian]# restorecon -Rv dir3restorecon reset /home/chenxiaojian/dir3 context unconfined_u:object_r:user_home_t:s0-&gt;unconfined_u:object_r:httpd_sys_content_t:s0[root@chenxiaojian chenxiaojian]# ls -Zd dir3drwxr-xr-x. root root unconfined_u:object_r:httpd_sys_content_t:s0 dir3[root@chenxiaojian chenxiaojian]# ÊÄªÁªìÔºö Êñá‰ª∂ÊàñËÄÖÁõÆÂΩïË¶ÅÂÜôÊàêÁªùÂØπË∑ØÂæÑÔºåËÆ∞ÂæóÊü•ÁúãÊñá‰ª∂ÂÆâÂÖ®‰∏ä‰∏ãÊñáÂàóË°®Ôºårestorecon Â∞±ÊòØÈáçÊñ∞Âä†ËΩΩËøô‰∏™ÂàóË°® Ê≠§Â§ñÔºåË¶ÅÂ∞±Ê≥®ÊÑèÁßªÂä®Êñá‰ª∂ÂíåÂ§çÂà∂Êñá‰ª∂ÂØπ‰∫é‰∏ä‰∏ãÊñáÁöÑ‰∏çÂêåÂΩ±Âìç 1234567891011121314[root@chenxiaojian chenxiaojian]# echo hello &gt; file1[root@chenxiaojian chenxiaojian]# echo hello &gt; file2[root@chenxiaojian chenxiaojian]# ls -Z | grep file-rw-r--r--. root root unconfined_u:object_r:user_home_t:s0 file1-rw-r--r--. root root unconfined_u:object_r:user_home_t:s0 file2-rw-rw-r--. chenxiaojian chenxiaojian unconfined_u:object_r:user_home_t:s0 test_file.txt[root@chenxiaojian chenxiaojian]# cp file1 /var/www/html/[root@chenxiaojian chenxiaojian]# mv file2 /var/www/html/[root@chenxiaojian chenxiaojian]# ls -Z /var/www/html/ | grep file-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 file1-rw-r--r--. root root unconfined_u:object_r:user_home_t:s0 file2 Á´ØÂè£‰∏ä‰∏ãÊñáÊü•Áúã123456[root@chenxiaojian chenxiaojian]# semanage port -l | grep httphttp_cache_port_t tcp 8080, 8118, 8123, 10001-10010http_cache_port_t udp 3130http_port_t tcp 80, 81, 443, 488, 8008, 8009, 8443, 9000pegasus_http_port_t tcp 5988pegasus_https_port_t tcp 5989 Ê∑ªÂä†Á´ØÂè£‰∏ä‰∏ãÊñá semanage port -a -t &lt;‰∏ä‰∏ãÊñá&gt; -p &lt;tcp | udp&gt; &lt;Á´ØÂè£&gt; ‰æãÂ¶ÇÔºösemanage port -a -t httpd_port_t -p tcp 10000 Âà†Èô§Á´ØÂè£‰∏ä‰∏ãÊñá semanage port -d -t &lt;‰∏ä‰∏ãÊñá&gt; -p &lt;tcp | udp&gt; &lt;Á´ØÂè£&gt; ‰æãÂ¶ÇÔºösemanage port -d -t httpd_port_t -p tcp 10000 ‰øÆÊîπÁ´ØÂè£‰∏ä‰∏ãÊñá semanage port -m -t &lt;‰∏ä‰∏ãÊñá&gt; -p &lt;tcp | udp&gt; &lt;Á´ØÂè£&gt; ‰æãÂ¶ÇÔºösemanage port -m -t httpd_port_t -p tcp 10000 Â∏ÉÂ∞îÂÄº Â∏ÉÂ∞îÂÄºÊòØselinuxÁöÑÁ≠ñÁï•ÂºÄÂÖ≥ Êü•ÁúãÂ∏ÉÂ∞îÂÄº getsebool -a ‰øÆÊîπÂ∏ÉÂ∞îÂÄº setsebool -P ÔºàPË°®Á§∫Ê∞∏‰πÖ‰øÆÊîπÔºâ ‰æãÂ¶ÇÔºösetsebool -P nfs_export_all_rw off Êü•ÁúãÁî®Êà∑‰øÆÊîπÁöÑÂ∏ÉÂ∞îÂÄº semanage boolean -l -C 1234567891011[root@chenxiaojian chenxiaojian]# setsebool -P nfs_export_all_rw off[root@chenxiaojian chenxiaojian]# semanage boolean -l -CSELinux Â∏ÉÂ∞îÂÄº Áä∂ÊÄÅ ÈªòËÆ§ ÊèèËø∞nfs_export_all_rw (ÂÖ≥ , ÂÖ≥) Allow nfs to export all rw[root@chenxiaojian chenxiaojian]# setsebool -P nfs_export_all_rw on[root@chenxiaojian chenxiaojian]# semanage boolean -l -CSELinux Â∏ÉÂ∞îÂÄº Áä∂ÊÄÅ ÈªòËÆ§ ÊèèËø∞nfs_export_all_rw (ÂºÄ , ÂºÄ) Allow nfs to export all rw[root@chenxiaojian chenxiaojian]# LDAPÁî®Êà∑ÈõÜ‰∏≠ÁÆ°ÁêÜÔºåÂèØ‰ª•ÁêÜËß£‰∏∫Â∞ÜÊâÄÊúâÁî®Êà∑ÁöÑ‰ø°ÊÅØÂ≠òÊîæÂú®‰∏Ä‰∏™ÁâπÂÆöÁöÑÊúçÂä°Âô®‰∏≠ÔºåÁÑ∂ÂêéÁî®Êà∑ÁöÑ‰ø°ÊÅØÂ≠òÊîæÂú®‰∏çÂêåÁöÑÁõÆÂΩï‰∏ãÔºåËøôÊ†∑Êàë‰ª¨ÂèØ‰ª•Âú®Êú¨Êú∫ËøûÊé•LDAPÊúçÂä°Âô®ÔºåÂ∞±ÂèØ‰ª•ÂÖ±‰∫´ËØ•Áî®Êà∑ÁöÑ‰ø°ÊÅØ ËøûÊé•LDAPÊúçÂä°Âô® ÂÆâË£ÖËΩØ‰ª∂ÂåÖ yum -y install authconfig-gtk sssd ÊâßË°åauthconfig-gtk ÈÄâÊã©LDAPËÆ§ËØÅ ËæìÂÖ•ÂüüÂêç dc=xxx,dc=xxx ËæìÂÖ•LDAPÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñ‰∏ªÊú∫Âêç ‚àö TLSÔºå‰∏ãËΩΩËØÅ‰π¶ ÈÄâÊã©LDAP password ËøûÊé•ÊàêÂäüÂêéÔºåÂèØ‰ª•Êü•ÁúãÊúçÂä°Âô®ÂÜÖÁöÑÁî®Êà∑Êï∞ÊçÆ Êü•ÁúãÁî®Êà∑ id &lt;Áî®Êà∑&gt; ÔºàËØ•Áî®Êà∑‰∏çÊòØÊú¨Âú∞ÂàõÂª∫ÁöÑÔºåcat/etc/passwdÊü•ÁúãÔºâ]]></content>
      <categories>
        <category>Linux</category>
        <category>ËΩØ‰ª∂ÂåÖÁÆ°ÁêÜ</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[puttyËøûÊé•ubantu]]></title>
    <url>%2Fputty%E8%BF%9E%E6%8E%A5ubantu%2F</url>
    <content type="text"><![CDATA[È¶ñÂÖàÊü•ÁúãsshÁöÑÊúçÂä° 123root@chenxiaojian:~# ps -e | grep ssh 5391 ? 00:00:00 ssh-agent 16936 ? 00:00:00 sshd sshÁ®ãÂ∫èÂàÜ‰∏∫ÊúâÂÆ¢Êà∑Á´ØÁ®ãÂ∫èopenssh-clientÂíåÊúçÂä°Á´ØÁ®ãÂ∫èopenssh-server Â¶ÇÊûúÈúÄË¶ÅsshÁôªÈôÜÂà∞Âà´ÁöÑÁîµËÑëÔºåÈúÄË¶ÅÂÆâË£Öopenssh-clientÔºåËØ•Á®ãÂ∫èUbuntuÊòØÈªòËÆ§ÂÆâË£ÖÁöÑ„ÄÇËÄåÂ¶ÇÊûúÈúÄË¶Å‰ªéËøúÁ®ãËøûÊé•Âà∞Êú¨Êú∫ÔºåÂàôÈúÄË¶ÅÂÆâË£Öopenssh-server ÂÆâË£Öopenssh-server1sudo apt-get install openssh-server Êü•ÁúãÊòØÂê¶ÂÆâË£ÖÊàêÂäü 1ps -e | grep ssh ÂêØÂä®„ÄÅÂÅúÊ≠¢ÂíåÈáçÂêØopenssh-server 123/etc/init.d/ssh start/etc/init.d/ssh stop/etc/init.d/ssh restart Êü•ÁúãipÂú∞ÂùÄÔºöapt install net-tools1ipconfig Ubuntu‰∏≠SSHÊúçÂä°ÂÆâË£ÖÂÆåÊàêÂêéÊü•ÁúãÊòØÂê¶ÂÖÅËÆ∏rootÁî®Êà∑ÁôªÈôÜÔºåËã•‰∏çÂÖÅËÆ∏ÂàôÊó†Ê≥ïËøúÁ®ãÁôªÈôÜrootÁî®Êà∑ÔºåÈúÄË¶Å‰øÆÊîπÈÖçÁΩÆ È¶ñÂÖàÔºåÊâìÂºÄ‚Äú/etc/ssh/sshd_config‚Äù Êü•ÁúãÊòØÂê¶Êúâ‚ÄúPermitRootLogin yes‚ÄùÔºåÊ≤°ÊúâÊ∑ªÂä†Âç≥ÂèØÔºåÂÆåÊàêÂêé‰øùÂ≠òÈÄÄÂá∫ ÁÑ∂ÂêéÈúÄË¶ÅÈáçÊñ∞ËΩΩÂÖ•ËøôÊñá‰ª∂Ôºå‰∏çÁÑ∂Áî®puttyËøûÊé•Áî®rootÁôªÂΩï‰ºöË∂ÖÊó∂ÔºåÊó†Ê≥ïÊàêÂäü 1systemctl reload ssh Ê≥®ÊÑèÈóÆÈ¢ò‰∏ªÊú∫ÂíåËôöÊãüÊú∫‰∏≠ubantuÁöÑÁΩëÊÆµË¶Å‰∏ÄËá¥ 1234567891011121314151617C:\Users\ÈôàÂ∞èÂùö&gt;ipconfigWindows IP ÈÖçÁΩÆÊó†Á∫øÂ±ÄÂüüÁΩëÈÄÇÈÖçÂô® Êú¨Âú∞ËøûÊé•* 1: Â™í‰ΩìÁä∂ÊÄÅ . . . . . . . . . . . . : Â™í‰ΩìÂ∑≤Êñ≠ÂºÄËøûÊé• ËøûÊé•ÁâπÂÆöÁöÑ DNS ÂêéÁºÄ . . . . . . . :‰ª•Â§™ÁΩëÈÄÇÈÖçÂô® VMware Network Adapter VMnet1: ËøûÊé•ÁâπÂÆöÁöÑ DNS ÂêéÁºÄ . . . . . . . : Êú¨Âú∞ÈìæÊé• IPv6 Âú∞ÂùÄ. . . . . . . . : fe80::dd9:6adc:aff4:2a8d%12 IPv4 Âú∞ÂùÄ . . . . . . . . . . . . : 192.168.235.1 #ipÂú∞ÂùÄ Â≠êÁΩëÊé©Á†Å . . . . . . . . . . . . : 255.255.255.0 ÈªòËÆ§ÁΩëÂÖ≥. . . . . . . . . . . . . : 123456789101112131415161718root@chenxiaojian:~# ifconfigens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 192.168.18.129 netmask 255.255.255.0 broadcast 192.168.18.255 inet6 fe80::db1b:b0e6:2904:f468 prefixlen 64 scopeid 0x20&lt;link&gt; ether 00:0c:29:52:d5:63 txqueuelen 1000 (‰ª•Â§™ÁΩë) RX packets 15579 bytes 17077036 (17.0 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 4466 bytes 360668 (360.6 KB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt; loop txqueuelen 1000 (Êú¨Âú∞ÁéØÂõû) RX packets 556 bytes 48721 (48.7 KB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 556 bytes 48721 (48.7 KB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0]]></content>
      <categories>
        <category>Linux</category>
        <category>ssh</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux--Systemctl]]></title>
    <url>%2FLinux-Systemctl%2F</url>
    <content type="text"><![CDATA[SystemCtl ‰∏Ä‰∏™Á®ãÂ∫èÊúâ‰∏Ä‰∏™ÊàñÂ§ö‰∏™ËøõÁ®ã SystemCtlÂèØ‰ª•ÁÆ°ÁêÜÊúçÂä° ÊúçÂä°Â∞±ÊòØÂÆàÊä§ËøõÁ®ãÔºàsshd, httpdÔºâ systemctl -t sevice (Êü•ÁúãÊúçÂä°) systemctl start ssh systemctl stop ssh systemctl restart ssh systemctl reload ssh systemctl enable ssh systemctl disable ssh RHEL7ÁΩëÁªú ipÂú∞ÂùÄÔºåÊé©Á†ÅÔºåÁΩëÂÖ≥ÔºåDNSÔºå‰∏ªÊú∫Âêç IPV4 192.168.1.1 ÁÇπÂàÜÂçÅËøõÂà∂ 32‰Ωç ip address Êü•ÁúãIp‰ø°ÊÅØ ip route Êü•ÁúãË∑ØÁî±‰ø°ÊÅØ ip -s link Êü•ÁúãÊé•Âè£ÁªüËÆ°‰ø°ÊÅØ ËÆæÁΩÆ ÂõæÂΩ¢Âåñ nmtuiÔºåËÆæÁΩÆÂÆåÊàêÂêéËÆ∞ÂæóÈáçÊñ∞ÂêØÂä®ÁΩëÁªúÔºåsystemctl restart network ÂëΩ‰ª§Ë°å nmcli con mod help Êü•ÁúãÂ∏ÆÂä© nmcli con mod Ôºà‰∏çÂêåÁöÑlinuxÁâàÊú¨ÂèØËÉΩ‰∏çÂêåÔºâ nmcli con add nmcli con del nmcli con show ‰øÆÊîπÊñá‰ª∂ ‰∏çÂêåÁâàÊú¨ÁöÑlinuxÁ≥ªÁªüÔºåÁΩëÁªúÈÖçÁΩÆÊñá‰ª∂ÂèØËÉΩ‰∏çÂÆπ REHEÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏∫Ôºö/etc/sysconfig/network-scripts/ifcfg DNSÔºàÂüüÂêçÁ≥ªÁªüÔºâ Êèê‰æõipÂú∞ÂùÄÂíåÂüüÂêçÁöÑÊò†Â∞ÑÂÖ≥Á≥ª ‰∏ªÊú∫Âêç hostnameÊü•Áúã 12345678910root@chenxiaojian:/etc/network# hostnamectl Static hostname: chenxiaojian Icon name: computer-vm Chassis: vm Machine ID: f71657539bed41b18d278ff8d76a60f7 Boot ID: 1c3e9e525f2348aa8412bed75c6a79bf Virtualization: vmware Operating System: Ubuntu 18.04.3 LTS Kernel: Linux 5.0.0-27-generic Architecture: x86-64 1234567root@chenxiaojian:/etc/network# hostnamectl set-hostname chenchenxiaojianroot@chenxiaojian:/etc/network#root@chenxiaojian:/etc/network# hostnamechenchenxiaojianroot@chenxiaojian:/etc/network# hostnamectl set-hostname chenxiaojianroot@chenxiaojian:/etc/network# hostnamechenxiaojian 12root@chenxiaojian:/etc/network# vim /etc/hostname# ‰øÆÊîπhostnameÊñá‰ª∂]]></content>
      <categories>
        <category>Linux</category>
        <category>Systemctl</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑P1118„ÄëÊï∞Â≠ó‰∏âËßíÂΩ¢]]></title>
    <url>%2F%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞FJ and his cows enjoy playing a mental game. They write down the numbers from 111 toN(1‚â§N‚â§10) N(1 \le N \le 10)N(1‚â§N‚â§10) in a certain order and then sum adjacent numbers to produce a new list with one fewer number. They repeat this until only a single number is left. For example, one instance of the game (when N=4N=4N=4) might go like this: 12343 1 2 4 4 3 6 7 9 16 Behind FJ‚Äòs back, the cows have started playing a more difficult game, in which they try to determine the starting sequence from only the final total and the number NNN. Unfortunately, the game is a bit above FJ‚Äòs mental arithmetic capabilities. Write a program to help FJ play the game and keep up with the cows. ÊúâËøô‰πà‰∏Ä‰∏™Ê∏∏ÊàèÔºö ÂÜôÂá∫‰∏Ä‰∏™111Ëá≥NNNÁöÑÊéíÂàóaia_iaiÔºåÁÑ∂ÂêéÊØèÊ¨°Â∞ÜÁõ∏ÈÇª‰∏§‰∏™Êï∞Áõ∏Âä†ÔºåÊûÑÊàêÊñ∞ÁöÑÂ∫èÂàóÔºåÂÜçÂØπÊñ∞Â∫èÂàóËøõË°åËøôÊ†∑ÁöÑÊìç‰ΩúÔºåÊòæÁÑ∂ÊØèÊ¨°ÊûÑÊàêÁöÑÂ∫èÂàóÈÉΩÊØî‰∏ä‰∏ÄÊ¨°ÁöÑÂ∫èÂàóÈïøÂ∫¶Â∞ë111ÔºåÁõ¥Âà∞Âè™Ââ©‰∏ã‰∏Ä‰∏™Êï∞Â≠ó‰ΩçÁΩÆ„ÄÇ‰∏ãÈù¢ÊòØ‰∏Ä‰∏™‰æãÂ≠êÔºö 3,1,2,43,1,2,43,1,2,4 4,3,64,3,64,3,6 7,97,97,9 161616 ÊúÄÂêéÂæóÂà∞161616ËøôÊ†∑‰∏Ä‰∏™Êï∞Â≠ó„ÄÇ Áé∞Âú®ÊÉ≥Ë¶ÅÂÄíÁùÄÁé©ËøôÊ†∑‰∏Ä‰∏™Ê∏∏ÊàèÔºåÂ¶ÇÊûúÁü•ÈÅìNNNÔºåÁü•ÈÅìÊúÄÂêéÂæóÂà∞ÁöÑÊï∞Â≠óÁöÑÂ§ßÂ∞èsumsumsumÔºåËØ∑‰Ω†Ê±ÇÂá∫ÊúÄÂàùÂ∫èÂàóaia_iaiÔºå‰∏∫111Ëá≥NNNÁöÑ‰∏Ä‰∏™ÊéíÂàó„ÄÇËã•Á≠îÊ°àÊúâÂ§öÁßçÂèØËÉΩÔºåÂàôËæìÂá∫Â≠óÂÖ∏Â∫èÊúÄÂ∞èÁöÑÈÇ£‰∏Ä‰∏™„ÄÇ [color=red]ÁÆ°ÁêÜÂëòÊ≥®ÔºöÊú¨È¢òÊèèËø∞ÊúâËØØÔºåËøôÈáåÂ≠óÂÖ∏Â∫èÊåáÁöÑÊòØ1,2,3,4,5,6,7,8,9,10,11,121,2,3,4,5,6,7,8,9,10,11,121,2,3,4,5,6,7,8,9,10,11,12 ËÄå‰∏çÊòØ1,10,11,12,2,3,4,5,6,7,8,91,10,11,12,2,3,4,5,6,7,8,91,10,11,12,2,3,4,5,6,7,8,9[/color] ËæìÂÖ•Ê†ºÂºè‰∏§‰∏™Ê≠£Êï¥Êï∞n,sumn,sumn,sum„ÄÇ ËæìÂá∫Ê†ºÂºèËæìÂá∫ÂåÖÊã¨111Ë°åÔºå‰∏∫Â≠óÂÖ∏Â∫èÊúÄÂ∞èÁöÑÈÇ£‰∏™Á≠îÊ°à„ÄÇ ÂΩìÊó†Ëß£ÁöÑÊó∂ÂÄôÔºåËØ∑‰ªÄ‰πà‰πü‰∏çËæìÂá∫„ÄÇÔºàÂ•ΩÂ•áËë©ÂïäÔºâ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 14 16 ËæìÂá∫ #1 13 1 2 4 ËØ¥Êòé/ÊèêÁ§∫ÂØπ‰∫é40%40%40%ÁöÑÊï∞ÊçÆÔºån‚â§7n‚â§7n‚â§7Ôºõ ÂØπ‰∫é80%80%80%ÁöÑÊï∞ÊçÆÔºån‚â§10n‚â§10n‚â§10Ôºõ ÂØπ‰∫é100%100%100%ÁöÑÊï∞ÊçÆÔºån‚â§12,sum‚â§12345n‚â§12,sum‚â§12345n‚â§12,sum‚â§12345„ÄÇ ÊÄùË∑ØÔºöÈ¶ñÂÖàÂØπn‰∏™Êï∞ÁöÑÊúÄÁªàÂÄºËøõË°åÊ®°ÊãüÂèØ‰ª•ÂèëÁé∞‰∏Ä‰∏™ËßÑÂæãÔºåÂ¶ÇÂõæÊâÄÁ§∫ Âõ†Ê≠§ÔºåÊàë‰ª¨ÂèØ‰ª•Áî®‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑ‰øùÂ≠òÊù®Ëæâ‰∏âËßíÁöÑÂÄº‚Äîyhsj[i][j] Ë°®Á§∫Á¨¨iË°åÁ¨¨j‰∏™Êï∞Â≠ó ‚Äã yhsj[i][j] = yhsj[i-1][j] + yhsj[i-1][j-1] ‰πüÂ∞±ÊòØËØ¥Êàë‰ª¨ÂèØ‰ª•Áü•ÈÅìsumÊúânÈ°πÁªÑÊàê„ÄÇÊØè‰∏ÄÈ°πÁöÑÁ≥ªÊï∞Êàë‰ª¨‰πüÈÉΩÁü•ÈÅì‰∫ÜÔºåÊé•‰∏ãÊù•ÂØπÊØè‰∏ÄÈ°πËøõË°åÊûö‰∏æÂ∞±Ë°å‰∫Ü AC‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;stdlib.h&gt;#include &lt;iostream&gt;using namespace std;int n;int sum;int yhsj[13][13]; //Â≠òÊîæÊù®Ëæâ‰∏âËßí ÂÖ®Â±ÄÂèòÈáèÈªòËÆ§‰∏∫0int res[13];int vis[13];void dfs(int step, int temp_sum)&#123; if (temp_sum &gt; sum) return; if (step == n+1) &#123; if (temp_sum != sum) return; else &#123; for (int i = 1; i &lt;= n; i++) cout &lt;&lt; res[i] &lt;&lt; " "; cout &lt;&lt; endl; exit(0); &#125; &#125; for (int i = 1; i &lt;= n; i++) &#123; if (vis[i] == 0) &#123; vis[i] = 1; res[step] = i; dfs(step + 1, i*yhsj[n][step]+temp_sum); vis[i] = 0; &#125; &#125;&#125;int main()&#123; cin &gt;&gt; n &gt;&gt;sum; yhsj[1][1] = 1; for (int i = 2; i &lt;= n; i++) for (int j = 1; j &lt;= n; j++) yhsj[i][j] = yhsj[i-1][j] + yhsj[i-1][j-1]; //ÁîüÊàêÊù®Ëæâ‰∏âËßí dfs(1, 0);&#125; ÊÄªÁªì ËÑëÂ≠êÊòØ‰∏™Â•Ω‰∏úË•øÔºåÂèØÊÉúÊàëËøòÂú®ËøòÊ≤°Êúâ=V= Ê≠§Â§ñÔºåÈúÄË¶ÅÊéåÊè°Êù®Ëæâ‰∏âËßíÁöÑÁîüÊàê‰ª£Á†Å]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>Êö¥ÂäõÊûö‰∏æ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Áî®Êà∑ÂíåÁªÑ]]></title>
    <url>%2F%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%2F</url>
    <content type="text"><![CDATA[Áî®Êà∑ÂíåÁªÑ linuxÊòØÂ§öÁî®Êà∑Á≥ªÁªü Êñá‰ª∂ÂíåÁõÆÂΩïÊòØÂ±û‰∫é‰∏Ä‰∏™Áî®Êà∑ÔºåËøõÁ®ãÊòØ‰ª•‰∏Ä‰∏™Áî®Êà∑ÁöÑË∫´‰ªΩËøêË°åÔºàÊü•ÁúãËøõÁ®ãÁöÑÂëΩ‰ª§ ps auxÔºâ Áî®Êà∑ÂèØ‰ª•Âä†ÂÖ•‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÁªÑÔºå‰ΩÜÊòØÂè™Êúâ‰∏Ä‰∏™‰∏ªË¶ÅÁªÑÔºåÂèØ‰ª•ÊúâÂ§ö‰∏™ÈôÑÂ±ûÁªÑ /etc/passwd ‰øùÂ≠òÁî®Êà∑‰ø°ÊÅØ cat Êü•ÁúãÊñá‰ª∂ root‚Äã : x:0:0:root:/root:/bin/bash rootÔºöÁî®Êà∑ÂêçÁß∞ x: ÂØÜÁ†ÅÔºå‰ª•ÂâçÂ≠òÊîæÂØÜÁ†ÅÁöÑ‰ΩçÁΩÆ 0ÔºöUID,Ê†áËØÜÁî®Êà∑ 0Âõ∫ÂÆöÂàÜÈÖçÁªôrootÔºõ1-999ÂàÜÈÖçÁªôÁ≥ªÁªüÁî®Êà∑Ôºõ1000Âèä‰ª•‰∏äÂàÜÈÖçÊôÆÈÄöÁî®Êà∑ 0ÔºöGIDÔºåÊ†áËØÜÁî®Êà∑ÁªÑ rootÔºöÂ°´ÂÖÖÂ≠óÊÆµ /rootÔºöÁî®Êà∑ÁöÑ‰∏ªÁõÆÂΩï /bin/bash :Áî®Êà∑‰ΩøÁî®ÁöÑÁôªÂΩïshell /etc/group‰øùÂ≠òÁî®Êà∑ÁªÑ‰ø°ÊÅØ root‚Äã ‚ÄãÔºöx:0: root: Áî®Êà∑ÁªÑÂêçÁß∞ xÔºöÂØÜÁ†ÅÔºå‰ª•ÂâçÂ≠òÊîæÂØÜÁ†ÅÁöÑ‰ΩçÁΩÆ 0ÔºöGIDÔºåÊ†áËØÜÁî®Êà∑ÁªÑ : Áî®Êà∑ÂàóË°® id +Áî®Êà∑ 12chenxiaojian@chenxiaojian:~$ id chenxiaojianuid=1000(chenxiaojian) gid=1000(chenxiaojian) ÁªÑ=1000(chenxiaojian),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),116(lpadmin),126(sambashare) /etc/shadow‰øùÂ≠òÁî®Êà∑ÂØÜÁ†Å ÁÆ°ÁêÜÁî®Êà∑ (nologin ‚Äì‰∏çÂèØÁôªÂΩïÁöÑshell) useradd Ê∑ªÂä†Áî®Êà∑ ‰ºöËá™Âä®ÂàõÂª∫/home ÁõÆÂΩïÂíåÈÇÆÁÆ±ÁõÆÂΩï Áî®Ê≥ïÔºöuseradd [ÈÄâÈ°π] &lt;Áî®Êà∑&gt; -d ÊåáÂÆöÁî®Êà∑ÁöÑ‰∏ªÁõÆÂΩï -u ÊåáÂÆöÁî®Êà∑ÁöÑUID -g ÊåáÂÆö‰∏ªË¶ÅÁªÑ -G ÊåáÂÆöÈôÑÂ±ûÁªÑ -s ÊåáÂÆöÁî®Êà∑ÁôªÂΩïÁöÑshell 1234567root@chenxiaojian:~# useradd user1root@chenxiaojian:~# id user1uid=1001(user1) gid=1001(user1) ÁªÑ=1001(user1)root@chenxiaojian:~# tail -1 /etc/passwd (Êü•ÁúãÊñá‰ª∂ÁöÑÊúÄÂêé‰∏ÄË°å)user1:x:1001:1001::/home/user1:/bin/sh# ÂèØ‰ª•ÁúãÂá∫user1Áî®Êà∑ÁöÑ‰∏ªÁõÆÂΩïÊòØ/home/user1 (ÈªòËÆ§ÁöÑ) 1234567891011121314151617181920212223242526272829303132333435363738394041 #ÊåáÂÆöÁî®Êà∑ÁöÑ‰∏ªÁõÆÂΩï root@chenxiaojian:/# useradd -d /test user2 root@chenxiaojian:/# id user2 uid=1002(user2) gid=1002(user2) ÁªÑ=1002(user2) root@chenxiaojian:/# tail -1 /etc/passwduser2:x:1002:1002::/test:/bin/sh #ÊåáÂÆöÁî®Êà∑ÁöÑUID root@chenxiaojian:/# useradd -u 1500 user3 root@chenxiaojian:/# id user3 uid=1500(user3) gid=1500(user3) ÁªÑ=1500(user3) root@chenxiaojian:/# tail -1 /etc/passwduser3:x:1500:1500::/home/user3:/bin/sh #ÊåáÂÆöÁî®Êà∑ÁöÑ‰∏ªË¶ÅÁªÑ root@chenxiaojian:/# useradd -g chenxiaojian user4 root@chenxiaojian:/# id user4 uid=1501(user4) gid=1000(chenxiaojian) ÁªÑ=1000(chenxiaojian) root@chenxiaojian:/# tail -1 /etc/passwduser4:x:1501:1000::/home/user4:/bin/sh #ÊåáÂÆöÁî®Êà∑ÁöÑÈôÑÂ±ûÁªÑ root@chenxiaojian:/# useradd -G user1,user2,user3 user5 root@chenxiaojian:/# id user5 uid=1502(user5) gid=1502(user5) ÁªÑ=1502(user5),1001(user1),1002(user2),1500(user3) root@chenxiaojian:/# tail /etc/group avahi:x:122: colord:x:123: geoclue:x:124: gdm:x:125: chenxiaojian:x:1000: sambashare:x:126:chenxiaojian user1:x:1001:user5 #ÔºàËøôÈáåË°®Á§∫user5ÊòØuser1ÁöÑÁî®Êà∑Ôºâ user2:x:1002:user5 user3:x:1500:user5user5:x:1502: #ÊåáÂÆöÁî®Êà∑ÁôªÂΩïÁöÑshell root@chenxiaojian:/# useradd -s /sbin/nologin webuser root@chenxiaojian:/# tail -1 /etc/passwd webuser:x:1503:1503::/home/webuser:/sbin/nologin usermod ‰øÆÊîπÁî®Êà∑ -g ‰øÆÊîπÁî®Êà∑ÁöÑ‰∏ªË¶ÅÁªÑ ‰∏çÂª∫ËÆÆ‰ΩøÁî®Ëøô‰∏™ÔºåÂàõÂª∫Áî®Êà∑‰∏çÊåáÂÆöËøô‰∏™Ôºå‰ºöËá™Âä®Âàõ‰∏Ä‰∏™ÂíåÊú¨Áî®Êà∑Áõ∏ÂêåÂêçÂ≠óÁöÑÁªÑ‰Ωú‰∏∫‰∏ªË¶ÅÁªÑ -a Ê∑ªÂä†ÈôÑÂ±ûÁªÑÔºå‰∏é-G ÈÖçÂêà‰ΩøÁî® ÔºàÂ¶ÇÊûúÂè™ÊòØusermod -G ‰øÆÊîπÈôÑÂ±ûÁªÑÔºåÈÇ£‰πà‰ºöË¶ÜÁõñÊéâÂΩìÂâçÁöÑÁªÑÔºâ-aË°®Á§∫ËøΩÂä†ÁöÑ 12345root@chenxiaojian:/# id user2uid=1002(user2) gid=1002(user2) ÁªÑ=1002(user2)root@chenxiaojian:/# usermod -aG user1 user2root@chenxiaojian:/# id user2uid=1002(user2) gid=1002(user2) ÁªÑ=1002(user2),1001(user1) -mÁßªÂä®‰∏ªÁõÆÂΩïÔºå‰∏é-dÈÖçÂêà‰ΩøÁî® 1234567891011121314root@chenxiaojian:/home# tail -5 /etc/passwduser2:x:1002:1002::/test:/bin/shuser3:x:1500:1500::/home/user3:/bin/shuser4:x:1501:1000::/home/user4:/bin/shuser5:x:1502:1502::/home/user5:/bin/shwebuser:x:1503:1503::/home/webuser:/sbin/nologinroot@chenxiaojian:/home# usermod -md /home/user2 user2root@chenxiaojian:/home# tail -5 /etc/passwduser2:x:1002:1002::/home/user2:/bin/shuser3:x:1500:1500::/home/user3:/bin/shuser4:x:1501:1000::/home/user4:/bin/shuser5:x:1502:1502::/home/user5:/bin/shwebuser:x:1503:1503::/home/webuser:/sbin/nologin userdel Âà†Èô§Áî®Êà∑ -r Âà†Èô§ 1root@chenxiaojian:/home# userdel webuser ÁÆ°ÁêÜÁî®Êà∑ÁªÑ groupadd Ê∑ªÂä†Áî®Êà∑ÁªÑ -g ÊåáÂÆöGID groupmod groupdel ËÆæÁΩÆÁî®Êà∑ÂØÜÁ†Å passwd &lt;Áî®Êà∑&gt; Ê≥®ÔºörootÂèØ‰ª•ËÆæÁΩÆÊâÄÊúâÁî®Êà∑ÁöÑÂØÜÁ†ÅÔºåÊôÆÈÄöÁî®Êà∑Âè™ËÉΩËÆæÁΩÆËá™Ë∫´ÁöÑÂØÜÁ†Å„ÄÅ echo &lt;ÂØÜÁ†Å&gt; | passwd ‚Äìstdin &lt;Áî®Êà∑&gt; ÂàáÊç¢Áî®Êà∑ su &lt;Áî®Êà∑Âêç&gt; 1234#‰øÆËØ•Áî®Êà∑ÁôªÂΩïÁöÑshellroot@chenxiaojian:/home# usermod -s /bin/bash user1root@chenxiaojian:/home# su user1user1@chenxiaojian:/home$ ^C Ê≥®ÊÑèÔºå‰ΩøÁî®sudo ÊèêÂçáÊùÉÈôêÁöÑÂâçÊèêÊòØ‰Ω†Ëøô‰∏™Áî®Êà∑ÁöÑÁªÑ‰πã‰∏≠ÊúârootÁªÑ Êñá‰ª∂ÊùÉÈôê UGOÔºöÁî®Êà∑„ÄÅÁªÑ„ÄÅÂÖ∂‰ªñ r‰ª£Ë°®ËØªÂèñ w‰ª£Ë°®ÂÜôÂÖ• x‰ª£Ë°®ÊâßË°å ÊùÉÈôê ÂØπÊñá‰ª∂ÁöÑÂΩ±Âìç ÂØπÁõÆÂΩïÁöÑÂΩ±Âìç rËØªÂèñ Êü•ÁúãÊñá‰ª∂ÁöÑÂÜÖÂÆπ Êü•ÁúãÁõÆÂΩïÁöÑÂÜÖÂÆπÔºàÁõÆÂΩï‰∏ãÁöÑÊñá‰ª∂Ôºâ wÂÜôÂÖ• ‰øÆÊîπÊñá‰ª∂ÁöÑÂÜÖÂÆπ ÂàõÂª∫ÊàñÂà†Èô§Êñá‰ª∂ÊàñÂ≠êÁõÆÂΩï xÊâßË°å ÊâßË°åÊñá‰ª∂ ËÆøÈóÆÁõÆÂΩïÔºå‰øÆÊîπÁõÆÂΩï‰∏ãÊñá‰ª∂ÁöÑÂÜÖÂÆπÔºàÊñá‰ª∂Êú¨Ë∫´ÊùÉÈôêÔºâ ‰øÆÊîπÊñá‰ª∂ÊùÉÈôê Ôºàchange + modÔºâÔºà‰øÆÊîπ + ÊùÉÈôêÔºâ Á¨¶Âè∑Ê≥ï ÔºàugoaÔºâ‚Äì&gt;user,group,other, any(‰ªª‰Ωï) chmod &lt;ugoa&gt;&lt;+-=&gt;&lt;rwx-&gt; chmod u=rw,g=rw,o=rw file1 Ê≥®ÊÑèÔºåu=rw,g=rw‰πãÈó¥‰∏çËÉΩÊúâÁ©∫Ê†º chmod -R ==&gt;ÈÄíÂΩíËÆæÁΩÆ drwxr-xr-x ÂÖ∂‰∏≠Ôºåu‰ª£Ë°®Êñá‰ª∂ÊâÄÊúâËÄÖÁöÑÊùÉÈôêÔºå‰πüÂ∞±ÊòØÁ¨¨‰∫åÂà∞Á¨¨Âõõ‰ΩçÔºàrwxÔºâ g‰ª£Ë°®ÁöÑÊñá‰ª∂ÊâÄÂ±ûÁªÑÁöÑÊùÉÈôêÔºå‰πüÂ∞±ÊòØÁ¨¨‰∫î‰ΩçÂà∞Á¨¨‰∏É‰ΩçÁöÑÊùÉÈôêÔºàr-xÔºâ o‰ª£Ë°®ÁöÑÂÖ∂‰ªñÁî®Êà∑ÁöÑÊùÉÈôêÔºå‰πüÂ∞±ÊòØÁ¨¨ÂÖ´‰ΩçÂà∞Á¨¨10‰ΩçÔºàr-xÔºâ ËÄåaÂàôÊòØ‰ª£Ë°®ÂÖ®ÈÉ®„ÄÇ(‰πüÂèØ‰ª•ÁúÅÁï•‰∏çÂÜô) 1234567891011drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-r--r-- 1 chenxiaojian chenxiaojian 0 9Êúà 11 14:13 file1drwxr-xr-x 2 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 test_dir/chenxiaojian@chenxiaojian:~/test$ chmod g+w file1chenxiaojian@chenxiaojian:~/test$ llÊÄªÁî®Èáè 12drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-rw-r-- 1 chenxiaojian chenxiaojian 0 9Êúà 11 14:13 file1drwxr-xr-x 2 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 test_dir/ 1234567chenxiaojian@chenxiaojian:~/test$ chmod u=rw,g=rw,o=rw file1chenxiaojian@chenxiaojian:~/test$ llÊÄªÁî®Èáè 12drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-rw-rw- 1 chenxiaojian chenxiaojian 0 9Êúà 11 14:13 file1drwxr-xr-x 2 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 test_dir/ Êï∞ÂÄºÊ≥ï chmod NNN &lt;Êñá‰ª∂&gt; r = 4, w = 2 ,x = 1, -= 0 chmod 640 file1 Â∞±ÊòØËÆæÁΩÆfile1ÁöÑÊâÄÊúâËÄÖÁöÑÊùÉÈôê‰∏∫r + w = 6 ÊâÄÂ±ûÁªÑÁöÑÊùÉÈôê‰∏∫r = 4 ÂÖ∂‰ªñÁî®Êà∑Ê≤°ÊúâÊùÉÈôê 0 = - ‰øÆÊîπÊñá‰ª∂ÁöÑÊâÄÊúâËÄÖÂíåÊâÄÂ±ûÁªÑ Ê≥®ÊÑèÔºöÈªòËÆ§ÁöÑÊâÄÊúâËÄÖÊòØÂàõÂª∫ËØ•Êñá‰ª∂ÁöÑÁî®Êà∑ÔºåÊâÄÂ±ûÁªÑÊòØÂàõÂª∫ËØ•Êñá‰ª∂ÁöÑÁî®Êà∑ÁöÑ‰∏ªË¶ÅÁªÑ chown &lt;ÊâÄÊúâËÄÖ&gt;:&lt;ÊâÄÂ±ûÁªÑ&gt; &lt;Êñá‰ª∂&gt; Áî®Ê≥ï 12345678910111213141516171819202122232425262728293031root@chenxiaojian:/home/chenxiaojian/test# llÊÄªÁî®Èáè 12drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-rw-rw- 1 chenxiaojian chenxiaojian 0 9Êúà 11 14:13 file1drwxrwxrwx 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:35 test_dir/root@chenxiaojian:/home/chenxiaojian/test# chown root:root file1root@chenxiaojian:/home/chenxiaojian/test# llÊÄªÁî®Èáè 12drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-rw-rw- 1 root root 0 9Êúà 11 14:13 file1drwxrwxrwx 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:35 test_dir/root@chenxiaojian:/home/chenxiaojian/test# root@chenxiaojian:/home/chenxiaojian/test# root@chenxiaojian:/home/chenxiaojian/test# chown chenxiaojian file1root@chenxiaojian:/home/chenxiaojian/test# llÊÄªÁî®Èáè 12drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-rw-rw- 1 chenxiaojian root 0 9Êúà 11 14:13 file1drwxrwxrwx 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:35 test_dir/root@chenxiaojian:/home/chenxiaojian/test# root@chenxiaojian:/home/chenxiaojian/test# root@chenxiaojian:/home/chenxiaojian/test# chown :chenxiaojian file1root@chenxiaojian:/home/chenxiaojian/test# llÊÄªÁî®Èáè 12drwxr-xr-x 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ./drwxr-xr-x 19 chenxiaojian chenxiaojian 4096 9Êúà 11 14:13 ../-rw-rw-rw- 1 chenxiaojian chenxiaojian 0 9Êúà 11 14:13 file1drwxrwxrwx 3 chenxiaojian chenxiaojian 4096 9Êúà 11 14:35 test_dir/ Êñá‰ª∂ÁöÑÁâπÊÆäÊùÉÈôê ÊùÉÈôê ÂØπÊñá‰ª∂ÁöÑÂΩ±Âìç ÂØπÁõÆÂΩïÁöÑÂΩ±Âìç u+s 4 ‰ª•Êñá‰ª∂ÊâÄÊúâËÄÖÁöÑË∫´‰ªΩËøêË°åÔºåËÄå‰∏çÊòØËøêË°åËØ•ÂëΩ‰ª§ÁöÑÁî®Êà∑Ë∫´‰ªΩËøêË°å Êó† g+s 2 ‰ª•Êñá‰ª∂ÊâÄÂ±ûÁªÑÁöÑË∫´‰ªΩËøêË°å ÁõÆÂΩïÊñá‰ª∂ÊàñÂ≠êÁõÆÂΩï‰ºöÁªßÊâøÁªÑÂÖ≥Á≥ª o+t 1 Êó† Âè™ÊúârootÂíåÊñá‰ª∂ÁöÑÊâÄÊúâËÄÖÊâçËÉΩÂà†Èô§Ëøô‰∏™ÁõÆÂΩï 123# u+sË°®Á§∫Âú®userÁöÑÊùÉÈôê‰∏≠Êúâ‰∏™s,ÈÇ£‰πà‰æãÂ¶Çpasswd,Ëøô‰∏™ÂëΩ‰ª§ÔºåÊàë‰ª¨Âú®chenxiaojianÁöÑË∫´‰ªΩ‰∏ãËøêË°åÔºåÂÆûÈôÖ‰∏äÊòØÁî±ËØ•ÂëΩ‰ª§ÁöÑÊâÄÊúâËÄÖ‰πüÂ∞±ÊòØrootÊâßË°åroot@chenxiaojian:/home/chenxiaojian/test# ll /usr/bin/passwd-rwsr-xr-x 1 root root 59640 3Êúà 23 03:05 /usr/bin/passwd* ËÆæÁΩÆÁâπÊÆäÊùÉÈôê Á¨¶Âè∑Ê≥ï chmod u+s &lt;Êñá‰ª∂&gt; chmod g+s &lt;Êñá‰ª∂ | ÁõÆÂΩï&gt; chmod o+t &lt;ÁõÆÂΩï&gt; Êï∞ÂÄºÊ≥ï chmod NNNN &lt;Êñá‰ª∂/ÁõÆÂΩï&gt; Á¨¨‰∏Ä‰∏™NÂ∞±ÊòØË°®Á§∫ÁâπÊÆäÊùÉÈôê ACL(ËÆøÈóÆÊéßÂà∂ÂàóË°®) UGOÊùÉÈôê‰∏çËÉΩÊª°Ë∂≥Á≤æÁªÜËÆæÁΩÆÊùÉÈôêÁöÑË¶ÅÊ±Ç ACLÂèØ‰ª•ÈíàÂØπÁî®Êà∑ÊàñÁªÑËÆæÁΩÆÂçïÁã¨ÁöÑÊùÉÈôê setfacl -m u:&lt;Áî®Êà∑&gt;:&lt;ÊùÉÈôê&gt; &lt;Êñá‰ª∂&gt;ÔºàÂÖ∂‰∏≠u‰ª£Ë°®ÁöÑÂ∞±ÊòØÁî®Êà∑ÔºåÂ¶ÇÊûúÊòØg,ÂàôË°®Á§∫‰∏∫ÁªÑÔºâ setfacl -x u:&lt;Áî®Êà∑&gt; &lt;Êñá‰ª∂&gt; Âà†Âá∫Áî®Êà∑ÂØπÊñá‰ª∂ÁöÑÊùÉÈôê setfacl -b &lt;Êñá‰ª∂&gt; Âà†Âá∫ÊâÄÊúâÁöÑËÆæÁΩÆÊùÉÈôê Êü•ÁúãËÆæÁΩÆÊñá‰ª∂ÊùÉÈôêÁöÑÁªìÊûúÔºögetfacl &lt;Êñá‰ª∂&gt; ÈóÆÈ¢òÔºöËÆæÁî®Êà∑chenxiaojianÂØπfile1Ê≤°Êúâ‰ªª‰ΩïÊùÉÈôêÔºåËÄåÁî®Êà∑user1ÂØπfile1ÊúâËØªÂÜôÁöÑÊìç‰Ωú 12 chenxiaojian@chenxiaojian:~/test$ setfacl -m u:chenxiaojian:- file1chenxiaojian@chenxiaojian:~/test$ setfacl -m u:user1:rw file1 ÁªìÊûúÔºö file: file1 owner: chenxiaojian group: chenxiaojian user::rw-user:chenxiaojian:‚Äîuser:user1:rw-group::rw-mask::rw-other::rw-]]></content>
      <categories>
        <category>Linux</category>
        <category>Áî®Êà∑ÂíåÁªÑ</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LVM]]></title>
    <url>%2FLVM%2F</url>
    <content type="text"><![CDATA[ÈÄªËæëÂç∑ÁÆ°ÁêÜÂô®LVM MBRÁ£ÅÁõòÂàÜÂå∫ÊñπÂºèÁöÑÂ±ÄÈôêÊÄß LVMÁöÑÂéüÁêÜ LVMÊú∫Âà∂ÁöÑÂü∫Êú¨Ê¶ÇÂøµ PV ‚ÄìÁâ©ÁêÜÂç∑ ÈªòËÆ§ÂåÖÊã¨ËÆ∏Â§öÂ§ßÂ∞è‰∏∫4MBÁöÑPEÂùó VG ‚ÄìÂç∑ÁªÑ ‰∏Ä‰∏™ÊàñÂ§ö‰∏™Áâ©ÁêÜÂç∑ÁªÑÂêàËÄåÊàêÁöÑÊï¥‰Ωì LV ‚ÄìÈÄªËæëÂç∑ ‰ªéÂç∑ÁªÑÊ±áÊÄªÂàÜÂâ≤Âá∫ÁöÑ‰∏ÄÂùóÁ©∫Èó¥ÔºåÁî®‰∫éÂª∫Á´ãÊñá‰ª∂Á≥ªÁªü LVMÁöÑÁÆ°ÁêÜÂëΩ‰ª§ ÂäüËÉΩ Áâ©ÁêÜÂç∑ÁÆ°ÁêÜ Âç∑ÁªÑÁÆ°ÁêÜ ÈÄªËæëÂç∑ÁÆ°ÁêÜ Scan Êâ´Êèè pvscan vgscan lvscan Create Âª∫Á´ã pvcreate vgcreate lvcreate Display ÊòæÁ§∫ pvdisplay vgdisplay lvdisplay Remove Âà†Èô§ pvremove vgremove lvremove Exttend Êâ©Â±ï vgextend lvextend ÂàõÂª∫LVMÈÄªËæëÂç∑ÁöÑËøáÁ®ã ÂàÜÂå∫‚Äì„Äãpv‚Äì„Äãvg‚Äì„Äãlv‚Äì„ÄãÊ†ºÂºèÂåñ‚Äì„ÄãÊåÇËΩΩÊñá‰ª∂Á≥ªÁªü ËΩ¨ÂåñÁâ©ÁêÜÂç∑ ‰ΩøÁî®fdiskÂëΩ‰ª§ËßÑÂàí‰∏§‰∏™ÂàÜÂå∫ÔºåÁ±ªÂûãËÆæÁΩÆ‰∏∫‚Äú8e‚ÄùÔºà‰πüÂ∞±ÊòØËØ¥ÔºåÂ¶ÇÊûúÊàë‰ª¨Êñ∞Âä†ÂÖ•‰∏§‰∏™ÁõòÔºåÊàë‰ª¨ÂèØ‰ª•Âú®Ëøô‰∏§‰∏™Áõò‰∏äÂêÑËá™Êñ∞Âª∫‰∏Ä‰∏™ÂàÜÂå∫ÔºåÁÑ∂ÂêéÂÜçÂØπ‰∏§‰∏™ÂàÜÂå∫ËøõË°åÊìç‰ΩúÔºâ Â¶ÇÊûúËÆæÁΩÆ‰∏∫‚Äú8e‚ÄùÔºå fdiskËøõÂÖ•ÂëΩ‰ª§ÔºåËæìÂÖ•‚Äút‚ÄùÊîπÂèòÂàÜÂå∫idÁ±ªÂûãÔºåËæìÂÖ•‚Äú8e‚ÄùÔºå‰ª£Ë°®ÈÄªËæëÂç∑Á±ªÂûãÔºåËæìÂÖ•pÊâìÂç∞ÔºåÁ°ÆËÆ§Êó†ËØØËæìÂÖ•w‰øùÂ≠òÈÄÄÂá∫ pvcreateÂàõÂª∫Áâ©ÁêÜÂç∑ ÂèØ‰ª•ÂÖàÁî®pvscanÊâ´ÊèèÊòØÂê¶ÊúâpvÁâ©ÁêÜÂç∑ ‰ΩøÁî®pvcreateÂëΩ‰ª§ËøõË°åÂàõÂª∫ pvcreate /dev/sdc1 pvcreate /dev/sdd1 ÂàõÂª∫Âç∑ÁªÑ ‰ΩøÁî®vgcreateÂëΩ‰ª§ÔºàÂèØ‰ª•‰ΩøÁî®vgscanÊâ´Êèè‰∏ÄÈÅçÔºâ vgcreate mail_store /dev/sdc1 /dev/sdd1 mail_storeË°®Á§∫ÁöÑÂç∑ÁªÑÂêçÔºåÂêéÈù¢‰∏§‰∏™Â∞±ÊòØÂàöÊâçÊñ∞Âª∫ÁöÑÂàÜÂå∫ ÂàõÂª∫ÈÄªËæëÂç∑ ‰ΩøÁî®lvcreateÂëΩ‰ª§ÂàõÂª∫ÈÄªËæëÂç∑ ‰æãÂ¶ÇÔºömail,ÂàÜÈÖç3G lvcreate -L 3G -n mail mail_store ÂàõÂª∫Êñá‰ª∂Á≥ªÁªü mkfs -t ext4 /dev/mail_store/mail ÊåÇËΩΩ mount -t ext4 /dev/mail_store/mail /testLvm ÊåÇËΩΩÂà∞Êñá‰ª∂Â§πtestLvm df -ThÊü•Áúã Êñá‰ª∂Á≥ªÁªüÊ∑ªÂä†ÂÆåÂêé‰ºöËá™Âä®Ê∑ªÂä†‰∏Ä‰∏™Âà´Âêç /dev/mapper/mail_store/mail LVMÁöÑÊâ©ÂÆπ VGÂç∑ÁªÑËøòÊúâÂâ©‰ΩôÁ©∫Èó¥ ÊâßË°å lvextend -L +3G /dev/mail_store/mail (Êâ©Â±ïlvmÈÄªËæëÂç∑mailÁöÑÂ§ßÂ∞è) Êõ¥Êñ∞Êñá‰ª∂Á≥ªÁªüÂ§ßÂ∞è resize2fs /dev/mail_store/mail Â¶ÇÊûúÊñá‰ª∂Á≥ªÁªü‰∏∫ xfs ÂàôÁî® xfs_growfs Êù•Êâ©ÂÆπÊñá‰ª∂Á≥ªÁªüÔºå Â¶ÇÊûú‰∏∫ext4ÔºåÂàô‰ΩøÁî®resize2fs Êõ¥Êñ∞Êñá‰ª∂Á≥ªÁªüÁöÑÂ§ßÂ∞è VGÂç∑ÁªÑÊ≤°ÊúâÂâ©‰ΩôÁ©∫Èó¥ Ëß£ÂÜ≥ÊñπÊ°àÔºöÊñ∞Êâæ‰∏ÄÂùóÂàÜÂå∫/dev/sd* ËΩ¨Âåñ‰∏∫pvÔºåÂä†Âà∞VG‰∏≠ pvcreate /dev/sdc2 vgextend mail_store /dev/sdc2ÔºàÂ∞ÜÊñ∞Âª∫ÁöÑpvÂä†Âà∞mail_storeÂç∑ÁªÑ‰∏äÔºâ Â∞Ü‰πãÂâçÂàõÂª∫ÁöÑlvÔºàÊú¨Êù•ÊòØ3GÔºåÁé∞Âú®Êâ©Â±ïÂà∞6GÔºâ lvextend -L +3G /dev/mail_store/mail ÔºàÂ¶ÇÊûú‰∏çÂä†‚Äú+‚Äù,Ë°®Á§∫Âä†Âà∞3GÔºâ ‰ΩøÁî®resize2fsÂëΩ‰ª§Êõ¥Êñ∞Á≥ªÁªüËØÜÂà´ÁöÑÊñá‰ª∂Á≥ªÁªüÂ§ßÂ∞è resize2fs /dev/mail_store/mail LVMÁöÑÁº©ÂáèÊìç‰Ωú ÂâçÊèêÊòØ‰∏çÂΩ±ÂìçÊï∞ÊçÆ ËÑ±Êú∫Áä∂ÊÄÅ‰∏ãÁöÑÁº©ÂáèÔºà‰πãÂâçÂàõÂª∫ÁöÑÊñá‰ª∂Á≥ªÁªüext4‰∏çÊîØÊåÅonlineÁä∂ÊÄÅËøõË°åÁº©ÂáèÔºâ ÂÖàÂç∏ËΩΩÊåÇËΩΩÁÇπ umount /testLvm ÈáçÊñ∞ËØÜÂà´Áº©ÂáèÁöÑÊñá‰ª∂Â§ßÂ∞è resize2fs /dev/mail_store/mail 3G ÔºàË°®Á§∫Áº©ÂáèÂà∞3GÔºâ lvreduce -L 3G /dev/mail_store/mail ÈáçÊñ∞ÊåÇËΩΩ mount -t ext4/ /dev/mail-store/mail /test/Lvm Ê≥®ÊÑèÊ≥®ÊÑèÔºÅÔºÅÔºÅÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåmountÂëΩ‰ª§ËøõË°åÊåÇËΩΩÂè™ÊòØÊöÇÊó∂ÁöÑÔºåÊ∞∏‰πÖÊåÇËΩΩÈúÄË¶ÅÂà∞/etc/fstabËøô‰∏™ÈÖçÁΩÆÊñá‰ª∂ËøõË°åÊåÇËΩΩ]]></content>
      <categories>
        <category>Linux</category>
        <category>LVMÈÄªËæëÂç∑</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ®ÊéíÂàó]]></title>
    <url>%2F%E5%85%A8%E6%8E%92%E5%88%97%2F</url>
    <content type="text"><![CDATA[ÂÖ®ÊéíÂàóÁöÑÊÄùÊÉ≥ ÂØπ‰∫é‰∏Ä‰∏≤Â∫èÂàóÔºåÈ¶ñÂÖàÁ°ÆÂÆöÁ¨¨‰∏Ä‰∏™Êï∞Ôºå‰πüÂ∞±ÊòØÁ¨¨‰∏Ä‰∏™Êï∞‰∏éÂÖ∂‰ªñÊï∞ËøõË°å‰∫§Êç¢ÔºàÂåÖÊã¨‰ªñÊú¨Ë∫´Ôºâ ‰æãÂ¶Ç1 2 3 ‚Äî„Äã 1 2 3 „ÄÅ 2 1 3„ÄÅ3 2 1 ÁÑ∂ÂêéÁ°ÆÂÆöÁ¨¨‰∫å‰∏™Êï∞ ‰æãÂ¶Ç1 2 3 Â∑≤ÁªèÁ°ÆÂÆöÁ¨¨‰∏Ä‰∏™Êï∞‰∏∫1ÔºåÈÇ£‰πàÁ¨¨‰∫å‰∏™Êï∞‰∏∫ 1 2 3 ‚Äì&gt; 1 2 3 „ÄÅ1 3 2 ÂØπ‰∫éÂ§ö‰ΩçÊï∞Ôºå‰ª•Ê≠§Á±ªÊé®=v= 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657// ÂÖ®ÊéíÂ∫èÈóÆÈ¢ò.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//#include &lt;iostream&gt;using namespace std;int arr[500];void swap(int &amp;a, int &amp;b)&#123; int temp = a; a = b; b = temp;&#125;void permutations(int n, int m)&#123; if (n == m) &#123; for (int k = 0; k &lt; m; k++) cout &lt;&lt; arr[k] &lt;&lt; " "; cout &lt;&lt; endl; &#125; else &#123; for (int k = n; k &lt; m; k++) &#123; swap(arr[k], arr[n]); permutations(n + 1, m); swap(arr[k], arr[n]); &#125; &#125;&#125;int main()&#123; for (int i = 0; i &lt; 3; i++) cin &gt;&gt; arr[i]; permutations(0, 3); return 0;&#125;//Ëøô‰∏™‰ª£Á†ÅÁöÑÊâßË°åÈ°∫Â∫èÊòØÁ¨¨‰∏Ä‰∏™Êï∞ÈúÄË¶Å‰∏éÂÖ∂‰ªñÊï∞ÔºàÂåÖÊã¨‰ªñÊú¨Ë∫´ÔºâËøõË°å‰∫§Êç¢ÔºåËøôÊ†∑Â∞±Á°ÆÂÆö‰∫ÜÁ¨¨‰∏Ä‰∏™Êï∞//ÁÑ∂ÂêéÁ¨¨‰∫å‰∏™Êï∞‰πüÊòØÂêåÊ†∑ÁöÑÂéüÁêÜÔºåÁ¨¨‰∫å‰∏™Êï∞‰∏éÁ¨¨‰∫å‰∏™Êï∞ÔºåËøòÊúâÂêéÈù¢‰πüÂ∞±ÊòØÁ¨¨‰∏â‰∏™Êï∞...ËøõË°å‰∫§Êç¢ÔºåËøôÊ†∑‰πüÂ∞±ÊòØÁ°ÆÂÆö‰∫ÜÁ¨¨‰∫å‰∏™Êï∞//‰æãÂ¶ÇÔºö1,2,3 //È¶ñÂÖàÊâßË°åÁöÑÊòØ1Âíå1ËøõË°å‰∫§Êç¢ÔºåÁÑ∂ÂêéÈÄíÂΩíÔºå2‰∏é2ËøõË°å‰∫§Êç¢ÔºåÁÑ∂ÂêéÈÄíÂΩíÔºå3‰∏é3ËøõË°å‰∫§Êç¢ÔºåËøôÊ†∑Á°ÆÂÆö‰∫Ü3‰∏™Êï∞ÔºåÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ËæìÂá∫Êù•//ÁÑ∂ÂêéÁ¨¨3‰∏™ÈÄíÂΩí‰∏çËÉΩÂÜçÁªßÁª≠‰∫ÜÔºåÊâÄ‰ª•ÁªìÊùüÔºå‰πãÂâç‰∫§Êç¢ÁöÑÂÄºÈáçÊñ∞‰∫§Êç¢ÂõûÊù•Ôºå‰πüÂ∞±ÊòØ2‰∏é2ËøõË°å‰∫§Êç¢ÔºåÁÑ∂ÂêéÁ¨¨‰∫å‰∏™ÈÄíÂΩíÁöÑ//ËøõË°åÁöÑÊòØ2‰∏éÁ¨¨‰∫å‰∏™Êï∞ËøõË°å‰∫§Êç¢Ôºå‰πüÂ∞±ÊòØ2ÔºåÂú®for()Âæ™ÁéØÁöÑ‰∏ã‰∏ÄÊ≠•Ôºå2‰∏é2ÂêéÈù¢ÁöÑ3ËøõË°å‰∫§Êç¢ÔºåÁÑ∂ÂêéËøõÂÖ•‰∏ã‰∏Ä‰∏™ÈÄíÂΩíÔºåÁ¨¨‰∏â‰∏™Êï∞ÁöÑÁ°ÆÂÆö3‰∏é3ËøõË°å‰∫§Êç¢Ôºå//‰∏â‰∏™Êï∞Á°ÆÂÆöÔºåËæìÂá∫1 Ôºå 3Ôºå2Ôºå‰æùÊ¨°Á±ªÊé®.....=v=/*1 2 3 ÂÖ®ÊéíÂàóÁöÑÂ∫èÂàó1 2 31 3 22 1 32 3 13 2 13 1 2*/ ‰ΩÜÊòØËøôÁßçÊñπÊ≥ï‰∏çËÉΩÊ≠£Á°ÆÂú∞ËæìÂá∫Â≠óÂÖ∏Â∫èÔºåÂèØ‰ª•Âú®ÊØèÊ¨°‰∫§Êç¢ËøõË°åÈÄíÂΩíÁöÑÂâçÈù¢Â∞ÜÂêéÈù¢Êú™Á°ÆÂÆöÁöÑÊï∞ËøõË°åÊéíÂ∫è1234567891011121314151617181920212223242526272829void permutations(int n, int m)&#123; if (n == m) &#123; for (int k = 0; k &lt; m; k++) cout &lt;&lt; arr[k] &lt;&lt; " "; cout &lt;&lt; endl; &#125; else &#123; for (int k = n; k &lt; m; k++) &#123; sort(arr + k, arr + m); //Âä†‰∏äËøô‰∏™Â∞±Ë°å‰∫Ü swap(arr[k], arr[n]); permutations(n + 1, m); swap(arr[k], arr[n]); &#125; &#125;&#125;/*2 1 3 Â∏¶ÊéíÂàóÁöÑÂ∫èÂàó1 2 31 3 22 1 32 3 13 1 23 2 1*/ C++ stlÁöÑÂáΩÊï∞next_permutationÂáΩÊï∞Ôºåprev_permutationÂáΩÊï∞12345678910111213141516171819202122int main()&#123; int arr[10]; for (int i = 0; i &lt; 3; i++) cin &gt;&gt; arr[i]; sort(arr, arr + 3); //ÂøÖ‰∏çÂèØÂ∞ëÁöÑÔºåÂõ†‰∏∫ÊòØË¶ÅÊåâÁÖßÂ≠óÂÖ∏Â∫èËæìÂá∫ do &#123; cout &lt;&lt; arr[0] &lt;&lt; " " &lt;&lt; arr[1] &lt;&lt; " " &lt;&lt; arr[2] &lt;&lt; endl; &#125; while (next_permutation(arr, arr + 3)); return 0;&#125;/*2 1 31 2 31 3 22 1 32 3 13 1 23 2 1*/ 1234567891011121314151617181920212223242526bool cmp(int a, int b)&#123; return a &gt; b;&#125;int main()&#123; int arr[10]; for (int i = 0; i &lt; 3; i++) cin &gt;&gt; arr[i]; sort(arr, arr + 3,cmp); //ÈúÄË¶Å‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫è do &#123; cout &lt;&lt; arr[0] &lt;&lt; " " &lt;&lt; arr[1] &lt;&lt; " " &lt;&lt; arr[2] &lt;&lt; endl; &#125; while (prev_permutation(arr, arr+3)); return 0;&#125;/*1 2 33 2 13 1 22 3 12 1 31 3 21 2 3*/]]></content>
      <categories>
        <category>ÁÆóÊ≥ï</category>
        <category>ÂÖ®ÊéíÂàó</category>
      </categories>
      <tags>
        <tag>ÂÖ®ÊéíÂàó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LVMÈÄªËæëÂç∑]]></title>
    <url>%2FLVM%E9%80%BB%E8%BE%91%E5%8D%B7%2F</url>
    <content type="text"><![CDATA[ÈÄªËæëÂç∑ÁÆ°ÁêÜÂô®LVM MBRÁ£ÅÁõòÂàÜÂå∫ÊñπÂºèÁöÑÂ±ÄÈôêÊÄß LVMÁöÑÂéüÁêÜ LVMÊú∫Âà∂ÁöÑÂü∫Êú¨Ê¶ÇÂøµ PV ‚ÄìÁâ©ÁêÜÂç∑ ÈªòËÆ§ÂåÖÊã¨ËÆ∏Â§öÂ§ßÂ∞è‰∏∫4MBÁöÑPEÂùó VG ‚ÄìÂç∑ÁªÑ ‰∏Ä‰∏™ÊàñÂ§ö‰∏™Áâ©ÁêÜÂç∑ÁªÑÂêàËÄåÊàêÁöÑÊï¥‰Ωì LV ‚ÄìÈÄªËæëÂç∑ ‰ªéÂç∑ÁªÑÊ±áÊÄªÂàÜÂâ≤Âá∫ÁöÑ‰∏ÄÂùóÁ©∫Èó¥ÔºåÁî®‰∫éÂª∫Á´ãÊñá‰ª∂Á≥ªÁªü LVMÁöÑÁÆ°ÁêÜÂëΩ‰ª§ ÂäüËÉΩ Áâ©ÁêÜÂç∑ÁÆ°ÁêÜ Âç∑ÁªÑÁÆ°ÁêÜ ÈÄªËæëÂç∑ÁÆ°ÁêÜ Scan Êâ´Êèè pvscan vgscan lvscan Create Âª∫Á´ã pvcreate vgcreate lvcreate Display ÊòæÁ§∫ pvdisplay vgdisplay lvdisplay Remove Âà†Èô§ pvremove vgremove lvremove Exttend Êâ©Â±ï vgextend lvextend ÂàõÂª∫LVMÈÄªËæëÂç∑ÁöÑËøáÁ®ã ÂàÜÂå∫‚Äì„Äãpv‚Äì„Äãvg‚Äì„Äãlv‚Äì„ÄãÊ†ºÂºèÂåñ‚Äì„ÄãÊåÇËΩΩÊñá‰ª∂Á≥ªÁªü ËΩ¨ÂåñÁâ©ÁêÜÂç∑ ‰ΩøÁî®fdiskÂëΩ‰ª§ËßÑÂàí‰∏§‰∏™ÂàÜÂå∫ÔºåÁ±ªÂûãËÆæÁΩÆ‰∏∫‚Äú8e‚ÄùÔºà‰πüÂ∞±ÊòØËØ¥ÔºåÂ¶ÇÊûúÊàë‰ª¨Êñ∞Âä†ÂÖ•‰∏§‰∏™ÁõòÔºåÊàë‰ª¨ÂèØ‰ª•Âú®Ëøô‰∏§‰∏™Áõò‰∏äÂêÑËá™Êñ∞Âª∫‰∏Ä‰∏™ÂàÜÂå∫ÔºåÁÑ∂ÂêéÂÜçÂØπ‰∏§‰∏™ÂàÜÂå∫ËøõË°åÊìç‰ΩúÔºâ Â¶ÇÊûúËÆæÁΩÆ‰∏∫‚Äú8e‚ÄùÔºå fdiskËøõÂÖ•ÂëΩ‰ª§ÔºåËæìÂÖ•‚Äút‚ÄùÊîπÂèòÂàÜÂå∫idÁ±ªÂûãÔºåËæìÂÖ•‚Äú8e‚ÄùÔºå‰ª£Ë°®ÈÄªËæëÂç∑Á±ªÂûãÔºåËæìÂÖ•pÊâìÂç∞ÔºåÁ°ÆËÆ§Êó†ËØØËæìÂÖ•w‰øùÂ≠òÈÄÄÂá∫ pvcreateÂàõÂª∫Áâ©ÁêÜÂç∑ ÂèØ‰ª•ÂÖàÁî®pvscanÊâ´ÊèèÊòØÂê¶ÊúâpvÁâ©ÁêÜÂç∑ ‰ΩøÁî®pvcreateÂëΩ‰ª§ËøõË°åÂàõÂª∫ pvcreate /dev/sdc1 pvcreate /dev/sdd1 ÂàõÂª∫Âç∑ÁªÑ ‰ΩøÁî®vgcreateÂëΩ‰ª§ÔºàÂèØ‰ª•‰ΩøÁî®vgscanÊâ´Êèè‰∏ÄÈÅçÔºâ vgcreate mail_store /dev/sdc1 /dev/sdd1 mail_storeË°®Á§∫ÁöÑÂç∑ÁªÑÂêçÔºåÂêéÈù¢‰∏§‰∏™Â∞±ÊòØÂàöÊâçÊñ∞Âª∫ÁöÑÂàÜÂå∫ ÂàõÂª∫ÈÄªËæëÂç∑ ‰ΩøÁî®lvcreateÂëΩ‰ª§ÂàõÂª∫ÈÄªËæëÂç∑ ‰æãÂ¶ÇÔºömail,ÂàÜÈÖç3G lvcreate -L 3G -n mail mail_store ÂàõÂª∫Êñá‰ª∂Á≥ªÁªü mkfs -t ext4 /dev/mail_store/mail ÊåÇËΩΩ mount -t ext4 /dev/mail_store/mail /testLvm ÊåÇËΩΩÂà∞Êñá‰ª∂Â§πtestLvm df -ThÊü•Áúã Êñá‰ª∂Á≥ªÁªüÊ∑ªÂä†ÂÆåÂêé‰ºöËá™Âä®Ê∑ªÂä†‰∏Ä‰∏™Âà´Âêç /dev/mapper/mail_store/mail LVMÁöÑÊâ©ÂÆπ VGÂç∑ÁªÑËøòÊúâÂâ©‰ΩôÁ©∫Èó¥ VGÂç∑ÁªÑÊ≤°ÊúâÂâ©‰ΩôÁ©∫Èó¥ Ëß£ÂÜ≥ÊñπÊ°àÔºöÊñ∞Êâæ‰∏ÄÂùóÂàÜÂå∫/dev/sd* ËΩ¨Âåñ‰∏∫pvÔºåÂä†Âà∞VG‰∏≠ pvcreate /dev/sdc2 vgextend mail_store /dev/sdc2ÔºàÂ∞ÜÊñ∞Âª∫ÁöÑpvÂä†Âà∞mail_storeÂç∑ÁªÑ‰∏äÔºâ Â∞Ü‰πãÂâçÂàõÂª∫ÁöÑlvÔºàÊú¨Êù•ÊòØ3GÔºåÁé∞Âú®Êâ©Â±ïÂà∞6GÔºâ lvextend -L +3G /dev/mail_store/mail ÔºàÂ¶ÇÊûú‰∏çÂä†‚Äú+‚Äù,Ë°®Á§∫Âä†Âà∞3GÔºâ ‰ΩøÁî®resize2fsÂëΩ‰ª§Êõ¥Êñ∞Á≥ªÁªüËØÜÂà´ÁöÑÊñá‰ª∂Á≥ªÁªüÂ§ßÂ∞è resize2fs /dev/mail_store/mail LVMÁöÑÁº©ÂáèÊìç‰Ωú ÂâçÊèêÊòØ‰∏çÂΩ±ÂìçÊï∞ÊçÆ ËÑ±Êú∫Áä∂ÊÄÅ‰∏ãÁöÑÁº©ÂáèÔºà‰πãÂâçÂàõÂª∫ÁöÑÊñá‰ª∂Á≥ªÁªüext4‰∏çÊîØÊåÅonlineÁä∂ÊÄÅËøõË°åÁº©ÂáèÔºâ ÂÖàÂç∏ËΩΩÊåÇËΩΩÁÇπ umount /testLvm ÈáçÊñ∞ËØÜÂà´Áº©ÂáèÁöÑÊñá‰ª∂Â§ßÂ∞è resize2fs /dev/mail_store/mail 3G ÔºàË°®Á§∫Áº©ÂáèÂà∞3GÔºâ lvreduce -L 3G /dev/mail_store/mail ÈáçÊñ∞ÊåÇËΩΩ mount -t ext4/ /dev/mail-store/mail /test/Lvm]]></content>
      <categories>
        <category>Linux</category>
        <category>LVMÈÄªËæëÂç∑</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Á£ÅÁõòÁÆ°ÁêÜ‰∏éÊñá‰ª∂Á≥ªÁªü]]></title>
    <url>%2F%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[Á£ÅÁõòÁÆ°ÁêÜÁ°¨ÁõòÊé•Âè£ SATA/SAS Á°¨ÁõòÂëΩÂêç sd[a..z] vd[a..z] //ÂçäËôöÊãüÂåñ ÂàÜÂå∫ÊñπÂºè MBR ÊúÄÂ§öÊîØÊåÅ4‰∏™‰∏ªÂàÜÂå∫ÔºàÂ¶ÇÊûúÊÉ≥ÂàõÂª∫Â§ö‰∏™ÂàÜÂå∫ÔºâÔºåÂèØ‰ª•ÂàõÂª∫3‰∏™‰∏ªÂàÜÂå∫Ôºå1‰∏™Êâ©Â±ïÂàÜÂå∫ÔºåÂú®Êâ©Â±ïÂàÜÂå∫ÁöÑÂü∫Á°Ä‰∏äËøõË°åÈÄªËæëÂàÜÂå∫ÔºåÂ∞±ÂèØ‰ª•ÂàõÂª∫Â§ö‰∏™ÂàÜÂå∫ Êìç‰ΩúËΩØ‰ª∂ mdish GPT ÂèØ‰ª•ÂàõÂª∫128‰∏™ÂàÜÂå∫ MBRÊñπÂºèËøõË°åÂàÜÂå∫‚Äî„ÄãÁ£ÅÁõò‚Äì„ÄãÂàÜÂå∫‚Äì„ÄãÊ†ºÂºèÂåñ‚Äì„ÄãÊåÇËΩΩ /dev/sdb 20G p1 /dev/sdb1 5G p2 /dev/sdb2 5G E /dev/sdb3 10G L1 /dev/sdb5 3G ÔºàÊ≥®ÊÑèÔºåÈÄªËæëÂàÜÂå∫ÊòØ‰ªé5ÂºÄÂßãÁöÑÔºâ L2 /dev/sdb6 3G L3 /dev/sdb7 4G fdish ËøõË°åÂàÜÂå∫ mkfs Âú®ÂàÜÂå∫‰∏≠ÂàõÂª∫Êñá‰ª∂Á≥ªÁªüÔºàÊ†ºÂºèÂåñÔºâ mkfs -t ext4 /dev/sdb1 ÊåÇËΩΩ‰ΩøÁî®Ôºàdf -hlÊü•ÁúãÊåÇËΩΩÊÉÖÂÜµÔºâ mount ÂëΩ‰ª§ / umount Âç∏ËΩΩ==&gt;&gt;ÈáçÂêØÂêéÂ∞±‰ºöÂ§±Êïà Ëá™Âä®ÊåÇËΩΩ ËøõÂÖ•/etc/fstabÈÖçÁΩÆÊñá‰ª∂ ËøΩÂä† ÔºöÂàÜÂå∫ËÆæÂ§áÂêç ÊåÇËΩΩÁÇπ Êñá‰ª∂Á≥ªÁªüÊ†ºÂºè defaults 0 0 /dev/sdb1 /test ext4 defaults 0 0 Ôºà‰øùÂ≠òÔºâ ‰øùÂ≠òÂêéÊâßË°åmount /dev/sdb1 /test ÔºàtestÊòØ‰Ω†Ë¶ÅÊåÇËΩΩÂà∞ÁöÑÁõÆÂΩïÔºâ Áü•ËØÜÁÇπ win ÁöÑÁõòÁöÑÊ†ºÂºè NTFS/FAT32 dev/sr0 ‰ª£Ë°®ÂÖâÈ©± UUID ÔºöÁ°¨‰ª∂ÂîØ‰∏ÄÊ†áËØÜÁ¨¶ ÂÖâÈ©±ÁöÑÊñá‰ª∂Á≥ªÁªüÊ†ºÂºèÔºöiso9660 swap:Áî®‰∫élinuxÁ£ÅÁõò‰∫§Êç¢ÂàÜÂå∫ÁöÑÁâπÊÆäÊñá‰ª∂Á≥ªÁªüÊ†ºÂºè linuxÊîØÊåÅÁöÑÊñá‰ª∂Á≥ªÁªüÊ†ºÂºèext2/ext3/ext4 ÔºàxfsÔºöRHEL7.0ÊîØÊåÅÁöÑÊñá‰ª∂Á≥ªÁªüÔºâ Êü•ÁúãÊñá‰ª∂Á≥ªÁªüÊÉÖÂÜµÔºölsblk Á£ÅÁõòÁöÑÂàÜÂå∫ /dev/sda / /boot ÂêØÂä®ÂºïÂØºÁõÆÂΩï /swap ‰∫§Êç¢ÁõÆÂΩï]]></content>
      <categories>
        <category>Linux</category>
        <category>Á£ÅÁõòÁÆ°ÁêÜ‰∏éÊñá‰ª∂Á≥ªÁªü</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vimÊìç‰Ωú]]></title>
    <url>%2Fvim%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[vim ÊñáÊú¨ÁºñËæëÂô® ‰∏âÁßçÊ®°Âºè ÂëΩ‰ª§Ê®°ÂºèÔºöÈªòËÆ§ËøõÂÖ•ÁöÑÊ®°ÂºèÔºåÂ§çÂà∂ÔºåÁ≤òË¥¥ÔºåÂà†Èô§Á≠âÊìç‰Ωú ÊèíÂÖ•Ê®°ÂºèÔºöÁî±ÂëΩ‰ª§Ê®°ÂºèËøõÂÖ•ÔºåËøõË°åÊñáÊú¨ÁºñËæëÔºåÊåâESCÈîÆÈÄÄÂõûÂëΩ‰ª§Ê®°Âºè Â∫ïË°åÊ®°ÂºèÔºöÂú®ÂëΩÂêçÊ®°Âºè‰∏ãÊåâÔºöÈîÆËøõÂÖ•„ÄÇËøõË°åÊñáÊú¨ÁöÑ‰øùÂ≠òÔºåÈÄÄÂá∫ÔºåÊåâESCÈîÆÈÄÄÂõûÂëΩ‰ª§Ê®°Âºè gg ÂíåG Â∞ÜÂÖâÊ†áË∑≥ËΩ¨Âà∞È¶ñË°åÂíåÂ∞æË°å yyÂ§çÂà∂‰∏ÄË°å nyy Ôºàn‰∏∫Êï∞Â≠óÔºâÂ§çÂà∂Â§öË°å pÁ≤òË¥¥ uÊí§ÈîÄ ÊîØÊåÅÂ§öÊ¨°\ xÂà†Èô§‰∏Ä‰∏™Â≠óÁ¨¶ ddÂà†Èô§‰∏ÄË°åÂ≠óÁ¨¶ ËøõÂÖ•ÊèíÂÖ•Ê®°Âºè i Âú®ÂÖâÊ†áÂâçÊèíÂÖ• aÂú®ÂÖâÊ†áÂêéÊèíÂÖ• I(Â§ßÂÜôi)Âú®Ë°åÈ¶ñÊèíÂÖ• A Âú®Ë°åÂ∞æÊèíÂÖ• oÂú®‰∏ãÊñπÂè¶Ëµ∑‰∏ÄË°åÊèíÂÖ• OÂú®‰∏äÊñπÂè¶Ëµ∑‰∏ÄË°åÊèíÂÖ• :qÈÄÄÂá∫ :qÔºÅÂº∫Âà∂ÈÄÄÂá∫ :w ‰øùÂ≠ò :wq ‰øùÂ≠òÂπ∂ÈÄÄÂá∫ :x Â¶ÇÊûúÊñá‰ª∂Êõ¥Êîπ‰∫ÜÔºåÁõ∏ÂΩì‰∫éwqÔºåÂ¶ÇÊûúÊñá‰ª∂Ê≤°ÊúâÊõ¥ÊîπÔºåÁõ∏ÂΩì‰∫éq :shell ÊöÇÊó∂ËøõÂÖ•shellÂëΩ‰ª§ÔºåÊâæÂà∞Áõ∏ÂÖ≥ÁöÑ‰ø°ÊÅØÔºåÁÑ∂ÂêéÊåâctrl + d :set number ËÆæÁΩÆË°åÂè∑ :set nonumber ‰∏çËÆæÁΩÆË°åÂè∑ /ÂÖ≥ÈîÆÂ≠ó ÊêúÁ¥¢ÂÖ≥ÈîÆÂ≠ó ÔºåÊåân/NË∑≥ËΩ¨Âà∞‰∏ä/‰∏ã‰∏Ä‰∏™ÂÖ≥ÈîÆÂ≠ó :nohlsearch ÂèñÊ∂àÊêúÁ¥¢È´ò‰∫Æ ÊêúÁ¥¢‰∏éÊõøÊç¢ :%s/ÊêúÁ¥¢ÁöÑÂ≠óÁ¨¶/ÊõøÊç¢ÁöÑÂ≠óÁ¨¶/&lt;ÈÄâÈ°π&gt; %‰ª£Ë°®ÂÖ®ÈÉ®ÁöÑÊÑèÊÄùÔºå s‰ª£Ë°®ÊêúÁ¥¢ÁöÑÊÑèÊÄùÔºåËøõÂÖ•ÊêúÁ¥¢Ê®°Âºè 1,9s/chenxiaojian/student/g Ë°®Á§∫‰ªé1Âà∞9Ë°åËøõË°åÊêúÁ¥¢ÔºågÁöÑÊÑèÊÄù‰ª£Ë°®ÂÖ®ÈÉ®ÊõøÊç¢ÔºåÂ¶ÇÊûú‰∏çÂä†ÔºåÂàôÂè™ÊòØÊõøÊç¢ÊØè‰∏ÄË°åÁöÑÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶ 9s/chenxiaojian/student/g Ë°®Á§∫Âú®Á¨¨9Ë°åËøõË°åÊêúÁ¥¢‰∏éÊõøÊç¢]]></content>
      <categories>
        <category>Linux</category>
        <category>vim</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxÊñá‰ª∂ÁÆ°ÁêÜ]]></title>
    <url>%2FLinux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[linuxÁöÑÊñá‰ª∂ÁªìÊûÑ ÁõÆÂΩï ‰ΩúÁî® /sbin Â≠òÊîæÁ≥ªÁªüÂëΩ‰ª§ /bin Â≠òÊîæÁî®Êà∑ÂëΩ‰ª§ ‰æãÂ¶ÇÔºöls /usr/bin/ls /root Â≠òÊîæÂêØÂä®‰ø°ÊÅØÂíåÂÜÖÊ†∏‰ø°ÊÅØ /dev Â≠òÊîæËÆæÂ§á /home ÊôÆÈÄöÁî®Êà∑ÁöÑ‰∏ªÁõÆÂΩïÔºåÂ≠òÊîæÊôÆÈÄöÁî®Êà∑ÁöÑ‰ø°ÊÅØÂíåÈÖçÁΩÆ‰ø°ÊÅØ /mnt Áî®‰∫éÊåÇËΩΩËÆæÂ§áÁöÑÁõÆÂΩï /proc Á≥ªÁªüËøêË°åÁöÑÊñá‰ª∂ÔºåÂç†Áî®ÂÜÖÂ≠ò ‰æãÂ¶ÇÔºö/proc/cpuinfo /proc/meminfo /root rootÁî®Êà∑ÁöÑ‰∏ªÁõÆÂΩïÔºåÂ≠òÊîærootÁî®Êà∑ÁöÑ‰ø°ÊÅØÂíåÈÖçÁΩÆ‰ø°ÊÅØ /tmp ‰∏¥Êó∂ÁõÆÂΩï /usr ÂÆâË£ÖËΩØ‰ª∂ÁöÑÈªòËÆ§ÁõÆÂΩï /var Â≠òÊîæÂèØÂèò Â§ßÊñá‰ª∂ /etc Â≠òÊîæÁ≥ªÁªüÈÖçÁΩÆÊñá‰ª∂ Êñá‰ª∂Ë∑ØÂæÑ Êñá‰ª∂Á±ªÂûã /var/log Êó•ÂøóÊñá‰ª∂ /usr/bin ÊôÆÈÄöÊâßË°åÁ®ãÂ∫èÊñá‰ª∂ /usr/sbin ÊúçÂä°Âô®ÊâßË°åÁ®ãÂ∫èÊñá‰ª∂ÂíåÁÆ°ÁêÜÁ®ãÂ∫èÊñá‰ª∂ /etc Â∫îÁî®Á®ãÂ∫èÈÖçÁΩÆÊñá‰ª∂ /usr/share/doc Â∫îÁî®Á®ãÂ∫èÊñáÊ°£Êñá‰ª∂ /usr/share/man Â∫îÁî®Á®ãÂ∫èÊâãÂÜåÈ°µÊñá‰ª∂ devÁõÆÂΩï Â≠òÊîæÁöÑ‰∏úË•ø,‰πüÂ∞±ÊòØËÆæÂ§áÔºåÊàë‰ª¨‰∏çËÉΩÁõ¥Êé•ËÆøÈóÆËøô‰∏™ÁõÆÂΩïÁöÑËÆæÂ§áÔºåLinuxÊúâÊåÇËΩΩÁöÑÊ¶ÇÂøµÔºå‰πüÂ∞±ÊòØÊèê‰æõ‰∏Ä‰∏™ÁõÆÂΩïÔºåÁÑ∂ÂêéËÆøÈóÆËøô‰∫õ‰∏çËÉΩÁõ¥Êé•ËÆøÈóÆÁöÑ‰∏úË•ø ls /dev/sda Êü•Áúã‰Ω†ÊúâÁ¨¨‰∏ÄÂùóÁ°¨ÁõòÔºàÈ¶ñÂ≠óÊØçs‰ª£Ë°®ÁùÄËøô‰∏™Á°¨ÁõòÊòØSATAÊé•Âè£Ôºâ ls /dev/sdb Êü•Áúã‰Ω†ÁöÑÁ¨¨‰∫åÂùóÁ°¨Áõò (‰∏çÂêåÁ≥ªÁªüÁöÑÁ°¨ÁõòÁªìÊûÑÂèØËÉΩ‰∏çÂêåÔºåÂèØËÉΩÊòØ‰ª•vÂºÄÂ§¥ÁöÑ) ls /dev/sda1 ‰ª£Ë°®ÁöÑÊòØÁ¨¨‰∏ÄÂùóÁ°¨ÁõòÁöÑÁ¨¨‰∏Ä‰∏™ÂàÜÂå∫ ls /dev/sda2 ‰ª£Ë°®ÁöÑÊòØÁ¨¨‰∏ÄÂùóÁ°¨ÁõòÁöÑÁ¨¨‰∫å‰∏™ÂàÜÂå∫ ls /dev/sdb1 ‰ª£Ë°®ÁöÑÊòØÁ¨¨‰∫åÂùóÁ°¨ÁõòÁöÑÁ¨¨‰∏Ä‰∏™ÂàÜÂå∫ ls /dev/sr0 Â≠òÊîæÁùÄÂÖâÈ©±Ôºå‰πüÂ∞±ÊòØÂÖâÁ¢ü man ÂëΩ‰ª§ 1 ‚Äì‰ª£Ë°®Áî®Êà∑ÂëΩ‰ª§ 5 ‚Äì‰ª£Ë°®Êñá‰ª∂Ê†ºÂºè 8 ‚Äì‰ª£Ë°®Á≥ªÁªüÂëΩ‰ª§ Êñá‰ª∂ÔºàÁõÆÂΩïÔºâÂ§ÑÁêÜÊü•ÁúãÊñá‰ª∂ catÂëΩ‰ª§ Áî®Ê≥ï cat &lt;Êñá‰ª∂Âêç&gt;Ê≥®ÊÑè‰πãÈó¥Êúâ‰∏Ä‰∏™Á©∫Ê†º Êü•ÁúãcatÂëΩ‰ª§ÁöÑÁî®Ê≥ï cat ‚Äìhelp ‰æãÂ¶Ç Ôºö cat -n /ect/passwd Â∞±‰ºöÁªôÊñá‰ª∂ÊØè‰∏ÄË°åËøõË°åÁºñÂè∑ head ÂèØ‰ª•Áî®‰∫éÊü•ÁúãÊñá‰ª∂ÁöÑÂâçÂçÅË°å‰ø°ÊÅØ tail ÂèØ‰ª•Êü•ÁúãÊñá‰ª∂ÁöÑÂêéÈù¢10Ë°å‰ø°ÊÅØ less ÂèØ‰ª•‰ª•ÁøªÈ°µÁöÑÂΩ¢ÂºèÊü•ÁúãÊñá‰ª∂ ‰∏ä‰∏ãÈîÆÔºåPaUp PaDnÈîÆ /ÂÖ≥ÈîÆÂ≠ó ‚Äì„Äã„ÄãÊêúÁ¥¢ Êü•ÁúãÁõÆÂΩï ls Êü•ÁúãÁõÆÂΩï -a Êü•ÁúãÊâÄÊúâÊñá‰ª∂ÔºåÂåÖÊã¨ÈöêËóèÊñá‰ª∂ ÈöêËóèÊñá‰ª∂ÊàñËÄÖÁõÆÂΩïÊòØ . ÂºÄÂ§¥ . ‰ª£Ë°®ÂΩìÂâçÁõÆÂΩïÔºå ..‰ª£Ë°®‰∏ä‰∏ÄÁ∫ßÁõÆÂΩï -l Êü•ÁúãËØ¶ÁªÜ‰ø°ÊÅØ ls -l ==&gt;&gt; ll dr-xr-x‚Äî. 5 root root 205 8Êúà 7 10:47 root Á¨¨‰∏Ä‰∏™Â≠óÊØçË°®Á§∫Êñá‰ª∂Á±ªÂûã d :‰ª£Ë°®ÁõÆÂΩï -Ôºö‰ª£Ë°®Êñá‰ª∂ l : ‰ª£Ë°®ÈìæÊé• b: ‰ª£Ë°®ÂùóËÆæÂ§á Á¨¨‰∫åÔºåÁ¨¨‰∏âÔºåÁ¨¨Âõõr-xÔºöÊâÄÊúâËÄÖÊñá‰ª∂ÊùÉÈôê r : Ë°®Á§∫ËØªÂèñ wÔºöË°®Á§∫ÂÜôÂÖ• xÔºöË°®Á§∫ÊâßË°å -ÔºöË°®Á§∫Êó†ÊùÉÈôê Á¨¨‰∫îÔºåÁ¨¨ÂÖ≠ÔºåÁ¨¨‰∏Ér-xÔºöÊâÄÂ±ûÁªÑÊñá‰ª∂ÊùÉÈôê Á¨¨ÂÖ´ÔºåÁ¨¨‰πùÔºåÁ¨¨ÂçÅr-xÔºöÂÖ∂‰ªñÁî®Êà∑ÁöÑÊñá‰ª∂ÊùÉÈôê Á¨¨ÂçÅ‰∏Ä‰Ωç ÔºöÁÇπ‰ª£Ë°®Ê≤°ÊúâÈÖçÁΩÆACLÔºå+‰ª£Ë°®ÊúâÈÖçÁΩÆACL Á¨¨‰∫åÊÆµ ‚Äú5‚Äù ÔºöÂ¶ÇÊûúÊòØÁõÆÂΩïË°®Á§∫ÁõÆÂΩï‰∏ãÊúâÂá†‰∏™Â≠êÁõÆÂΩïÔºåÂ¶ÇÊûúÊòØÊñá‰ª∂Ë°®Á§∫Êñá‰ª∂ÁöÑÈìæÊé•Êï∞Èáè Á¨¨‰∏âÔºåÂõõÊÆµÔºöÂàÜÂà´Ë°®Á§∫Êñá‰ª∂ÁöÑÊâÄÊúâËÄÖÔºåÊñá‰ª∂ÊâÄÂ±ûÔºà‰∏ªË¶ÅÔºâÁªÑ Á¨¨‰∫îÊÆµ‚Äú205‚ÄùÔºöÂ§ßÂ∞è Á¨¨ÂÖ≠‰∏ÉÂÖ´ÊÆµÔºö‰ª£Ë°®Êñá‰ª∂ÁöÑ‰øÆÊîπÊó∂Èó¥ Á¨¨‰πùÊÆµÔºöÊñá‰ª∂„ÄÅÁõÆÂΩïÁöÑÂêçÂ≠ó -dÔºöÊü•ÁúãÁõÆÂΩïÊú¨Ë∫´ÁöÑ‰ø°ÊÅØÔºåÈÄöÂ∏∏‰∏é -l ‰∏ÄËµ∑‰ΩøÁî® ls -ld -RÔºö‰ª•ÈÄíÂΩíÊñπÂºèÊü•ÁúãÊñá‰ª∂ÁõÆÂΩï -hÔºö‰∫∫ÊÄßÂåñÁöÑÔºåÂ∞±ÊòØÂ∞ÜÊñá‰ª∂ÁöÑÂ≠óËäÇËΩ¨Êç¢ÊàêÂÖÜÔºåÂçÉÂÖÜ ÂàõÂª∫ÁõÆÂΩï mkdirÔºöÂàõÂª∫ÁõÆÂΩï ÈÄâÈ°πÔºö-p ÈÄíÂΩíÂàõÂª∫ ÂàõÂª∫Êñá‰ª∂ touch ÂàõÂª∫Á©∫Êñá‰ª∂ÊàñÊõ¥Êñ∞Êñá‰ª∂Êó∂Èó¥Êà≥ÔºàÁî®‰∫é‰øÆÊîπÊñá‰ª∂ÁöÑÊó∂Èó¥Â±ûÊÄßÔºåÂ¶ÇÊûúÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂ∞±ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÊñá‰ª∂Ôºâ Â§çÂà∂ Êñá‰ª∂/ÁõÆÂΩï cp Â§çÂà∂Êñá‰ª∂ cp /root/file1 /home/student cp file1 file2 dir/ (Â§çÂà∂Â§ö‰∏™Êñá‰ª∂) Â§çÂà∂ÁõÆÂΩï cp -r ÈÄíÂΩíÂ§çÂà∂ÁõÆÂΩïÔºåÂ∞ÜÁõÆÂΩïÁöÑÂ≠êÁõÆÂΩïÂíåÊñá‰ª∂Â§çÂà∂ cp -d linkÂ§çÂà∂ÈìæÊé• cp -a == cp -rd cp -r &lt;Ê∫ê&gt;‚Ä¶ &lt;ÁõÆÊ†á&gt; ÁßªÂä®ÊàñÈáçÂëΩÂêç mv ÁßªÂä®ÊàñÈáçÂëΩÂêçÊñá‰ª∂ÊàñÁõÆÂΩïÔºàÂ¶ÇÊûúÊñá‰ª∂ÊàñËÄÖÁõÆÂΩïÁöÑ‰ΩçÁΩÆÊ≤°ÊúâÊîπÂèòÔºåÂ∞±ÊòØÈáçÂëΩÂêçÔºâ Áî®Ê≥ïÔºö mv &lt;Ê∫ê&gt;‚Ä¶ &lt;ÁõÆÊ†á&gt; ‰æãÂ≠ê mv file1 file2 (ÈáçÂëΩÂêçÊñá‰ª∂) mv file1 dir ÔºàÂ∞Üfile1ÁßªÂä®Âà∞dirÁöÑÁõÆÂΩï‰∏ãÔºâ mv file1 dir2 dir ÔºàÂ∞Üdir2ÂíåfileÁßªÂä®Âà∞dirÔºâ Âà†Èô§Êñá‰ª∂„ÄÅÁõÆÂΩï rm Âà†Èô§Êñá‰ª∂ÊàñÁõÆÂΩïÔºàÊ≤°ÊúâÂõûÊî∂Á´ôÔºâÔºàÂ¶ÇÊûúÊòØrootÁî®Êà∑ÔºåÂàô‰ºöÊèêÁ§∫ÊòØÂê¶Âà†Èô§ÔºåÈúÄË¶ÅËæìÂÖ•yÔºâ rm -f Âº∫Âà∂Âà†Èô§ Âà†Èô§ÁõÆÂΩïÔºårm -r ÈÄíÂΩíÂà†Èô§ rm -rf Ôºàrm -rf /Ôºâ Ë∑ØÂæÑÊâ©Â±ï ÈÄöÈÖçÁ¨¶ ÔºàÁî®‰∫éshellÂëΩ‰ª§Ë°å‰∏≠ÂåπÈÖçË∑ØÂæÑÂêçÔºâ ‚Äù*****‚Äú ÂåπÈÖç0‰∏™ÊàñÂ§ö‰∏™Â≠óÁ¨¶ [abc123] ÂåπÈÖçÊã¨Âè∑‰ªªÊÑè‰∏Ä‰∏™Â≠óÁ¨¶ ÔºüÂåπÈÖç‰ªªÊÑè‰∏Ä‰∏™Â≠óÁ¨¶ Â¶ÇÊûúÂ∞Üaaa bbbÂ§çÂà∂Âà∞dir, cp ??? dir/ {} Â§ßÊã¨Âè∑Êâ©Â±ï mkdir dir{1..4}{a..c} mkdir dir{a, d,1,9} ËΩ¨‰πâÂ≠óÁ¨¶ \ ÂèñÊ∂à \Âêé‰∏Ä‰∏™Â≠óÁ¨¶ÁöÑÂê´‰πâ mkdir a\ b ‚Äò‚Äô ‚Äú‚Äù ‚ÄìÂèñÊ∂àÂºïÂè∑‰∏≠Â≠óÁ¨¶ÁöÑÂê´‰πâ $ mkdir file$(date +%c) ‚Äî-„Äã„Äã file2019Âπ¥09Êúà07Êó• ÔºàÂëΩ‰ª§ËæìÂá∫‰ª£ÊõøÂëΩ‰ª§Êú¨Ë∫´Ôºâ Êñá‰ª∂ÂΩíÊ°£‰∏éÂéãÁº© Êñá‰ª∂ÂΩíÊ°£ÔºöÂ∞ÜÂ§ö‰∏™Êñá‰ª∂ÊâìÂåÖÊàê‰∏Ä‰∏™Êñá‰ª∂ÁöÑËøáÁ®ãÔºàÂπ∂Ê≤°ÊúâÁº©Â∞èÊñá‰ª∂ÁöÑ‰ΩìÁßØÔºâ Êñá‰ª∂ÂéãÁº©ÔºöÁº©Â∞èÊñá‰ª∂‰ΩìÁßØÁöÑËøáÁ®ã tar Êñá‰ª∂ÂΩíÊ°£‰∏éÂéãÁº© Áî®Ê≥ïÔºö tar [ÈÄâÈ°π] c(ÂàõÂª∫) t(Êü•Áúã) x(ÂéãÁº©) f(ÂøÖÈÄâ) v(ÂèØÈÄâ) Êü•ÁúãËØ¶ÁªÜ ÂàõÂª∫ÂΩíÊ°£ Áî®Ê≥ïÔºötar cvf &lt;ÂΩíÊ°£ÂêéÊñá‰ª∂&gt;.tar &lt;ÈúÄË¶ÅÂΩíÊ°£ÁöÑÊñá‰ª∂&gt; tar cvf dir.tar dir ÂΩíÊ°£ÁõÆÂΩï tar cvf dir.tar fileÔºü ÂΩíÊ°£Êñá‰ª∂ Êü•ÁúãÂΩíÊ°£ tar tvf dir.tar ÊèêÂèñÂΩíÊ°£ ÂàõÂª∫ÁõÆÂΩïÔºåÂπ∂Âú®Êñ∞ÁõÆÂΩï‰∏ãÊèêÂèñÂΩíÊ°£ tar xvf &lt;ÂΩíÊ°£Êñá‰ª∂&gt; Êñá‰ª∂ÂéãÁº© tarÂëΩÂêçÊú¨Ë∫´‰∏çÊîØÊåÅÂéãÁº©Ôºå‰ΩÜÊòØÂèØ‰ª•Ë∞ÉÁî®ÂéãÁº© ÂéãÁº©ÊñπÂºè ÁâπÁÇπ ÈÄâÈ°π Ê†áÂáÜÊ†ºÂºè gzip ÈÄüÂ∫¶Âø´ÔºåÂéÜÂè≤‰πÖÔºå‰ΩøÁî®ÊúÄÂπøÊ≥õ z &lt;ÂêçÂ≠ó&gt;.tar.gz , &lt;ÂêçÂ≠ó&gt;.tar.tgz bzip ÂéãÁº©ÁéáËæÉÂ∞èÔºåÈÄüÂ∫¶ÊúÄÂø´ j &lt;ÂêçÂ≠ó&gt;.tar.bz2 xz ÊúÄÊñ∞ÔºåÂéãÁº©ÁéáÊúÄÂ∞è J &lt;ÂêçÂ≠ó&gt;.tar.xz ‰æãÂ¶Ç tar cvf etc.tar /etc tar czvf etc.tar.gz /etc tar cjvf etc.tar.bz2 /etc tar cJvf etc.tar.xz /etc Êñá‰ª∂Êü•Êâæ locateÂú®locateÊï∞ÊçÆÂ∫ì‰∏≠ÊåâÂêçÁß∞Êü•ÊâæÊñá‰ª∂ÊàñÁõÆÂΩï updatedb ÊâãÂä®Êõ¥Êñ∞locateÊï∞ÊçÆÂ∫ìÔºàÊØèÊó•Êõ¥Êñ∞‰∏ÄÊ¨°Ôºâ locate chenxiaojian find Âú®Êñá‰ª∂Á≥ªÁªü‰∏≠Êü•ÊâæÊñá‰ª∂ find &lt;Êü•ÊâæËåÉÂõ¥&gt; &lt;ÈÄâÈ°π&gt; &lt;ÂèÇÊï∞&gt; Â¶ÇÊûú‰∏çÊåáÂÆöÁõÆÂΩïÔºåÂàôÂú®ÂΩìÂâçÁõÆÂΩï‰∏≠Êü•Êâæ -name ÊåâÂêçÁß∞Êü•ÊâæÊñá‰ª∂ -iname ÊåâÂêçÁß∞Êü•ÊâæÊñá‰ª∂Ôºå‰∏çÂå∫ÂàÜÂ§ßÂ∞èÂÜô find / -name chenxiaojian -user ÊåâÁî®Êà∑Êü•ÊâæÊñá‰ª∂ -group ÊåâÁî®Êà∑ÁªÑÊü•ÊâæÊñá‰ª∂ -size ÊåâÂ§ßÂ∞èÊü•ÊâæÊñá‰ª∂ Â§ßÂ∞èÔºö kÔºåM, G +‰ª£Ë°®Â§ß‰∫éÔºå-‰ª£Ë°®Â∞è‰∫éÔºåÊ≤°ÊúâÊåáÂÆö‰ª£Ë°®Á≠â‰∫éÔºàÊòØÂêë‰∏äÂèñÊï¥ÁöÑÔºâ find / -size -100M -exec findÁöÑ‰∫åÊ¨°Â§ÑÁêÜ Áî®Ê≥ïÔºöfind &lt;Êü•ÊâæËåÉÂõ¥&gt; &lt;ÈÄâÈ°π&gt; &lt;ÂèÇÊï∞&gt; -exec &lt;Â§ÑÁêÜÂä®‰Ωú&gt; Ë¶ÅÊ±ÇÔºöÂú®Êï¥‰∏™Êìç‰ΩúÁ≥ªÁªü‰∏≠Êü•ÊâæadminÁî®Êà∑ÁöÑÊñá‰ª∂ÂíåÁõÆÂΩïÔºåÂπ∂Â∞ÜÊü•ÊâæÁöÑÁªìÊûúÂ§çÂà∂Âà∞/root/dirÁõÆÂΩï‰∏ã find / -user admin -exec cp -r {} /root/dir \; find / -name ‚Äú1.txt‚Äù -exec rm -rvf {} ; {}Ë°®Á§∫Êü•ÊâæÁöÑÁªìÊûúÔºõ ÂàÜÂè∑‰ª£Ë°®ÁªìÊùüÔºõÂâçÈù¢ÁöÑ\Ë°®Á§∫ËΩ¨‰πâ ÈáçÂÆöÂêë‰∏éÁÆ°ÈÅìÊØè‰∏™ËøõÁ®ãÈÉΩÊúâ‰∏â‰∏™ÈÄöÈÅìÔºåÂàÜÂà´ÊòØÊ†áÂáÜËæìÂÖ•ÔºåÊ†áÂáÜËæìÂá∫ÔºåÊ†áÂáÜÈîôËØØ Ê†áÂáÜËæìÂÖ• stdin 0 ÈîÆÁõò Ê†áÂáÜËæìÂá∫ stdout 1ÊòæÁ§∫ Ê†áÂáÜÈîôËØØ stderr 2ÊòæÁ§∫ ÈáçÂÆöÂêëÔºöÂ∞ÜËæìÂá∫ÁöÑÈªòËÆ§‰ΩçÁΩÆÊõøÊç¢‰∏∫Êñá‰ª∂ÊàñÂÖ∂‰ªñËÆæÂ§á ËøõÁ®ã 1 &gt; Êñá‰ª∂ ‰ΩúÁî®ÔºöÂ∞ÜËøõÁ®ã1ÁöÑÊ†áÂáÜËæìÂá∫ÂÜôÂà∞Êñá‰ª∂ÈáåÔºåË¶ÜÁõñÊñá‰ª∂ÂÜÖÂÆπ echo hello &gt; file1 Â∞ÜhelloÂÜôÂÖ•Êñá‰ª∂file1‰∏≠ÔºåÊ≥®ÊÑèË¶ÜÁõñÂÜô(echo hello 1&gt;file1,ÈÄöÂ∏∏1ÊòØÂèØ‰ª•ÁúÅÁï•ÁöÑ) ËøõÁ®ã1 &gt;&gt; Êñá‰ª∂ ‰ΩúÁî®ÔºöÂ∞ÜËøõÁ®ã1ÁöÑÊ†áÂáÜËæìÂá∫ÂÜôÂÖ•Êñá‰ª∂‰∏≠ÔºåËøΩÂä†ÂÜô echo hello &gt;&gt; file1 ËøõÁ®ã1 2&gt; Êñá‰ª∂ ‰ΩúÁî®ÔºöÂ∞ÜËøõÁ®ã1ÁöÑÊ†áÂáÜÈîôËØØÂÜôÂà∞Êñá‰ª∂‰∏≠ÔºåË¶ÜÁõñÊñá‰ª∂ÂÜÖÂÆπ ll /sdf 2&gt; file1 ‰ΩúÁî®ÔºöÂ∞ÜÈîôËØØ‰ø°ÊÅØÂÜôÂÖ•Êñá‰ª∂‰∏≠ ËøõÁ®ã1 2&gt;&gt; Êñá‰ª∂ ‰ΩúÁî®ÔºöÂ∞ÜËøõÁ®ã1ÁöÑÊ†áÂáÜÈîôËØØÂÜôÂà∞Êñá‰ª∂‰∏≠ÔºåËøΩÂä†ÂÜô ll /sdf 2 &gt;&gt; file1 Â¶ÇÊûú‰∏ÄÊù°ËøõÁ®ãÔºå‰πüÂ∞±ÊòØ‰∏ÄÊù°ÂëΩ‰ª§Êó¢ÊúâÊ≠£Á°Æ‰πüÊúâÈîôËØØÔºåÈÉΩÂÜôÂÖ•Êñá‰ª∂‰∏≠ ll file1 /dfs &amp;&gt; file1 ll file1 /dfs &amp;&gt;&gt; file1 Â¶ÇÊûúÂ∞ÜÊ†áÂáÜÈîôËØØÂíåÊ†áÂáÜËæìÂá∫ÂÜôÂÖ•‰∏çÂêåÁöÑÊñá‰ª∂ ll file1 /dfs &gt;&gt; log1 2&gt;&gt; log2 ÁÆ°ÈÅìÔºöÊòØÊåáÂ∞ÜËøõÁ®ã1 ÁöÑËæìÂá∫‰Ωú‰∏∫ËæìÂÖ•‰º†ÈÄíÁªôËøõÁ®ã2 ËøõÁ®ã1 | ËøõÁ®ã2 ll /etc | less ÊñáÊú¨Â§ÑÁêÜ grep ËøõË°åÊñáÊú¨Â§ÑÁêÜÔºåÂèÇÊï∞Êñá‰ª∂‰æãÂ¶Ç/etc/passwdÔºåÊü•ÊâæÂÖ≥ÈîÆÂ≠óÊòØÂê¶Âú®Ëøô‰∏™Êñá‰ª∂‰∏≠ Áî®Ê≥ïÔºö grep &lt;ÂÖ≥ÈîÆÂ≠ó&gt; &lt;Êñá‰ª∂&gt; ÔºàÊ≥®ÊÑègrepÂåπÈÖçÁöÑÊòØÊñá‰ª∂ÈáåÈù¢ÁöÑ‰ø°ÊÅØÔºâ grep chenxiaojian /etc/passwd Ë∑üÁÆ°ÈÅìÈÖçÂêà‰ΩøÁî® cat /etc/passwd | grep chenxiaojian Ê≠£ÂàôË°®ËææÂºè ‚ÄìÊ®°ÂºèÂåπÈÖçÔºåÊï∞ÊçÆÂåπÈÖç *ÂåπÈÖç0‰∏™ÊàñÂ§ö‰∏™Â≠óÁ¨¶ ^ Ë°åÈ¶ñÂÆö‰ΩçÁ¨¶ $Ë°åÂ∞æÂÆö‰ΩçÁ¨¶ -v ÂèçÈÄâ -e ÊîØÊåÅÂ§ö‰∏™ÂÖ≥ÈîÆÂ≠ó -E ÊîØÊåÅÊõ¥Â§çÊùÇÁöÑÂåπÈÖçÊ®°Âºè ^$ ÂåπÈÖçÁ©∫Ë°å Â∏∏Áî®ÂëΩ‰ª§ cd ÂàáÊç¢Ë∑ØÂæÑ pwd Êü•ÁúãÂΩìÂâçÁõÆÂΩïÁöÑÁªùÂØπË∑ØÂæÑ Â∏∏ËßÅÈîôËØØ Â¶ÇÊûúÂΩìÂâçË∑ØÂæÑ‰∏∫/home/chenxiaojianÔºåÁÑ∂ÂêéËøô‰∏™chenxiaojianÁöÑÁõÆÂΩï‰∏ãÊúâËÆ∏Â§öÊñá‰ª∂‰æãÂ¶Çfile1ÔºåÈÇ£‰πàËøõÂÖ•/Êìç‰ΩúÈÉΩÊòØ cd / ll file1ÔºàÂâçÊèêÊòØÂΩìÂâçÁõÆÂΩïÊòØ/home/chenxiaojianÔºâ]]></content>
      <categories>
        <category>Linux</category>
        <category>LinuxÊñá‰ª∂ÁÆ°ÁêÜ</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python‰∏≠strÂíåreprÊñπÊ≥ï]]></title>
    <url>%2Fpython%E4%B8%ADstr%E5%92%8Crepr%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[str()ÊñπÊ≥ïÈù¢ÂêëÁî®Êà∑ repr()ÊñπÊ≥ïÈù¢ÂêëÁ®ãÂ∫èÂëò ‰ª£Á†Å1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768class Item: def __init__(self,name): self.name = name def __str__(self): print("ÊàëÂú®Ë∞ÉÁî®ÈáçÂÜôÁöÑstrÊñπÊ≥ï") return self.name def __repr__(self): print("ÊàëÊ≠£Âú®Ë∞ÉÁî®ÈáçÂÜôÁöÑreprÊñπÊ≥ï") return 'Item(&#123;!r&#125;)'.format(self.name)a = Item("ÈôàÂ∞èÂùö")print(repr(a)) # Ë∞ÉÁî®ÈáçÂÜôÁöÑreprÊñπÊ≥ï,print("\nÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------\n")b = Item(repr('ÈôàÂ∞èÂùö')) # reprÂáΩÊï∞ÔºåËøôÈáåÂÖ∂ÂÆûÊòØobjectÁöÑreprÊñπÊ≥ïÔºå‰πüÂ∞±ÊòØÈªòËÆ§ÁöÑreprÊñπÊ≥ïprint(b)print("\nÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------\n")c = repr('ÈôàÂ∞èÂùö') # reprÂáΩÊï∞ÔºåËøôÈáåÂÖ∂ÂÆûÊòØobjectÁöÑreprÊñπÊ≥ïÔºå‰πüÂ∞±ÊòØÈªòËÆ§ÁöÑreprÊñπÊ≥ïprint(c)print("\nÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------\n")d = Item('ÈôàÂ∞èÂùö') """ ËøôÈáådÊòØ‰∏Ä‰∏™Á±ªÂØπË±°ÔºåprintËæìÂá∫Êó∂Â∞±‰ºödËøô‰∏™ÂØπË±°Êó∂ÔºåÁõ∏ÂΩì‰∫éÂ∞±ÊòØÂØπdËøõË°åÊ∏≤ÊüìÔºåÂ∞±‰ºöË∞ÉÁî®strÊñπÊ≥ïÔºå ÁÑ∂ÂêéËøô‰∏™ÂØπË±°ÊòØÁ±ªÂØπË±°ÔºåÂ∞±Êü•ÁúãËøô‰∏™Á±ªÊúâÊ≤°ÊúâÈáçÂÜôÁöÑstrÊñπÊ≥ïÔºåÊúâÂ∞±‰ºöË∞ÉÁî®ÈáçÂÜôÁöÑstrÊñπÊ≥ïÔºåÊ≤°ÊúâÂ∞±‰ºöË∞ÉÁî®objectÁöÑstrÊñπÊ≥ï """print(d)print("\nÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------\n")"""ÊàëÊ≠£Âú®Ë∞ÉÁî®ÈáçÂÜôÁöÑreprÊñπÊ≥ïItem('ÈôàÂ∞èÂùö')ÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------ÊàëÂú®Ë∞ÉÁî®ÈáçÂÜôÁöÑstrÊñπÊ≥ï'ÈôàÂ∞èÂùö'ÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------'ÈôàÂ∞èÂùö'ÊàëÊòØÂàÜÂâ≤Á∫ø-----------------------------ÊàëÂú®Ë∞ÉÁî®ÈáçÂÜôÁöÑstrÊñπÊ≥ïÈôàÂ∞èÂùöËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . ."""class test: def __repr__(self): print("ÊàëÊòØstrÊñπÊ≥ï") return "hahahah"e = test()print(e) # printÊñπÊ≥ïÈªòËÆ§‰ºöË∞ÉÁî®strÊñπÊ≥ïÔºåÁÑ∂ÂêéstrÊñπÊ≥ïÈªòËÆ§Â∞±‰ºöË∞ÉÁî®reprÊñπÊ≥ï"""ÊàëÊòØstrÊñπÊ≥ïhahahah""" ÊÄªÁªì printÂáΩÊï∞ÈªòËÆ§‰ºöË∞ÉÁî®strÊñπÊ≥ïÔºåÁÑ∂ÂêéstrÊñπÊ≥ïÂ¶ÇÊûúÊ≤°ÊúâÂÆö‰πâÔºåÂÜÖÈÉ®ÈªòËÆ§ÊòØË∞ÉÁî®reprÊñπÊ≥ï ÁÑ∂Â∞±ÂØπ‰∫éÁ±ªÂØπË±°Êù•ËØ¥ÔºåprintÊñπÊ≥ïÈ¶ñÂÖàÊü•ÁúãÂÜÖÈÉ®ÊúâÊ≤°ÊúâÈáçÂÜôÁöÑstrÊñπÊ≥ïÔºåÂ¶ÇÊûúÊúâË∞ÉÁî®ËØ•ÊñπÊ≥ïÔºåÂ¶ÇÊûúÊ≤°ÊúâÂ∞±‰ºö ÁúãÁúãÊúâÊ≤°ÊúâÈáçÂÜôÁöÑreprÊñπÊ≥ïÔºåÂ¶ÇÊûúÊúâÂ∞±‰ºöË∞ÉÁî®ËØ•ÊñπÊ≥ïÔºåÂ¶ÇÊûú‰πüÊ≤°ÊúâreprÊñπÊ≥ïÔºåÂ∞±‰ºöË∞ÉÁî®objectÁ±ªÁöÑstrÊñπÊ≥ï Âõ†‰∏∫ÊâÄÊúâÁöÑÁ±ªÈÉΩ‰ºöÁªßÊâøËøô‰∏™objectÁ±ª Ê≠§Â§ñÔºåstrÊñπÊ≥ïÈªòËÆ§Â∞±ÊòØË∞ÉÁî®reprÊñπÊ≥ïÔºåÊ≠§Â§ñÔºåÂØπ‰∫éreprÊñπÊ≥ïÂíåstrÊñπÊ≥ïÔºåÈÉΩË¶ÅreturnÂ≠óÁ¨¶‰∏≤]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÂ†ÜÈòüÂàóÁÆóÊ≥ï]]></title>
    <url>%2Fpython%E5%A0%86%E9%98%9F%E5%88%97%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[heapqÊ®°Âùó ‚Äì Â†ÜÈòüÂàóÁÆóÊ≥ïÂ†ÜÔºöÂ†ÜÊòØ‰∏™‰∏Ä‰∏™‰∫åÂèâÊ†ëÔºå‰ªñÁöÑÊØè‰∏™Áà∂ÁªìÁÇπÁöÑÂÄºÈÉΩÂ§ß‰∫éÊàñËÄÖÂ∞è‰∫éÊâÄÊúâÂ≠©Â≠êËäÇÁÇπÁöÑÂÄº]]></content>
      <categories>
        <category>PythonÊï∞ÊçÆÁªìÊûÑ</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑„ÄëP1019 ÂçïËØçÊé•Èæô]]></title>
    <url>%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1019%20%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞ÂçïËØçÊé•ÈæôÊòØ‰∏Ä‰∏™‰∏éÊàë‰ª¨ÁªèÂ∏∏Áé©ÁöÑÊàêËØ≠Êé•ÈæôÁõ∏Á±ª‰ººÁöÑÊ∏∏ÊàèÔºåÁé∞Âú®Êàë‰ª¨Â∑≤Áü•‰∏ÄÁªÑÂçïËØçÔºå‰∏îÁªôÂÆö‰∏Ä‰∏™ÂºÄÂ§¥ÁöÑÂ≠óÊØçÔºåË¶ÅÊ±ÇÂá∫‰ª•Ëøô‰∏™Â≠óÊØçÂºÄÂ§¥ÁöÑÊúÄÈïøÁöÑ‚ÄúÈæô‚ÄùÔºàÊØè‰∏™ÂçïËØçÈÉΩÊúÄÂ§öÂú®‚ÄúÈæô‚Äù‰∏≠Âá∫Áé∞‰∏§Ê¨°ÔºâÔºåÂú®‰∏§‰∏™ÂçïËØçÁõ∏ËøûÊó∂ÔºåÂÖ∂ÈáçÂêàÈÉ®ÂàÜÂêà‰∏∫‰∏ÄÈÉ®ÂàÜÔºå‰æãÂ¶Ç beastbeastbeastÂíåastonishastonishastonishÔºåÂ¶ÇÊûúÊé•Êàê‰∏ÄÊù°ÈæôÂàôÂèò‰∏∫beastonishbeastonishbeastonishÔºåÂè¶Â§ñÁõ∏ÈÇªÁöÑ‰∏§ÈÉ®ÂàÜ‰∏çËÉΩÂ≠òÂú®ÂåÖÂê´ÂÖ≥Á≥ªÔºå‰æãÂ¶Çatatat Âíå atideatideatide Èó¥‰∏çËÉΩÁõ∏Ëøû„ÄÇ ËæìÂÖ•Ê†ºÂºèËæìÂÖ•ÁöÑÁ¨¨‰∏ÄË°å‰∏∫‰∏Ä‰∏™ÂçïÁã¨ÁöÑÊï¥Êï∞nnn (n‚â§20n \le 20n‚â§20)Ë°®Á§∫ÂçïËØçÊï∞Ôºå‰ª•‰∏ãnnn Ë°åÊØèË°åÊúâ‰∏Ä‰∏™ÂçïËØçÔºåËæìÂÖ•ÁöÑÊúÄÂêé‰∏ÄË°å‰∏∫‰∏Ä‰∏™Âçï‰∏™Â≠óÁ¨¶ÔºåË°®Á§∫‚ÄúÈæô‚ÄùÂºÄÂ§¥ÁöÑÂ≠óÊØç„ÄÇ‰Ω†ÂèØ‰ª•ÂÅáÂÆö‰ª•Ê≠§Â≠óÊØçÂºÄÂ§¥ÁöÑ‚ÄúÈæô‚Äù‰∏ÄÂÆöÂ≠òÂú®. ËæìÂá∫Ê†ºÂºèÂè™ÈúÄËæìÂá∫‰ª•Ê≠§Â≠óÊØçÂºÄÂ§¥ÁöÑÊúÄÈïøÁöÑ‚ÄúÈæô‚ÄùÁöÑÈïøÂ∫¶ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 12345675attouchcheatchoosetacta ËæìÂá∫ #1 123 ËØ¥Êòé/ÊèêÁ§∫ÔºàËøûÊàêÁöÑ‚ÄúÈæô‚Äù‰∏∫atoucheatactactouchooseÔºâ NOIp2000ÊèêÈ´òÁªÑÁ¨¨‰∏âÈ¢ò ÊÄùË∑ØÔºö È¶ñÂÖàÈááÁî®‰∏Ä‰∏™stringÊï∞ÁªÑÔºåÂ≠òÂèñËæìÂÖ•ÁöÑÂçïËØçÔºåÁÑ∂ÂêéÊ†πÊçÆËæìÂÖ•ÁöÑÂ≠óÊØçÔºå‰πüÂ∞±ÊòØÈæôÁöÑÂ§¥ÔºåÊâæÂà∞Êï∞ÁªÑ‰∏≠ÊØè‰∏Ä‰∏™ËÉΩÂ§ü‰∏éËøô‰∏™Â≠óÊØçËøõË°åÁõ∏Êé•ÁöÑÂçïËØçÔºå‰ªéËøô‰∫õÂçïËØçÂºÄÂßãÔºåËøõË°åDFS„ÄÇ ÁÑ∂ÂêéÔºåÊØè‰∏Ä‰∏™ÂçïËØçÂèØ‰ª•Âá∫Áé∞ÊúÄÂ§ö‰∏§Ê¨°ÔºåÂèØ‰ª•ËÆæÁΩÆ‰∏Ä‰∏™visitedÊï∞ÁªÑËøõË°åÊ†áËÆ∞ ÈúÄË¶ÅÂà§Êñ≠‰∏§‰∏™ÂçïËØçËÉΩÂê¶Áõ∏Êé•ÔºåËÆæÁΩÆ‰∏Ä‰∏™Â§ÑÁêÜÂáΩÊï∞Ôºå‰º†ÂÖ•‰∏§‰∏™ÂèÇÊï∞Ôºå‰πüÂ∞±ÊòØ‰∏§‰∏™Ë¶ÅÂ§ÑÁêÜÁöÑÂçïËØçÔºåÂ¶ÇÊûúËøô‰∏§‰∏™ÂçïËØçËÉΩÂ§üÁõ∏Êé•ÔºåÂπ∂‰∏îÂØπÂéüÊù•ÁöÑÂçïËØçÁöÑÈïøÂ∫¶‰∫ßÁîüÂΩ±ÂìçÔºå‰πüÂ∞±ÊòØÂèòÈïø‰∫ÜÔºåÈÇ£‰πàËøîÂõûËøô‰∏™Ëøô‰∏§‰∏™ÂçïËØçÁõ∏Êé•ÁöÑÁªìÊûú„ÄÇÂ¶ÇÊûú‰∏çËÉΩÁõ∏ËøûÊé•ÔºåÈÇ£‰πàËøîÂõûÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÔºõÊ≥®ÊÑèÁâπÊÆäÊÉÖÂÜµÔºåÂ¶ÇÊûúËÉΩÂ§üÁõ∏Êé•ÔºåÂπ∂‰∏îaÂåÖÂê´b,ÊàñËÄÖbÂåÖÂê´a,ÈÇ£‰πà‰ªñ‰ª¨Áõ∏Êé•ÂêéÁöÑÁªìÊûúÔºåÂç≥ÊòØÈïøÂ∫¶Ë∑üÂéüÊù•Áõ∏ÊØîÔºåÊ≤°ÊúâÂ¢ûÂä†ÔºåÊâÄ‰ª•ËøòÊòØËøîÂõûÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞„ÄÇ AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116// P1019 ÂçïËØçÊé•Èæô.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//// P1019 ÂçïËØçÊé•Èæô.cpp : Ê≠§Êñá‰ª∂ÂåÖÂê´ "main" ÂáΩÊï∞„ÄÇÁ®ãÂ∫èÊâßË°åÂ∞ÜÂú®Ê≠§Â§ÑÂºÄÂßãÂπ∂ÁªìÊùü„ÄÇ//#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;string&gt;using namespace std;int visited[30];string arr[30];string first;string res_str = "";int n;int res = 0;string deal(string a, string b) //ÂàÜÊàê‰∏§ÁßçÊÉÖÂÜµËøõË°åÂà§Êñ≠&#123; //Â§ß‰Ω¨ËØ¥ddababab Âíå ababÔºåËøô‰∏™ÂèØ‰ª•ËøûÊàê ddabababab,‰∏çËøáÔºåËøô‰∏™‰∏§‰∏™‰∏çÊòØÂåÖÂê´ÂÖ≥Á≥ªÂêó=-= //ÊàëÊåÅ‰øùÁïôÊÑèËßÅ if (a.size() &gt; b.size()) //Âà§Êñ≠ÂåÖÂê´ÔºåÂõ†‰∏∫Â≠òÂú®ÁâπÊÆäÊÉÖÂÜµ XXXtact tact &#123; string temp = a.substr(a.size() - b.size()); if (temp == b) return a; &#125; if (a.size() &lt; b.size()) &#123; string temp = b.substr(0, a.size()); if (temp == a) return a; &#125; int i = 1; while (i &lt; a.size() &amp;&amp; i &lt; b.size()) &#123; string c = a.substr(a.size() - i); string d = b.substr(0, i); // cout &lt;&lt; "hahah " &lt;&lt; d &lt;&lt; endl; if (c == d) break; else i++; &#125; if (i &lt; a.size() &amp;&amp; i &lt; b.size()) return a + b.substr(i); else return a;&#125;void dfs(string temp)&#123; if (res &lt; temp.size()) res = temp.size(); for (int i = 0; i &lt; n; i++) &#123; if (visited[i] &gt;= 2) continue; else &#123; string temp1 = deal(temp, arr[i]); //cout &lt;&lt; "temp:" &lt;&lt; temp &lt;&lt; " " &lt;&lt; "temp1:" &lt;&lt; temp1 &lt;&lt; endl; if (temp1.size() == temp.size()) continue; else &#123; visited[i]++; dfs(temp1); visited[i]--; &#125; &#125; &#125;&#125;int main()&#123; cin &gt;&gt; n; for (int i = 0; i &lt; n; i++) &#123; cin &gt;&gt; arr[i]; &#125; cin &gt;&gt; first; for (int i = 0; i &lt; n; i++) &#123; if (arr[i][0] == first[0]) &#123; visited[i]++; dfs(arr[i]); visited[i]--; &#125; &#125; cout &lt;&lt; res &lt;&lt; endl; //cout &lt;&lt; deal("", "penv11") &lt;&lt; endl;&#125;//Âà§Êñ≠ÈáçÂ§çÈÉ®ÂàÜÂá∫Áé∞ÈóÆÈ¢ò//ËßÑÂàôÁêÜËß£ÈîôËØØ„ÄÇ„ÄÇ„ÄÇÁÆó‰∫Ü/*1envelopee15*/ ÊÄªÁªì ÂØπ‰∫éDFSÂíåÂõûÊ∫ØÁöÑÁêÜËß£ËøòÊòØÂ§™ÊµÖ‰∫Ü=-=ÔºåÁúãÂà´‰∫∫ÁöÑ‰ª£Á†ÅÂèàÊáíÂæóÁúã‰∏ãÂéªÔºåÂè™ËÉΩËá™Â∑±ÂÜôÔºåÁÑ∂ÂêéÊúâÁÇπ‰∏ëÈôã=-= ‰∏çËøáÔºåÈÄöËøáËøôÈÅìÈ¢òÔºåÊàëÊÉ≥ÊàëÂØπDFSÂíåÂõûÊ∫ØÁöÑÊÄùÊÉ≥Êõ¥Ê∑±‰∫ÜÔºåÊØïÁ´ü‰ª£Á†ÅË∞ÉËØï‰∫ÜÂæà‰πÖ=-= Ê≠§Â§ñÂØπ‰∫é‰∏Ä‰∫õÁªìÊûúÊù°‰ª∂ÁöÑÂà§Êñ≠ÔºåËøòÊòØËÉΩÂÜ∑ÈùôÔºåÈùô‰∏ãÂøÉÊù•=-=ÔºàË¢´‰∏Ä‰∏™Â∞èÂ§±ËØØËÄΩËØØ‰∫ÜÂæà‰πÖ=-=Ôºâ]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python‰∏≠Ê∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ùËß£Êûê]]></title>
    <url>%2Fpython%E4%B8%AD%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[Áõ¥Êé•ËµãÂÄºÔºåÊµÖÊã∑Ë¥ùÂíåÊ∑±Êã∑Ë¥ùÁöÑÂå∫Âà´Áõ¥Êé•ËµãÂÄº1234567# Áõ¥Êé•ËµãÂÄºÔºåÂÖ∂ÂÆûÂ∞±ÊòØÂØπÂØπË±°ÁöÑÂºïÁî®a = [1,2,[3,4,5]]b = aprint(id(a)," ", id(b))# 1568089149128 1568089149128# Âõ†‰∏∫a b ÈÉΩÊòØ[1,2,[3,4,5]]Ëøô‰∏™ÂØπË±°ÁöÑÂºïÁî®ÔºåaÂíåbÊåáÂêëÂêå‰∏ÄÂùóÁöÑÂÜÖÂ≠òÂú∞ÂùÄ ÊµÖÊã∑Ë¥ùÔºöÊã∑Ë¥ùÁà∂ÂØπË±°Ôºå‰∏ç‰ºöÊã∑Ë¥ùÂØπË±°ÂÜÖÈÉ®ÁöÑÂ≠êÂØπË±° 12345678910111213141516171819# ÊµÖÈù†Âà´Êã∑Ë¥ùimport copya = [1,2,3,4,[99,88]]b = copy.copy(a)print(b)print(id(a), id(b))# [1, 2, 3, 4, [99, 88]]# 1781465341832 1781465338504# ÂèØ‰ª•ÁúãÂá∫aÔºåbÊåáÂêë‰∏çÂêåÁöÑÂØπË±°# ‰øÆÊîπaÁöÑÂ≠êÂØπË±°a[4][1] = 100000print("aÁöÑÂÄº", a)print("bÁöÑÂÄº", b)# aÁöÑÂÄº [1, 2, 3, 4, [99, 100000]]# bÁöÑÂÄº [1, 2, 3, 4, [99, 100000]]# ÂèØ‰ª•ÁúãÂá∫Ôºåa,bÁöÑÂØπË±°ÂÜÖÈÉ®ÁöÑÂ≠êÂØπË±°ËøòÊòØÂêå‰∏Ä‰∏™„ÄÅ Ê∑±Êã∑Ë¥ùÔºö copy Ê®°ÂùóÁöÑ deepcopy ÊñπÊ≥ïÔºåÂÆåÂÖ®Êã∑Ë¥ù‰∫ÜÁà∂ÂØπË±°ÂèäÂÖ∂Â≠êÂØπË±°„ÄÇ 12345678910111213141516171819# Ê∑±Êã∑Ë¥ùimport copya = [1,2,3,4,[99,88]]b = copy.deepcopy(a)print("id a:",id(a))print("id b:",id(b))# id a: 2207231741768# id b: 2207226938760# ‰øÆÊîπaÂØπË±°ÁöÑÂ≠êÂØπË±°a[4][1] = 100000print('aÁöÑÂÄº',a)print('bÁöÑÂÄº',b)# aÁöÑÂÄº [1, 2, 3, 4, [99, 100000]]# bÁöÑÂÄº [1, 2, 3, 4, [99, 88]]# ÂèØ‰ª•ÁúãÂá∫ËøôÊ¨°‰øÆÊîπaÁöÑÂ≠êÂØπË±°Âπ∂‰∏ç‰ºöÂØπbÈÄ†ÊàêÂΩ±Âìç,ËØ¥ÊòéËøô‰∏§‰∏™ÂØπË±°ÁöÑÂ≠êÂØπË±°‰∏çÊòØÂêå‰∏Ä‰∏™]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÂèåÂêëÈòüÂàódeque]]></title>
    <url>%2Fpython%E5%8F%8C%E5%90%91%E9%98%9F%E5%88%97deque%2F</url>
    <content type="text"><![CDATA[deque:ËøîÂõû‰∏Ä‰∏™ÂèåÂêëÈòüÂàóÁöÑÂØπË±°„ÄÅ deque([iterable, [maxlen]])Ôºå‰ªéÂ∑¶Âà∞Âè≥ÂàùÂßãÂåñÔºåÔºàÁî®ÊñπÊ≥ïappend()ÔºâÔºå‰ªéiterableÂèØËø≠‰ª£ÂØπË±°ÂàõÂª∫Êï∞ÊçÆÔºåÂ¶ÇÊûúÊ≤°ÊúâÊåáÂÆöÔºåÂàôËøô‰∏™ÂèåÂêëÈòüÂàó‰∏∫Á©∫„ÄÇ ‰ªéÈòüÂàó‰∏§Á´ØÊ∑ªÂä†ÊàñËÄÖÂºπÂá∫ÂÖÉÁ¥†ÁöÑÂ§çÊùÇÂ∫¶ÊòØO(1)ÔºåËøô‰∏™Ë∑üÂàóË°®‰∏çÂêåÔºåÂàóË°®ÁöÑÂ§¥ÈÉ®ÊèíÂÖ•ÂíåÁßªÈô§ÂÖÉÁ¥†ÁöÑÂ§çÊùÇÂ∫¶‰∏∫O(n) maxlenÂ¶ÇÊûúÊ≤°ÊúâÊåáÂÆöÊàñËÄÖ‰∏∫NoneÔºåÈÇ£‰πàdequeÂèØ‰ª•Â¢ûÈïøÂà∞‰ªªÊÑèÈïøÂ∫¶ÔºåÂê¶ÂàôÔºådequeÂ∞±ÈôêÂÆöÂà∞ÊúÄÂ§ßÈïøÂ∫¶„ÄÇÂΩìÊåáÂÆöÈïøÂ∫¶ÁöÑdequeÊª°‰∫Ü‰πãÂêéÔºåÂΩìÊñ∞È°πÂä†ÂÖ•Êó∂ÔºåÂ∞±‰ªéÂè¶‰∏ÄÁ´ØÂºπÂá∫ÂÖÉÁ¥†„ÄÇ 123456789101112from collections import dequeq = deque('123',maxlen=3)print(q)# deque(['1', '2', '3'], maxlen=3)q.append('5') # ÈòüÂàóÂè≥Á´ØÊèíÂÖ•,Â¶ÇÊûúÊª°‰∫ÜÔºåÂ∞±Â∞ÜÂ∑¶Á´ØÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂºπÂá∫print(q)q.appendleft('99')print(q)# deque(['1', '2', '3'], maxlen=3)# deque(['2', '3', '5'], maxlen=3)# deque(['99', '2', '3'], maxlen=3) ÊñπÊ≥ïappend(x)‚ÄìÊ∑ªÂä†xÂà∞Âè≥Á´Øappendleft(x)‚ÄìÊ∑ªÂä†xÂà∞Â∑¶Á´Øclear()‚ÄìÁßªÈô§ÊâÄÊúâÂÖÉÁ¥†Ôºå‰ΩøÂÖ∂ÈïøÂ∫¶‰∏∫0copy()‚ÄìÂàõÂª∫‰∏Ä‰ªΩÊµÖÊã∑Ë¥ùcount(x)‚ÄìËÆ°ÁÆódeque‰∏≠‰∏™Êï∞Á≠â‰∫éxÁöÑÂÖÉÁ¥†123456789101112131415161718from collections import dequeq = deque('1234')q.append(55)# deque(['1', '2', '3', '4', 55])q.appendleft(88)# deque([88, '1', '2', '3', '4', 55])q.append('1')print(q.count('1'))# 2q.clear()# deque([])print(q) extend(iterable)‚ÄìÊâ©Â±ïdequeÁöÑÂè≥‰æßÔºåÈÄöËøáÊ∑ªÂä†iterableÂèÇÊï∞‰∏≠ÁöÑÂÖÉÁ¥†extendleft(iterable)‚ÄìÊâ©Â±ïdequeÁöÑÂ∑¶‰æß„ÄÇÊ≥®ÊÑèÂèØËø≠‰ª£ÂØπË±°‰∏≠ÁöÑÂÖÉÁ¥†È°∫Â∫èË¢´ÂèçÁùÄËøáÊù•Ê∑ªÂä†index(x)‚ÄìËøîÂõûxÂú®deque‰∏≠ÁöÑ‰∏ãÊ†á123456789101112from collections import dequeq = deque('123')q.extendleft([4,5,6])# deque([6, 5, 4, '1', '2', '3'])q.extend([7,8,9])# deque([6, 5, 4, '1', '2', '3', 7, 8, 9])print(q)print(q.index('1'))# 3 insert(i,x)‚ÄìÂú®‰ΩçÁΩÆiÊèíÂÖ•x,Â¶ÇÊûúÊèíÂÖ•‰ºöË∂ÖËøáÊúÄÂ§ßÈïøÂ∫¶ÔºåÂàô‰ºöËøîÂõû‰∏Ä‰∏™IndexErrorpop()‚ÄìÁßªÈô§Âπ∂‰∏îËøîÂõû‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÈòüÂàóÊúÄÂè≥Á´ØÁöÑÈÇ£‰∏Ä‰∏™ÔºåÂ¶ÇÊûúÊ≤°ÊúâÔºåÂ∞±ËøîÂõûIndexErrorpopleft()‚ÄìÁßªÈô§ËøîÂõûÊúÄÂ∑¶ÁöÑ‰∏Ä‰∏™ÂÖÉÁ¥†remove(value)‚ÄìÁßªÈô§ÊâæÂà∞ÁöÑÁ¨¨‰∏Ä‰∏™value,Ê≤°ÊúâËøîÂõûValueErrorreverse()‚ÄìÂ∞ÜÈòüÂàóÈÄÜÂ∫èÊéíÂ∫èÔºåËøîÂõûNonerotate(n)‚ÄìÂêëÂè≥Âæ™ÁéØÁßªÂä®NÊ≠•ÔºåÂ¶ÇÊûúÊòØË¥üÊï∞ÔºåÂ∞±ÂêëÂ∑¶Âæ™ÁéØ1234567891011121314151617181920212223242526272829303132# from collections import dequeq = deque('123', maxlen=3)# q.insert(0, 55)# print(q)# ÂèëÁîüÂºÇÂ∏∏: IndexError# deque already at its maximum sizeprint(q.popleft())# 1q.appendleft('2')# deque(['2', '2', '3'], maxlen=3)q.remove('2')# deque(['2', '3'], maxlen=3)print(q.reverse())# Noneprint( q)# deque(['3', '2'], maxlen=3)q1 = deque([1,2,3,4])print(q1)q1.rotate(2)print(q1)# deque([1, 2, 3, 4])# deque([3, 4, 1, 2]) Â∫îÁî®ÈôêÈïøÁöÑdequeÊèê‰æõ‰∏Ä‰∏™ËøáÊª§ÂäüËÉΩÊâìÂºÄÊñá‰ª∂ÁöÑÂùëÔºöÂèØËÉΩÊòØÁî±‰∫évscodeÁöÑÈÖçÁΩÆÁöÑpythonÁéØÂ¢ÉÈóÆÈ¢òÔºåÂú®Êú¨Ê¨°‰æãÂ≠ê‰∏≠ÔºåcwdÁöÑË∑ØÂæÑÂ∫îËØ•ÊòØ d:\pythonÂ≠¶‰π†\pythonÊï∞ÊçÆÁªìÊûÑÔºåÂØºËá¥ÊñáÊú¨Êñá‰ª∂ÁöÑÁõ∏ÂØπË∑ØÂæÑÈóÆÈ¢ò„ÄÇÊú¨Êù•Âú®Âêå‰∏Ä‰∏™ÁõÆÂΩïÁöÑpyÊñá‰ª∂ÂíåÊñáÊú¨Êñá‰ª∂ÔºåÊñá‰ª∂ÂêçÁöÑÁõ∏ÂØπË∑ØÂæÑÁõ¥Êé•ÂÜô‰∏äÊñá‰ª∂ÂêçÂ∞±Â•Ω‰∫Ü„ÄÇ 1234567# Ê≥®ÊÑè‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ∞±ÊòØÂêØÂä®pythonËøõÁ®ãÁöÑÂΩìÂâçË∑ØÂæÑÔºåË¶ÅÊ†πÊçÆËøô‰∏™Ë∑ØÂæÑËøõË°åÂÜôÊñá‰ª∂ÁöÑÁõ∏ÂØπË∑ØÂæÑf = open('pythonÊï∞ÊçÆÁªìÊûÑ/1.txt')import oscwd = os.getcwd()print(cwd)# d:\pythonÂ≠¶‰π†print(os.path.dirname(__file__)) #ÂΩìÂâçËÑöÊú¨ÊâÄÂú®ÁõÆÂΩïÁöÑÁªùÂØπË∑ØÂæÑ 1234567891011121314from collections import dequedef tail(filename, n=10): 'Return the last n lines of a file' with open(filename) as f: return deque(f, n)a = tail('pythonÊï∞ÊçÆÁªìÊûÑ/1.txt')print(a)"""ÁªìÊûúÔºöËøîÂõû‰∫ÜÊñá‰ª∂ÁöÑÊúÄÂêé10Ë°åÔºåÊàëÊÉ≥Â∫îËØ•ÊòØÁõ∏ÂΩì‰∫éÊòØÂõ†‰∏∫Áî±‰∫éÈôêÈïøÔºåÁõ∏ÂΩì‰∫éappendÊñπÊ≥ïÁöÑÂéüÁêÜdeque(['444\n', '5555\n', '666666\n', '77777\n', '88888\n', '9999999\n', 'AAAAAAAAAAA\n', 'BBBBBBBBBBBBBBB\n', 'CCCCCCCCCCCCCCCCCC\n', 'DDDDDDDDDDDDDDDDDDDD'], maxlen=10)ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . ."""]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁîüÊàêÂô®‰∏éËø≠‰ª£Âô®]]></title>
    <url>%2Fpython%E7%94%9F%E6%88%90%E5%99%A8%E4%B8%8E%E8%BF%AD%E4%BB%A3%E5%99%A8%2F</url>
    <content type="text"><![CDATA[ÁîüÊàêÂô® ÂÆö‰πâÔºöË∞ÉÁî®‰∏ÄÊ¨°ÔºåÂè™ÁîüÊàê‰∏Ä‰∏™ÂÄºÁöÑÁâπÊÆäÂáΩÊï∞Ôºõ Â¶ÇÊûú‰∏Ä‰∏™ÂáΩÊï∞‰∏≠Âê´ÊúâyiledÂÖ≥ÈîÆÂ≠óÔºåËøô‰∏™ÂáΩÊï∞Â∞±Êàê‰∫ÜÁîüÊàêÂô®ÔºåÂè™‰ºöÂú®nextÊñπÊ≥ïÁöÑË∞ÉÁî®‰∏ãÊâßË°åÔºåÈÅáÂà∞yelidÁªìÊùüÂáΩÊï∞ÔºåÂπ∂ËøîÂõûyiledÂêéÈù¢ÊâÄË∑üÁöÑÂÄº ‰∫ßÁîüÁîüÊàêÂô®ÁöÑÊñπÊ≥ï_next_()Ôºåsend()ÔºåÈÉΩÊòØÂêØÂä®ÁîüÊàêÂô®Ôºå‰ΩÜÊòØsend‰ºöyieldËøîÂõû‰∏Ä‰∏™ÂÄºÔºåÂç≥ÊòØyield=sendÁöÑÂèÇÊï∞ÔºåËÄå__next__ÊñπÊ≥ïÂàô‰∏ç‰ºö‰º†ÂÄºÔºåÊàñËÄÖ‰º†None; Ê≥®ÊÑèyieldÂú®‰∏Ä‰∏™ÂáΩÊï∞‰∏≠ÔºåÈÇ£‰πàËøô‰∏™ÂáΩÊï∞Â∞±ÊòØ‰∏Ä‰∏™ÁîüÊàêÂô®Ôºå‰æãÂ¶Ça = f()ÔºåËøôÊó∂aÊòØ‰∏Ä‰∏™ÁîüÊàêÂô®ÂØπË±°ÁöÑÂÆû‰æãÔºåÈúÄË¶Åa.__next__()ÊàñËÄÖa.send(args)ÔºåÂêØÂä®ÁîüÊàêÂô®ÔºåÁ¨¨‰∏ÄÊ¨°ÂêØÂä®ÔºåsendÁöÑÂèÇÊï∞Â∫î‰∏∫None 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# ÂàóË°®ÁîüÊàêÂºèa = [i*2 for i in range(10)]print(a)# [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]# ‰∫ßÁîü‰∏Ä‰∏™ÁîüÊàêÂô®ÂèØ‰ª•Â∞ÜÂàóË°®ÁîüÊàêÂºèÁöÑ[]ÊîπÊàêÔºàÔºâ# Ë∞ÉÁî®Ëøô‰∏™ÁîüÊàêÂô®,ÁîüÊàêÁöÑÊï∞ÊçÆÂπ∂‰∏çÊòØ‰∏ÄÊ¨°Â≠òÊîæÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÔºå# Âè™ÊúâÂΩìËøô‰∏™Êï∞ÊçÆÂæ™ÁéØÊàñËÄÖ__next__()Âà∞Ëøô‰∏™Êï∞ÊçÆÊó∂Êâç‰ºöÁîüÊàêb = (i*2 for i in range(10))print(b)# &lt;generator object &lt;genexpr&gt; at 0x000001D667CF3840&gt;print(next(b))print(b.__next__())print("begin loop\n")for i in b: print(i) # 0# 2# begin loop# 4# 6# 8# 10# 12# 14# 16# 18# ÁîüÊàêÂô®ÂÆûÁé∞Ë£¥Ê≥¢ÈÇ£Â•ësÊï∞Âàó# yieldÁöÑ‰ΩúÁî®Â∞±ÊòØ‰∏Ä‰∏™ÂáΩÊï∞ÂèòÊàê‰∏Ä‰∏™ÁîüÊàêÂô®ÔºåË∞ÉÁî®fo(10)‰∏ç‰ºöÊâßË°åfoÂáΩÊï∞ÔºåËÄåÊòØËøîÂõû‰∏Ä‰∏™ÂèØËø≠‰ª£ÂØπË±°# ÊØèÊ¨°ÊâßË°åÂà∞yieldËØ≠Âè•Êó∂ÔºåÂ∞±‰ºöËøîÂõû‰∏Ä‰∏™ÂèØËø≠‰ª£ÂÄºÔºåÁÑ∂ÂêéÁ®ãÂ∫èËøêË°åÂ∞±‰ºöÂÅúÁïôÂú®yieldËØ≠Âè•ËøôÈáåÔºåÁÑ∂ÂêéÈÄÄÂá∫Ëøô‰∏™foÂáΩÊï∞Ôºå‰∏ãÊ¨°# Áî®__next__()ÊñπÊ≥ïË∞ÉÁî®Ëøô‰∏™ÂèØËø≠‰ª£ÂÄºÔºåÂ∞±‰ºöÂõûÂà∞yieldÁöÑ‰∏ã‰∏ÄÂè•ËØ≠Âè•ÔºåÁÑ∂ÂêéÁªßÁª≠ÊâßË°åfoÂáΩÊï∞ÔºåÁõ¥Âà∞ÈÅáÂà∞‰∏ã‰∏Ä‰∏™yieldËØ≠Âè•# ÂΩìÂáΩÊï∞ÊâßË°åÁªìÊùüÊó∂Ôºågenerator Ëá™Âä®ÊäõÂá∫ StopIteration ÂºÇÂ∏∏ÔºåË°®Á§∫Ëø≠‰ª£ÂÆåÊàê„ÄÇ# Âú® for Âæ™ÁéØÈáåÔºåÊó†ÈúÄÂ§ÑÁêÜ StopIteration ÂºÇÂ∏∏ÔºåÂæ™ÁéØ‰ºöÊ≠£Â∏∏ÁªìÊùü„ÄÇ"""def fo(number): i,a,b=0, 0, 1 while i &lt; number: yield b a,b=b,a+b i = i+1 return "ÊàëÊòØfoÂáΩÊï∞ÁöÑËøîÂõûÂÄº"c = fo(10)print(c)# &lt;generator object fo at 0x0000023382C33750&gt;while True: try: print(c.__next__(), end=" ") except StopIteration as e: # asÂÆö‰πâÂºÇÂ∏∏ÂÆû‰æã print("Â∑≤Áªè10‰∏™Êï∞‰∫Ü", e.value) break# 1 1 2 3 5 8 13 21 34 55 Â∑≤Áªè10‰∏™Êï∞‰∫Ü ÊàëÊòØfoÂáΩÊï∞ÁöÑËøîÂõûÂÄº""" Ëø≠‰ª£Âô® ÂèØËø≠‰ª£ÂØπË±° iterable ‚ÄîÂèØ‰ª•ËøõË°åforÂæ™ÁéØÁöÑÂØπË±°Ôºå‰æãÂ¶ÇÂàóË°®ÔºåÂÖÉÁªÑ„ÄÇ„ÄÇ„ÄÇ Ëø≠‰ª£Âô® iterator ‚ÄîÂèØ‰ª•Ë¢´next()ÂáΩÊï∞Ë∞ÉÁî®Âπ∂‰∏çÊñ≠ËøîÂõû‰∏ã‰∏Ä‰∏™ÂÄºÁöÑÂØπË±° 1234567891011# ÂØºÂÖ•Ê®°ÂùóÔºåÂèØËÉΩÊòØÁâàÊú¨ÈóÆÈ¢òÔºåcollectionsÂä†‰∏ä.abcfrom collections.abc import Iterable,Iteratorprint(isinstance([], Iterable))# True# ÂÜÖÁΩÆÊñπÊ≥ïÔºåÂ∞ÜÂèØËø≠‰ª£ÂØπË±°ËΩ¨ÊàêËø≠‰ª£Âô® iter()print(isinstance(iter([]), Iterator))# True#]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÂáΩÊï∞ÂèÇÊï∞]]></title>
    <url>%2Fpython%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%2F</url>
    <content type="text"><![CDATA[ÂáΩÊï∞ÂèÇÊï∞ÁöÑÁ±ªÂûã ÂøÖÈúÄÂèÇÊï∞ ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞ ÈªòËÆ§ÂèÇÊï∞ ‰∏çÂÆöÈïøÂèÇÊï∞ ÂøÖÈúÄÂèÇÊï∞Ë∞ÉÁî®Êó∂‰º†ÂÖ•ÁöÑÂèÇÊï∞ÁöÑ‰∏™Êï∞È°ªÂíåÂ£∞ÊòéÊó∂ÁöÑÂèÇÊï∞‰∏™Êï∞‰∏ÄÊ†∑ÔºåÂπ∂‰∏î‰º†ÂÖ•ÁöÑÈ°∫Â∫èÈúÄË¶Å‰∏ÄËá¥Ôºå‰∏Ä‰∏ÄÂØπÂ∫î„ÄÇ 123456789101112def f(a,b): print("ÂáΩÊï∞ÂèÇÊï∞ÁöÑÂÄº‰∏∫&#123;&#125;,&#123;&#125;".format(a,b))f(1,5)list1 = [2,3]f(*list1) # Âú®Ë∞ÉÁî®ÂáΩÊï∞Êó∂Âú®ÂèÇÊï∞‰∏≠Âä†‰∏™*ÊòØÂ∞ÜÂàóË°®„ÄÅÂÖÉÁªÑËΩ¨ÊàêÂ§ö‰∏™ÂèÇÊï∞# ÊâßË°åÁªìÊûúÔºö# ÂáΩÊï∞ÂèÇÊï∞ÁöÑÂÄº‰∏∫1,5# ÂáΩÊï∞ÂèÇÊï∞ÁöÑÂÄº‰∏∫2,3# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞‰ΩøÁî®ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞ÂÖÅËÆ∏‰º†ÂÖ•ÂèÇÊï∞ÁöÑÈ°∫Â∫è‰∏éÂ£∞ÊòéÊó∂‰∏ç‰∏ÄËá¥ÔºåÂõ†‰∏∫pythonËß£ÈáäÂô®ËÉΩÂ§üÊ†πÊçÆÂèÇÊï∞ÂêçÂåπÈÖçÂèÇÊï∞ÂÄº 12345678910# ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞def f1(name, age): print("ÊàëÁöÑÂêçÂ≠óÔºö&#123;&#125;ÔºåÊàëÁöÑÂπ¥ÈæÑÔºö&#123;&#125;".format(name,age))f1(age=18, name="ÈôàÂ∞èÂùö")# ÊâßË°åÁªìÊûúÔºö# ÊàëÁöÑÂêçÂ≠óÔºöÈôàÂ∞èÂùöÔºåÊàëÁöÑÂπ¥ÈæÑÔºö18# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . ÈªòËÆ§ÂèÇÊï∞Ë∞ÉÁî®ÂáΩÊï∞Êó∂ÔºåÂ¶ÇÊûúÂáΩÊï∞Ê≤°ÊúâÊ≤°Êúâ‰º†ÈÄíÂèÇÊï∞ÔºåÂ∞±‰ºö‰ΩøÁî®ÈªòËÆ§ÂèÇÊï∞ ÊÄªÁªìÔºöÂ∏¶ÈªòËÆ§ÂÄºÁöÑÂèÇÊï∞ÂøÖÈ°ªÊîæÂú®Ê≤°ÊúâÈªòËÆ§ÂÄºÁöÑÂèÇÊï∞ÂêéÈù¢ÔºåÂ¶ÇÊûú‰∏çËøôÊ†∑ÂÅöÔºåÂèØËÉΩ‰ºö‰∫ßÁîüÊ≠ß‰πâÔºåÁ®ãÂ∫èerror 123456789101112131415161718192021222324# ÈªòËÆ§ÂèÇÊï∞# error code"""def f2(name='ÈôàÂ∞èÂùö', age): print("ÊàëÁöÑÂêçÂ≠óÔºö&#123;&#125;ÊàëÁöÑÂπ¥ÈæÑÔºö&#123;&#125;")f2("Êô®Êô®Èôà",20)"""def f2(age,name='ÈôàÂ∞èÂùö'): print("ÊàëÁöÑÂêçÂ≠óÔºö&#123;&#125;\nÊàëÁöÑÂπ¥ÈæÑÔºö&#123;&#125;".format(name,age))f2(20, "ÈôàÈôàÈôà")print("----------------")f2(20)# Á®ãÂ∫èÁªìÊûúÔºö# ÊàëÁöÑÂêçÂ≠óÔºöÈôàÈôàÈôà# ÊàëÁöÑÂπ¥ÈæÑÔºö20# ----------------# ÊàëÁöÑÂêçÂ≠óÔºöÈôàÂ∞èÂùö# ÊàëÁöÑÂπ¥ÈæÑÔºö20 ‰∏çÂÆöÈïøÂèÇÊï∞ÂáΩÊï∞Ë∞ÉÁî®Êó∂‰º†ÂÖ•ÁöÑÂèÇÊï∞ÊØîÂ£∞ÊòéÊó∂ÁöÑÂèÇÊï∞Â§öÔºå‰∏§‰∏™Âü∫Êú¨ËØ≠Ê≥ï Â∏¶*ÊòüÂè∑ÁöÑÂèÇÊï∞‰ºö‰ª•ÂÖÉÁªÑÁöÑÂΩ¢ÂºèÂØºÂÖ•ÔºåÂ≠òÊîæ‰∏Ä‰∫õÂ§öÁöÑÔºåÊ≤°ÊúâÂëΩÂêçÁöÑÂèÇÊï∞ Â∏¶**ÁöÑÂèÇÊï∞Âàô‰ºö‰ª•Â≠óÂÖ∏ÁöÑÂΩ¢ÂºèÂ§ÑÁêÜ 123456789101112131415161718192021222324252627282930313233343536# ‰∏çÂÆöÈïøÂèÇÊï∞def f3(a, b, *c): print(a) print(b) print(c)list2=[1,2,3,4,5,6,7,8]f3(1,3,1,2,3,4,5)print("\n")f3(1,4) # Â¶ÇÊûú‰∏ç‰º†ÂÖ•Á¨¨3‰∏™ÂèÇÊï∞ÔºåÂàôÈªòËÆ§‰º†ÂÖ•‰∏Ä‰∏™Á©∫ÂÖÉÁªÑprint("\n")f3(1,2,list1)print("\n")f3(1,2,*list1) # Â∞ÜÂàóË°®ËΩ¨ÊàêÂ§ö‰∏™ÂèÇÊï∞‰º†ÂÖ•# ÊâßË°åÁªìÊûúÔºö# 1# 3# (1, 2, 3, 4, 5)# 1# 4# ()# 1# 2# ([2, 3],)# 1# 2# (2, 3)# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . 123456789101112131415# ÊÄªÁªìÔºö‰ª•Â≠óÂÖ∏‰º†ÂÖ•ÂèÇÊï∞Êó∂ÔºåÂ¶ÇÊûúÂÆûÂèÇÊ≤°Êúâkey=ValueËøô‰∏™ÂΩ¢ÂºèÁöÑÂèÇÊï∞‰æãÂ¶ÇÔºöf4(1,2,3)Ôºå‰ºöÈªòËÆ§Â∞ÜËøô‰∫õÂÆûÂèÇ‰º†Áªô# ‰æãÂ≠ê‰∏≠ÁöÑa,ÁÑ∂ÂêéÂá∫Áé∞ÈîôËØØ,Âõ†‰∏∫aÊé•Âèó‰∫ÜÂ§ö‰∏™ÂèÇÊï∞def f4(a, **arg): print(a) #‰∏çÊåáÂÆöÂèÇÊï∞ÁöÑËØùÔºåÂ∞±ÊòØ‰∏Ä‰∏™Á©∫Â≠óÂÖ∏ print(arg)print("ÊâßË°åÁªìÊûúÔºö")f4(1)f4(1,a1=4, b=9, c="ÈôàÂ∞èÂùö")# ÊâßË°åÁªìÊûúÔºö# 1# &#123;&#125;# 1# &#123;'a1': 4, 'b': 9, 'c': 'ÈôàÂ∞èÂùö'&#125;# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . Â£∞ÊòéÂáΩÊï∞Êó∂ÔºåÂèØ‰ª•ÂçïÁã¨Âá∫Áé∞Ôºå‰ΩÜÊòØÂú®‰º†ÂÖ•ÂèÇÊï∞ÁöÑÊó∂ÂÄôÔºåÂêéÈù¢ÁöÑÂèÇÊï∞ÈúÄË¶Å‰ª•ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞ÁöÑÂΩ¢Âºè‰º†ÂÖ• 1234567# ÁâπÊÆäÊÉÖÂÜµÔºödef f5(a,b,*,d): return a+b+dprint(f5(1,2,d=4))# 7 ÂØπ*Âíå**ÁöÑ‰ΩøÁî®ÊñπÊ≥ïÁöÑÊÄªÁªìÔºö ÂΩ¢ÂèÇÂä†*ÔºåÂú®Ë∞ÉÁî®ÂáΩÊï∞Êó∂ÂèØ‰ª•Â∞Ü‰º†ÂÖ•ÁöÑÂ§ö‰∏™ÂèÇÊï∞ËΩ¨Êç¢Êàê‰∏Ä‰∏™ÂÖÉÁªÑÔºõÂÆûÂèÇÂä†*ÔºåÂèØ‰ª•Â∞Ü‰º†ÂÖ•ÁöÑÂàóË°®ÊàñËÄÖÂÖÉÁªÑËΩ¨Êç¢ÊàêÂ§ö‰∏™ÂèÇÊï∞ 123456789101112131415161718192021222324def f1(a,b,*c): print(a) print(b) print(c)f1(99,88,77,66,55,44,33)# 99# 88# (77, 66, 55, 44, 33)# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .def f2(a,b,c,d): print(a) print(b) print(c) print(d)list1 = [2,3,4]f2(0,*list1)# 0# 2# 3# 4# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . ÂΩ¢ÂèÇÂä†**ÔºåÂú®Ë∞ÉÁî®ÂáΩÊï∞Êó∂ÂèØ‰ª•Â∞Ü‰º†ÂÖ•ÁöÑÂ§ö‰∏™ÈîÆÂÄºÂØπËΩ¨Êç¢Êàê‰∏Ä‰∏™Â≠óÂÖ∏ÔºõÂÆûÂèÇÂ∞Ü**ÔºåÂèØ‰ª•Â∞Ü‰º†ÂÖ•ÁöÑÂ≠óÂÖ∏ËΩ¨ÊàêÂ§ö‰∏™ÈîÆÂÄºÂØπÔºåÁõ∏ÂΩì‰∫é‰ª•ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞‰º†ÁªôÂΩ¢ÂèÇ 123456789101112131415161718192021def f3(a,b,**c): print(a) print(b) print(c)f3(1,2,d=3,f=4,m="ÈôàÂ∞èÂùö")# 1# 2# &#123;'d': 3, 'f': 4, 'm': 'ÈôàÂ∞èÂùö'&#125;def f4(name, age, sex): print("ÊàëÁöÑÂêçÂ≠ó:&#123;&#125;\nÊàëÁöÑÂπ¥ÈæÑÔºö&#123;&#125;\nÊàëÁöÑÊÄßÂà´Ôºö&#123;&#125;".format(name,age,sex))dict1= dict(name="ÈôàÂ∞èÂùö", age=18,sex="Áî∑")f4(**dict1)# ÊàëÁöÑÂêçÂ≠ó:ÈôàÂ∞èÂùö# ÊàëÁöÑÂπ¥ÈæÑÔºö18# ÊàëÁöÑÊÄßÂà´ÔºöÁî∑# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonË£ÖÈ•∞Âô®]]></title>
    <url>%2Fpython%E8%A3%85%E9%A5%B0%E5%99%A8%2F</url>
    <content type="text"><![CDATA[Ë£ÖÈ•∞Âô®ÔºöÊú¨Ë¥®Â∞±ÊòØ‰∏Ä‰∏™ÂáΩÊï∞ ‰∏ç‰ºö‰øÆÊîπË¢´Ë£ÖÈ•∞ÂáΩÊï∞ÁöÑÊ∫ê‰ª£Á†Å ‰∏ç‰ºö‰øÆÊîπË¢´Ë£ÖÈ•∞ÂáΩÊï∞ÁöÑË∞ÉÁî®ÊñπÂºè ÂÆûÁé∞Ë£ÖÈ•∞Âô®ÁöÑÂâçÊèêÁü•ËØÜ ÂáΩÊï∞Âç≥ÊòØ‚ÄùÂèòÈáè‚ÄúÔºåÂèòÈáèÂêçÂÖ∂ÂÆûÁõ∏ÂΩì‰∫éÈó®ÁâåÂè∑ÔºåÂÖ∂ÂÆûÂ∞±ÊòØÂØπÂØπË±°ÁöÑÂºïÁî®ÔºåÁÑ∂ÂêéÂéªÂÜÖÂ≠ò‰∏≠Ê†πÊçÆÂèòÈáèÂêçÊâæÂà∞ÂØπË±°Ôºõ ËÄåpythonÁöÑÂÜÖÂ≠òÂõûÊî∂Êú∫Âà∂Â∞±ÊòØÂΩì‰∏Ä‰∏™ÂØπË±°Ê≤°ÊúâÊ≤°Áî®Ë¢´ÂºïÁî®Êó∂ÔºåpythonÂ∞±‰ºöËá™Âä®Âú∞ÈáäÊîæËøô‰∏™ÂØπË±°ÁöÑÂÜÖÂ≠òÁ©∫Èó¥ÔºõÊâÄ‰ª•ÂΩìÊàë‰ª¨Áî®delÂà†Èô§‰∏Ä‰∏™ÂèòÈáèÔºå‰æãÂ¶Çx,Âè™ÊòØÂà†Èô§xÂØπ1Ëøô‰∏™ÂØπË±°ÁöÑÂºïÁî®ÔºåÂΩì1Ê≤°ÊúâË¢´ÂºïÁî®Êó∂ÔºåÂ∞±‰ºöÈáäÊîæ1Âï¶Ôºõ Ê≠§Â§ñÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÊâìÂç∞‰∏Ä‰∏™ÂáΩÊï∞ÂêçÔºåÁªìÊûúÊòØËøô‰∏™ÂáΩÊï∞Âú®ÂÜÖÂ≠òÁöÑÂú∞ÂùÄ 12345678910111213141516def f(): print("Ëøô‰∏™ÊòØfÂáΩÊï∞") f1()def f1(): print("ËøôÊòØ‰∏™f1ÂáΩÊï∞")f()# Ëøô‰∏™ÊòØfÂáΩÊï∞# ËøôÊòØ‰∏™f1ÂáΩÊï∞# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .# ÊÄªÁªìÔºöf()ÂáΩÊï∞Ë¢´Ë∞ÉÁî®Êó∂ÔºåÈ¶ñÂÖàÊâßË°åPrintËØ≠Âè•ÔºåÁÑ∂ÂêéÊâßË°åf1()ÔºåÂ∞±ÂéªÂÜÖÂ≠ò‰∏≠Êâæ‚ÄúÈó®ÁâåÂè∑"‰∏∫f1ÁöÑ‚ÄùÂèòÈáè‚Äú# Âç≥ÊòØÔºöÂè™Ë¶Åf1()Âè™Ë¶ÅÂ∑≤ÁªèË¢´ÂÆö‰πâÔºåÂ≠òÂú®ÂÜÖÂ≠ò‰∏≠ÔºåÂú®f()ÂáΩÊï∞Ë∞ÉÁî®‰πãÂâç# Ëøô‰∏™Ë∑üc/c++ÊúâÊâÄ‰∏çÂêå È´òÈò∂ÂáΩÊï∞Ôºö Êää‰∏Ä‰∏™ÂáΩÊï∞ÂêçÂΩìÂÅöÂÆûÂèÇ‰º†ÁªôÂè¶Â§ñ‰∏Ä‰∏™ÂáΩÊï∞ ËøîÂõûÂÄº‰∏≠ÂåÖÂê´ÂáΩÊï∞Âêç 123456789101112131415161718192021222324252627282930# È´òÈò∂ÂáΩÊï∞# ÂÅöÂáΩÊï∞ÂèÇÊï∞def f1(fune): print(fune) fune()def f2(): print("hahah")f1(f2)# ÁªìÊûúÔºö# &lt;function f2 at 0x000001316AB9B9D8&gt;# hahah# ÊÄªÁªìÔºöÂáΩÊï∞ÂêçÂÖ∂ÂÆû‰πüÊòØ‰∏Ä‰∏™ÂèòÈáèÔºå‰πüÊòØÂèØ‰ª•‰Ωú‰∏∫ÂèÇÊï∞ËøõË°å‰º†ÈÄíÁöÑÔºåÊâìÂç∞ÂáΩÊï∞ÂêçÁöÑÁªìÊûúÂ∞±ÊòØËøô‰∏™ÂáΩÊï∞ÁöÑÂÜÖÂ≠òÂú∞ÂùÄ# ÂÅöËøîÂõûÂÄºdef f3(): print("Ëøô‰∏™ÊòØÂáΩÊï∞f3") return f3a = f3()a()# ÁªìÊûúÔºö# Ëøô‰∏™ÊòØÂáΩÊï∞f3# Ëøô‰∏™ÊòØÂáΩÊï∞f3 ÂµåÂ•óÂáΩÊï∞‚Äî‚ÄîÂú®‰∏Ä‰∏™ÂáΩÊï∞ÁöÑÂáΩÊï∞‰ΩìÂÜÖÁî®defÂ£∞Êòé‰∏Ä‰∏™ÂáΩÊï∞ ÈúÄË¶ÅÊ≥®ÊÑèÂ±ÄÈÉ®‰ΩúÁî®ÂüüÂíåÂÖ®Â±Ä‰ΩúÁî®Âüü ÂáΩÊï∞‰ΩìÁöÑÂÜÖÂÆπÂè™ÊúâÂú®Ë∞ÉÁî®Êó∂Êâç‰ºöË¢´ÊâßË°å 123456789101112131415161718192021222324252627282930# ÂµåÂ•óÂáΩÊï∞def f4(): def f5(): print("ÊàëÊòØf5ÂáΩÊï∞") return f5 f5() return f5b = f4()b()print(b)# ÊâßË°åÁªìÊûúÔºö# ÊàëÊòØf5ÂáΩÊï∞# ÊàëÊòØf5ÂáΩÊï∞# &lt;function f4.&lt;locals&gt;.f5 at 0x000002576940CBF8&gt;##################################################def f6(): print("Ëøô‰∏™ÊòØf6") def f7(): print("Ëøô‰∏™ÊòØf7")f6()# ÊâßË°åÁªìÊûúÔºö# Ëøô‰∏™ÊòØf6# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .# ÊÄªÁªìÔºöÈúÄË¶ÅÊ≥®ÊÑèÂ±ÄÈÉ®‰ΩúÁî®ÂüüÔºåf7Ëøô‰∏™ÂáΩÊï∞ÂÆÉÂè™Âú®f6Ëøô‰∏™ÂáΩÊï∞ÁöÑÂáΩÊï∞‰ΩìÂÜÖÂ≠òÂú®‰ΩúÁî® Ë£ÖÈ•∞Âô®ÂÆûÁé∞Ê†∑‰æãÔºö12345678910111213141516171819202122232425262728293031323334353637# ÈóÆÈ¢òÔºöÁªôf()ÂáΩÊï∞Â¢ûÂä†Á®ãÂ∫èÊâßË°åÊó∂Èó¥ËÆ°ÁÆóÁöÑÂäüËÉΩ„ÄÇimport timedef deco(fune): def count_time(): start_time = time.time() fune() end_time = time.time() print("ÂáΩÊï∞ÊâßË°åÁöÑÊó∂Èó¥‰∏∫&#123;&#125;".format(end_time-start_time)) return count_time @decodef f(): time.sleep(3) print("ÊàëÊòØfÂáΩÊï∞")@decodef f1(): time.sleep(3) print("ÊàëÊòØf1ÂáΩÊï∞")# f = deco(f) #ÂèØ‰ª•ÊîπÊàê‚Äú@Ë£ÖÈ•∞Âô®‚Äùf()f1()# ÊâßË°åÁªìÊûú# ÊàëÊòØfÂáΩÊï∞# ÂáΩÊï∞ÊâßË°åÁöÑÊó∂Èó¥‰∏∫3.0018532276153564# ÊàëÊòØf1ÂáΩÊï∞# ÂáΩÊï∞ÊâßË°åÁöÑÊó∂Èó¥‰∏∫3.0000414848327637# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .# ÊÄªÁªìÔºöÈúÄË¶ÅÊ≥®ÊÑèË£ÖÈ•∞Âô®ÂáΩÊï∞ÈúÄË¶ÅÂ£∞ÊòéÂú®Ë¢´Ë£ÖÈ•∞ÂáΩÊï∞ÁöÑÂâçÈù¢ÔºåÂõ†‰∏∫@decoÂ∞±ÊòØÁõ∏ÂΩì‰∫éf = deco(f),# Â¶ÇÊûú‰∏çËøôÊ†∑ÂÅöÁöÑËØùÔºåpythonËß£ÈáäÂô®ËøêË°åÂà∞@deco,Â∞±‰ºöËµ∑Ë∞ÉÁî®Ëøô‰∏™decoÂáΩÊï∞Ôºå‰Ω†Âæó‰øùËØÅÂÜÖÂ≠ò‰∏≠Â∑≤ÁªèÂÆö‰πâÂ•Ω# Ëøô‰∏™decoÂáΩÊï∞ ÂÆûÁé∞Ê†∑‰æãÂ≠òÂú®ÈóÆÈ¢òÔºöÂáΩÊï∞ËøîÂõûÂÄºÁöÑÈóÆÈ¢ò‰∏é‰∏çÂêåÂáΩÊï∞‰ºöÊúâ‰∏çÂêåÁöÑÂèÇÊï∞12345678910111213141516171819202122232425262728293031323334353637383940414243444546# Â≠òÂú®ÈóÆÈ¢òÔºåÂ¶ÇÊûúË£ÖÈ•∞ÁöÑÂáΩÊï∞Â≠òÂú®‰∏çÂêåÁöÑÂáΩÊï∞ÂèÇÊï∞ÁöÑ‰∏™Êï∞Ôºåimport timedef deco(fune): def calculater_time(*args1, **args2): start_time = time.time() funtion_return_values = fune(*args1, **args2) # Êñ∞Â¢û‰ª£Á†ÅÔºåËß£ÂÜ≥Âä†‰∏äË£ÖÈ•∞Âô®ÂáΩÊï∞ÁöÑËøîÂõûÂÄºÈóÆÈ¢ò end_time = time.time() print("Á®ãÂ∫èËøêË°åÁöÑÊó∂Èó¥‰∏∫%s" %(end_time-start_time)) return funtion_return_values # Êñ∞Â¢û‰ª£Á†ÅÔºåËß£ÂÜ≥Âä†‰∏äË£ÖÈ•∞Âô®ÂáΩÊï∞ÁöÑËøîÂõûÂÄºÈóÆÈ¢ò return calculater_time@decodef test1(): time.sleep(2) print("Á®ãÂ∫èÊâßË°åtest1") return "ÊàëÊòØtest1ÁöÑËøîÂõûÂÄº"@decodef test2(a): time.sleep(2) print("Á®ãÂ∫èÊâßË°åtest1,Âπ∂‰∏î‰º†ÂÖ•‰∏Ä‰∏™ÂèÇÊï∞‰∏∫&#123;&#125;".format(a))@decodef test3(name, age): time.sleep(2) print("ÂêçÂ≠óÔºö&#123;&#125;, Âπ¥ÈæÑÔºö&#123;&#125;".format(name,age))# Ë∞ÉÁî®Ôºöres = test1()test2("ÈôàÂ∞èÂùö")test3(1, age=18) #Ë£ÖÈ•∞Âô®‰∏çÂΩ±ÂìçÂéüÊù•ÁöÑË∞ÉÁî®ÊñπÂºèprint("Ë°®Èù¢Ë∞ÉÁî®test1ÁöÑËøîÂõûÂÄºÔºö&#123;&#125;".format(res)) # Ë°®Èù¢Ë∞ÉÁî®test1ÁöÑËøîÂõûÂÄºÔºöNone# Êú¨Êù•Â∫îÂΩìËøîÂõû "ÊàëÊòØtest1ÁöÑËøîÂõûÂÄº",‰ΩÜÊòØÂç¥ËøîÂõûNoneÔºåÂõ†‰∏∫Ëøô‰∏™test1Âú®Ë∞ÉÁî®Êó∂ÂÖ∂ÂÆûÂ∑≤Áªè‰∏çÊòØtest1,# calculater_timeÂáΩÊï∞ÁöÑÂáΩÊï∞‰ΩìÂÜÖÂÖ∂ÂÆûÂ∑≤Áªètest1Â∑≤ÁªèËøîÂõû"ÊàëÊòØtest1ÁöÑËøîÂõûÂÄº"Ôºå‰ΩÜÊòØÂç¥Ê≤°Êúâ‰∫∫Êé•ÂèóÔºåÊâÄ‰ª•Ë£ÖÈ•∞Âô®ËøòÂèØ‰ª•Âú®‰øÆÊîπ# Á®ãÂ∫èÊâßË°åtest1# Á®ãÂ∫èËøêË°åÁöÑÊó∂Èó¥‰∏∫2.002197504043579# Á®ãÂ∫èÊâßË°åtest1,Âπ∂‰∏î‰º†ÂÖ•‰∏Ä‰∏™ÂèÇÊï∞‰∏∫ÈôàÂ∞èÂùö# Á®ãÂ∫èËøêË°åÁöÑÊó∂Èó¥‰∏∫2.004718065261841# ÂêçÂ≠óÔºö1, Âπ¥ÈæÑÔºö18# Á®ãÂ∫èËøêË°åÁöÑÊó∂Èó¥‰∏∫2.0046701431274414# Ë°®Èù¢Ë∞ÉÁî®test1ÁöÑËøîÂõûÂÄºÔºöÊàëÊòØtest1ÁöÑËøîÂõûÂÄº# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . Â≠òÂú®ÈúÄÊ±ÇÔºöÊ†πÊçÆË£ÖÈ•∞Âô®ÁöÑÂèÇÊï∞ÁöÑ‰∏çÂêåÔºåÈÄâÊã©‰∏çÂêåÁöÑÊâßË°åÊñπÂºèËß£ÂÜ≥ÔºöÂú®‰∏äÈù¢ÁöÑÂü∫Á°Ä‰∏äÂú®Â§ñÂ±ÇÂä†‰∏ä‰∏Ä‰∏™ÂáΩÊï∞ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546# Â≠òÂú®ÈúÄÊ±ÇÔºåÂ¶ÇÊûúÊ†πÊçÆË£ÖÈ•∞Âô®ÁöÑ‰∏çÂêåÂèÇÊï∞ÔºåÊâßË°å‰∏çÂêåÁöÑ‰ª£Á†Å,‰æãÂ¶ÇÁôªÂΩïÁ≥ªÁªü‰∏≠Ôºå‰∏çÂêåÁöÑËÆ§ËØÅÊñπÂºè# ‰∫ãÂÖàËÆæÁΩÆÁî®Êà∑Âêçusername="ÈôàÂ∞èÂùö"password="123"def deco(auth_type): def deco_inside(func): def auth_funtion(*agrs1, **agrs2): if auth_type=="local": username1 = input("input your name:").strip() password1 = input("input your password:").strip() if username==username1 and password==password1: print("welcome &#123;&#125;,login in sucessfully!!".format(username1)) func() else: print("error: valiavd username or password") else: print("‰Ω†‰∏çÊòØÂú®Êú¨Âú∞ÁôªÂΩïÁöÑÔºÅÔºÅÔºÅ") return auth_funtion return deco_inside@deco(auth_type="local")def home(): print("welcome to home page!!")@deco(auth_type="foreign")def about(): print("welcome to about page!!")# ÂÖ∂ÂÆûÂ∞±ÊòØÂú®Âä†‰∫Ü‰∏ÄÂ±ÇÔºåÂè™‰∏çËøáÊâßË°åÈ°∫Â∫èËøòÊòØË¶ÅÊ≥®ÊÑèhome()#ËøêË°åÈ°∫Â∫èÔºåÈ¶ñÂÖàÂ∞Ülocal‰º†ÈÄíÁªôauth_typeÔºåÁÑ∂ÂêéËøîÂõûreturn deco_inside,ËøôÊ†∑Â∞±‰ºöÂéªÊâßË°ådeco_inside(func)---&gt;&gt;Áõ∏# ÂΩì‰∫éhome=deco_inside(home),home--&gt;func,ËÄåËøô‰∏™deco_insideÂáΩÊï∞ËøîÂõûauth_funtionÁªôhomeËµãÂÄºÔºå# ‰∫éÊòØhome()--&gt;auth_funtion()about()# Á®ãÂ∫èÊâßË°åÁªìÊûúÔºö# input your name:ÈôàÂ∞èÂùö# input your password:123# welcome ÈôàÂ∞èÂùö,login in sucessfully!!# welcome to home page!!# ‰Ω†‰∏çÊòØÂú®Êú¨Âú∞ÁôªÂΩïÁöÑÔºÅÔºÅÔºÅ# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . .]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÊ®°Âùó]]></title>
    <url>%2Fpython%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÂØπpythonÊ®°ÂùóÁöÑÁêÜËß£ ÂØºÂÖ•ÊñπÂºèÔºö‰ΩøÁî®importËØ≠Âè• pythonËß£ÈáäÂô®Â¶Ç‰ΩïÊâæÂà∞ÊâÄÈúÄÁöÑÊ®°ÂùóÔºåÁ¨¨‰∏ÄÈ°πÊòØÁ©∫‰∏≤Ôºå‰ª£Ë°®ÂΩìÂâçÁõÆÂΩï 12import sysprint(sys.path) from ... import *Êää‰∏Ä‰∏™Ê®°ÂùóÁöÑÊâÄÊúâÂÜÖÂÆπÂÖ®ÈÉ®ÂØºÂÖ•Âà∞ÂΩìÂâçÁöÑÂëΩÂêçÁ©∫Èó¥‰∏≠Ôºå‰ΩÜÊòØ‰∏çÂª∫ËÆÆËøáÂ§öÁöÑ‰ΩøÁî® ÊØè‰∏™Ê®°ÂùóÈÉΩÊúâ‰∏Ä‰∏™__name__Â±ûÊÄßÔºåÂΩìÂÖ∂ÂÄºÊòØ__main__Êó∂ÔºåË°®ÊòéËØ•Ê®°ÂùóËá™Ë∫´Âú®ËøêË°åÔºåÂê¶ÂàôÊòØË¢´ÂºïÂÖ•ÁöÑ dir()ÂáΩÊï∞ÂèØ‰ª•ÊâæÂà∞Ê®°ÂùóÂÜÖÂÆö‰πâÁöÑÊâÄÊúâÂêçÁß∞ ÂåÖÔºöÁÆ°ÁêÜpythonÊ®°ÂùóÂëΩÂêçÁ©∫Èó¥ÁöÑÂΩ¢ÂºèÔºåÂú®ÂåÖÁöÑÁõÆÂΩï‰∏≠Êúâ‰∏Ä‰∏™__init__.pyÁöÑÊñá‰ª∂ÔºåËøô‰∏™ÁõÆÂΩïÊâç‰ºöËÆ§‰∏∫ÊòØÂåÖÔºå__init__.pyÊñá‰ª∂ÂèØ‰ª•‰∏∫Á©∫Ôºå‰πüÂèØ‰ª•ÂÆö‰πâ__all__ = [&#39;Á±ªÂêçÊàñËÄÖÊñπÊ≥ïÂêç&#39;,&#39;&#39;,&#39;&#39;]ÔºåËøôÊ†∑‰ΩøÁî®from ÂåÖÂêç import * Â∞±Âè™‰ºöÂØºÂÖ•__all__‰∏≠ÂÆö‰πâÁöÑÊ®°ÂùóÂêç 1.ÂÆûÁé∞Á±ª‰ººËøõÂ∫¶Êù°ÁöÑÊñπÊ≥ï12345678import sys, timefor i in range(20): sys.stdout.write('#') # ‰∏çÊç¢Ë°åÁöÑËæìÂá∫ sys.stdout.flush() # Âà∑Êñ∞ÁºìÂÜ≤Âå∫ time.sleep(0.5) # ÂáΩÊï∞Êé®ËøüË∞ÉÁî®Á∫øÁ®ãÁöÑËøêË°å# ÂÆûÁé∞Á±ª‰ººËøõÂ∫¶Êù°ÁöÑÊïàÊûú 2.ËæìÂá∫python3Êñá‰ª∂ÁöÑÈªòËÆ§ÁºñÁ†Å12345import sysprint(sys.getdefaultencoding# python3‰∏≠Â≠óÁ¨¶ÁöÑÁºñÁ†ÅÊ†ºÂºèÈªòËÆ§ÊòØUnicodeÔºåÂ¶ÇÊûúgbkÁºñÁ†ÅÁöÑÊñá‰ª∂Ë¶ÅÂú®utf-8ÊòæÁ§∫Ôºå Ê≠•È™§ÔºåÂÖàdecode('gbk').encode('utf-8') Âç≥ÊòØgbk--&gt;Unicode--&gt;utf-8 3.ËæìÂá∫utcÊó∂Èó¥12import datetimeprint(daetime.datetime.utcnow())]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÊú™Ëß£ÂÜ≥ÈóÆÈ¢ò&&ÈóÆÈ¢òÂêàÈõÜ]]></title>
    <url>%2Fpython%E6%9C%AA%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[python‰∏≠Êñá‰ª∂ËØªÂÜôÔºåÂØπ‰∫éËã±ÊñáÂ≠óÁ¨¶ÁöÑÊñá‰ª∂ÂÜÖÂÆπÔºåËØªÊÑèÂë≥ÁùÄÊñá‰ª∂ÊåáÈíàÁßªÂä®‰∏Ä‰∏™Ôºå‰πüÂ∞±ÊòØËØ¥Êñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆË∑üÊâÄËØªÁöÑÂ≠óÁ¨¶‰∏™Êï∞Áõ∏Á≠âÔºå‰ΩÜÊòØÂØπ‰∫é‰∏≠ÊñáÂ≠óÁ¨¶ÔºåÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆË∑üËá™Â∑±ÊÉ≥Ë±°ÁöÑ‰∏çÂêåËß£ÂÜ≥ÔºöÈ¶ñÂÖàÁü•ÈÅìÊñá‰ª∂ÁºñÁ†ÅËã±ÊñáÂíåÊ±âÂ≠óÊâÄÂç†ÁöÑÂ≠óËäÇ‰∏™Êï∞Ëã±ÊñáÂ≠óÊØçÔºö¬∑Â≠óËäÇÊï∞ : 1;ÁºñÁ†ÅÔºöGB2312 Â≠óËäÇÊï∞ : 1;ÁºñÁ†ÅÔºöGBK Â≠óËäÇÊï∞ : 1;ÁºñÁ†ÅÔºöGB18030 Â≠óËäÇÊï∞ : 1;ÁºñÁ†ÅÔºöISO-8859-1 Â≠óËäÇÊï∞ : 1;ÁºñÁ†ÅÔºöUTF-8 Â≠óËäÇÊï∞ : 4;ÁºñÁ†ÅÔºöUTF-16 Â≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöUTF-16BE Â≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöUTF-16LE ‰∏≠ÊñáÊ±âÂ≠óÔºöÂ≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöGB2312 Â≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöGBK Â≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöGB18030 Â≠óËäÇÊï∞ : 1;ÁºñÁ†ÅÔºöISO-8859-1 Â≠óËäÇÊï∞ : 3;ÁºñÁ†ÅÔºöUTF-8 Â≠óËäÇÊï∞ : 4;ÁºñÁ†ÅÔºöUTF-16 Â≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöUTF-16BE Â≠óËäÇÊï∞ : 2;ÁºñÁ†ÅÔºöUTF-16LE 12345678910111213141516171819f = open('test1.txt', 'r', encoding='utf-8')print("ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö", f.tell())# 0data = f.read(10)print("ËØªÂá∫ÁöÑÂ≠óÁ¨¶‰∏≤ÁöÑÂÜÖÂÆπ‰∏∫Ôºö", data)print(type(data))print("ËØªÂá∫Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶Ôºö", len(data))print("ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö", f.tell())f.close()# ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö 0# ËØªÂá∫ÁöÑÂ≠óÁ¨¶‰∏≤ÁöÑÂÜÖÂÆπ‰∏∫Ôºö ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùö# &lt;class 'str'&gt;# ËØªÂá∫Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶Ôºö 10# ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö 30# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . ËØªÂèñÊñá‰ª∂ÁöÑ10‰∏™Ê±âÂ≠óÔºåÁÑ∂ÂêéÊñá‰ª∂ÊåáÈíàÁßªÂä®Âà∞‰∫Ü30ÁöÑ‰ΩçÁΩÆÔºåËØ¥Êòé‰∫Üread()ÂáΩÊï∞ÊòØËØªÂèñÂ≠óÁ¨¶‰∏™Êï∞ÔºåËÄåÊâÄËØªÂèñÁöÑÂ≠óÁ¨¶ÈÉΩÊòØÊ±âÂ≠óÔºåÂç†3‰∏™Â≠óËäÇÔºåÂõ†‰∏∫ÊòØutf-8ÁöÑÁºñÁ†Å ÊÄªÁªìÔºöseek()ÁßªÂä®ÁöÑÊòØÂ≠óËäÇÊï∞Ôºåread()ËØªÂèñÁöÑÊòØÂ≠óÁ¨¶ÁöÑ‰∏™Êï∞ ËØªÂèñcsvÊñá‰ª∂È¶ñ‰∏™ÂÖÉÁ¥†Âá∫Áé∞\ufeffÁöÑÂ≠óÁ¨¶ÔºåÂéüÂõ†ÊòØÁî±‰∫éÂú®utf-8ÁºñÁ†ÅÊñá‰ª∂‰∏≠BOMÂú®Êñá‰ª∂Â§¥ÈÉ®ÔºåÂç†Áî®‰∏â‰∏™Â≠óËäÇÔºåÁî®Êù•Ê†áÁ§∫ËØ•Êñá‰ª∂Â±û‰∫éutf-8ÁºñÁ†ÅÔºåÊâìÂºÄÊñá‰ª∂ÁöÑÁºñÁ†ÅÁî®utf-8-sigË°®Á§∫Â∏¶Ê†áËÆ∞ÁöÑutf-8ÁºñÁ†Å]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÂáΩÊï∞]]></title>
    <url>%2Fpython%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[pythonÂáΩÊï∞:ËøîÂõûÂÄºÊï∞‰∏∫0Êó∂ÔºåËøîÂõûNone,Â§ß‰∫é1Êó∂ÔºåËøîÂõûÂÖÉÁªÑ„ÄÇ È´òÈò∂ÂáΩÊï∞ strip() ÊñπÊ≥ï Áî®‰∫éÁßªÈô§Â≠óÁ¨¶‰∏≤Â§¥Â∞æÊåáÂÆöÁöÑÂ≠óÁ¨¶ÔºàÈªòËÆ§‰∏∫Á©∫Ê†ºÊàñÊç¢Ë°åÁ¨¶ÔºâÊàñÂ≠óÁ¨¶Â∫èÂàó„ÄÇ Ê≥®ÊÑèÔºöËØ•ÊñπÊ≥ïÂè™ËÉΩÂà†Èô§ÂºÄÂ§¥ÊàñÊòØÁªìÂ∞æÁöÑÂ≠óÁ¨¶Ôºå‰∏çËÉΩÂà†Èô§‰∏≠Èó¥ÈÉ®ÂàÜÁöÑÂ≠óÁ¨¶„ÄÇ 12345str1 = "0000‰Ω†Â•Ω0000"print(str1.strip('0'))# ÊâßË°åÁªìÊûú# ‰Ω†Â•Ω# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . enumerate()ÊñπÊ≥ï enumerate() ÂáΩÊï∞Áî®‰∫éÂ∞Ü‰∏Ä‰∏™ÂèØÈÅçÂéÜÁöÑÊï∞ÊçÆÂØπË±°(Â¶ÇÂàóË°®„ÄÅÂÖÉÁªÑÊàñÂ≠óÁ¨¶‰∏≤)ÁªÑÂêà‰∏∫‰∏Ä‰∏™Á¥¢ÂºïÂ∫èÂàóÔºåÂêåÊó∂ÂàóÂá∫Êï∞ÊçÆÂíåÊï∞ÊçÆ‰∏ãÊ†áÔºå‰∏ÄËà¨Áî®Âú® for Âæ™ÁéØÂΩì‰∏≠„ÄÇ Â¶ÇÊûúÁ¨¨‰∫å‰∏™ÂèÇÊï∞‰∏çÊåáÂÆöÁöÑËØùÔºåÈªòËÆ§‰∏ãÊ†á‰ªé0ÂºÄÂßãÔºåÂê¶ÂàôÊåâÁÖßÂèÇÊï∞ÁöÑÂÄº‰Ωú‰∏∫Ëµ∑Âßã‰∏ãÊ†á 12345678910111213list1 = ['ÂìàÂìà','ÂóØÂóØ','ÂòøÂòø','È¢ùÈπÖÈπÖÈπÖ']for index, i in enumerate(list1, 6): print(index,i)list2 = list(enumerate(list1))print(list2)# 6 ÂìàÂìà# 7 ÂóØÂóØ# 8 ÂòøÂòø# 9 È¢ùÈπÖÈπÖÈπÖ# [(0, 'ÂìàÂìà'), (1, 'ÂóØÂóØ'), (2, 'ÂòøÂòø'), (3, 'È¢ùÈπÖÈπÖÈπÖ')]# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . isinstance(obj,type) Âà§Êñ≠‰∏Ä‰∏™ÂØπË±°ÊòØÂ±û‰∫é‰ªÄ‰πàÁ±ªÂûãÔºåËøîÂõûÂÄº‰∏∫boolÂÄº 1234567891011121314class animals(): def run(self): print("Âä®Áâ©Ê≠£Âú®Â•îË∑ë")class cat(animals): def run(self): print("Â∞èÁå´Ê≠£Âú®Â•îË∑ë")cat1 = cat()cat1.run()# Â∞èÁå´Ê≠£Âú®Â•îË∑ëprint(isinstance(cat1, animals))# True join()ÂáΩÊï∞ÔºöÂèØ‰ª•Â∞ÜÂàóË°®ÔºåÂÖÉÁªÑÔºåÂ≠óÁ¨¶‰∏≤‰∏≠ÁöÑÂÖÉÁ¥†Áî®ÊåáÂÆöÁöÑÂÖÉÁ¥†ËøûÊé•Ëµ∑Êù• 123output = '\t'.join(['name', 'age', 'gender'])print(output)# name age gender]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PythonÊñá‰ª∂Êìç‰Ωú]]></title>
    <url>%2Fpython%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[Êñá‰ª∂Êìç‰ΩúÁöÑ‰∏â‰∏™Ê≠•È™§ ÊâìÂºÄÊñá‰ª∂ Êìç‰ΩúÊñá‰ª∂ ÂÖ≥Èó≠Êñá‰ª∂ Êñá‰ª∂ÊâìÂºÄÊ®°Âºè rÔºöopen()ÊñπÊ≥ï‰∏çÊåáÂÆöÁöÑÊó∂ÂÄôÔºåÈªòËÆ§ÊòØÂè™ËØªÊ®°Âºè wÔºöÊâìÂºÄ‰∏Ä‰∏™Êñá‰ª∂ËøõË°åÂÜôÂÖ•ÔºåÂ¶ÇÊûúÊñá‰ª∂Â≠òÂú®ÔºåÂàôÊâìÂºÄÊñá‰ª∂Âπ∂‰ªéÂ§¥ÁºñËæëÔºåÂ¶ÇÊûúÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàô‰ºöÂàõÂª∫Êñ∞ÁöÑÊñá‰ª∂ aÔºöÊâìÂºÄ‰∏Ä‰∏™Êñá‰ª∂ËøõË°åËøΩÂä†ÂÜôÔºå‰πüÂ∞±ÊòØËØ¥ÔºåËøôÁßçÊ®°Âºè‰∏çËÉΩËøõË°åËØªÊñá‰ª∂Ôºå‰∏îÂ¶ÇÊûúÊñá‰ª∂Â≠òÂú®ÔºåÊñá‰ª∂ÊåáÈíàÂ∞±‰ºöÊåáÂêëÊñá‰ª∂ÁöÑÊú´Â∞æÔºåËøôÊ†∑ÂÜôÊñá‰ª∂Êó∂Â∞±‰ºöÂ∞ÜÂ≠óÁ¨¶‰∏≤ÂÜôÂú®Êñá‰ª∂ÁöÑÊú´Â∞æÔºõËã•Êñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàô‰ºöÂàõÈÄ†‰∏Ä‰∏™Êñ∞Êñá‰ª∂ r+ÔºöËØªÂÜôÊ®°ÂºèÔºåÊâìÂºÄ‰∏Ä‰∏™Êñá‰ª∂ÔºåÂπ∂ËøΩÂä†ÂÜô 1.open()ÊñπÊ≥ï1234567f = open("test1.txt", encoding="utf-8").read()print(f)# &lt;_io.TextIOWrapper name='test1.txt' mode='r' encoding='cp936'&gt;# open()Â¶ÇÊûú‰∏çÊåáÂÆöÊâìÂºÄÊ®°ÂºèÔºåÈªòËÆ§ÊòØ‰ª•Âè™ËØªÊâìÂºÄ# Ê≠§Â§ñË¶ÅÊ≥®ÊÑèÊñá‰ª∂ÁöÑÁºñÁ†ÅÊñπÂºè# Â¶ÇÊûúÊñá‰ª∂ÊòØÁî®utf-8ÁºñÁ†ÅÁöÑÔºåÈÇ£‰πàÂ¶ÇÊûú‰∏çÊåáÂÆö‰ª•‰ªÄ‰πàÁºñÁ†ÅÊñπÂºèÊâìÂºÄÔºåÂèØËÉΩÂ∞±‰ºöÈªòËÆ§‰ª•Á≥ªÁªüÊâìÂºÄÊñá‰ª∂ÁöÑÊñπÂºèÊâìÂºÄÔºåÂú®windowsÁ≥ªÁªü‰∏äÈÄöÂ∏∏Áî®GBKÊñπÂºèÊâìÂºÄÊñáÊú¨Êñá‰ª∂„ÄÇ‰ΩÜÊòØGBKÊòØ‰∏çËÉΩËß£Êûêutf-8. 2.read()ÊñπÊ≥ï‚Äã Áî®‰∫é‰ªéÊñá‰ª∂ËØªÂèñÊåáÂÆöÁöÑÂ≠óÁ¨¶‰∏™Êï∞ÔºåÂ¶ÇÊûúÊú™ÁªôÂÆöÊàñ‰∏∫Ë¥üÂàôËØªÂèñÊâÄÊúâ„ÄÇ 123456789f = open("test1.txt", encoding="utf-8")data1 = f.read()data2 = f.read()print(data1," ----", data2)# Á®ãÂ∫èÊâßË°åÁªìÊûúÔºö# ÂìàÂìàÂìà ÂïäÂïäÂïä ----# ÁªìÊûúÊòæÁ§∫data2‰∏∫Á©∫ÔºåËØ¥ÊòéÁ¨¨‰∏ÄÊ¨°ËØªÊñá‰ª∂ÁöÑÊó∂ÂÄôÔºåËØªÂÆå‰πãÂêéÊñá‰ª∂ÊåáÈíàÊåáÂêë‰∫ÜÊñá‰ª∂ÁöÑÊú´Â∞æÔºåÊâÄ‰ª•Á¨¨‰∫åÊ¨°Â∞±Ê≤°ÊúâËØªÂà∞‰ªª‰Ωï‰∏úË•ø 1234567f = open("test1.txt",encoding="utf-8")data1 = f.read(2)print(data1)# Á®ãÂ∫èÊâßË°åÁªìÊûú# ÂìàÂìà# ËØ¥Êòé‰∫ÜÊ±âÂ≠óÂú®ËøôÈáåÊòØÁÆó‰∏Ä‰∏™Â≠óÁ¨¶ÁöÑ 3.write()ÊñπÊ≥ï‚Äã Â∞ÜÂ≠óÁ¨¶‰∏≤ÂÜôÂÖ•Êñá‰ª∂ÔºåÂπ∂‰∏îËøîÂõûÂÜôÂÖ•Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶„ÄÇÂú®Êñá‰ª∂ÂÖ≥Èó≠ÂâçÊàñËÄÖÁºìÂÜ≤Âå∫Âà∑Êñ∞ÂâçÔºåÂ≠óÁ¨¶‰∏≤ÁöÑÂÜÖÂÆπÊòØÂ≠òÊîæÂú®ÁºìÂÜ≤Âå∫‰∏≠ÔºåËøôÊó∂Âú®Êñá‰ª∂ÂÜÖÊòØÁúã‰∏çÂà∞Â≠óÁ¨¶‰∏≤ÁöÑ„ÄÇ 1234f = open("test1.txt",'w',encoding="utf-8")print(f.write("ÊàëÊòØÈôàÂ∞èÂùö"))# Á®ãÂ∫èÊâßË°åÁªìÊûú# 5 Ê≥®ÊÑèÔºåÂ¶ÇÊûúÊòØwbÊ®°ÂºèÊâìÂºÄÊñá‰ª∂ÁöÑËØùÔºåÂç≥‰∫åËøõÂà∂ÂÜôÊñá‰ª∂ÔºåÈÇ£‰πàÂ≠óÁ¨¶‰∏≤Ë¶ÅËΩ¨Êç¢‰∏∫bytesÂΩ¢ÂºèÔºàÂ≠óËäÇÔºâ Ê≠§Â§ñÔºå‰ª•wbÊ®°ÂºèÊâìÂºÄÊñá‰ª∂Ôºå‰∏çËÉΩÊåáÂÆöencodingÁºñÁ†ÅÊñπÂºèÔºåÂ¶ÇÊûúÊåáÂÆöÂàô‰ºöÊä•Èîô binary mode doesn&#39;t take an encoding argument 1234567f = open("test1.txt",'wb')print(f.write("ÊàëÈôàÂ∞èÂùö".encode(encoding='utf-8')))print("ÊàëÈôàÂ∞èÂùö".encode(encoding='utf-8'))# ÊµãËØïÁªìÊûú# 12# b'\xe6\x88\x91\xe9\x99\x88\xe5\xb0\x8f\xe5\x9d\x9a' 123456789# ËøΩÂä†ÊñπÂºèÊâìÂºÄÂ≠óÁ¨¶‰∏≤f = open("test1.txt", 'a', encoding="utf-8")print(f.write("ÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ"))# ÊµãËØïÁªìÊûú# 12"""Êñá‰ª∂ÂÜÖÂÆπÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ""" 4.readlin()ÊñπÊ≥ï‚Äã ËØªÂèñÊñá‰ª∂ÁöÑ‰∏ÄË°åÔºåÂåÖÊã¨Êç¢Ë°åÁ¨¶ 12345678910111213141516f = open("test1.txt",'r',encoding='utf-8')for i in range(5): print(f.readline())# Á®ãÂ∫èÊâßË°åÁªìÊûú# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà1ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà2ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà3ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà4ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . 5.readlines()ÊñπÊ≥ï‚Äã ËøîÂõû‰∏Ä‰∏™ÂàóË°®ÔºåÂàóË°®ÁöÑÊØè‰∏™ÂÖÉÁ¥†ÊòØÊñá‰ª∂‰∏ÄË°åÁöÑÊï∞ÊçÆÔºåÂåÖÊã¨Êç¢Ë°åÁ¨¶ Âè™ÊòØÈÄÇÁî®ËØªÂ∞èÊñá‰ª∂ 123456789f = open("test1.txt",'r',encoding='utf-8')# data = f.readlines()# print(data)# # ÊâßË°åÁªìÊûú""" ['ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôà1ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôà2ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôà3 ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôà4ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôà5ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôà6ÂùöÂìàÂìàÂìà ÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ\n', 'ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ'] """ 123456789101112131415161718192021222324252627282930313233343536# ÊïàÁéá‰ΩéÁöÑÂæ™ÁéØf = open("test1.txt",'r',encoding='utf-8')for i in f.readlines(): print(i.strip())# Áî±‰∫éreadlinesËøîÂõû‰∏Ä‰∏™ÂàóË°®ÔºåÂπ∂‰∏îÂàóË°®‰∏≠ÁöÑÂÖÉÁ¥†ÊòØÂ≠óÁ¨¶‰∏≤ÂΩ¢ÂºèÔºåÊâÄ‰ª•Ë∞ÉÁî®str.strip(),Áî®‰∫éÂéªÈô§Â§¥Â∞æÁöÑÁ©∫Ê†ºÊàñËÄÖÊç¢Ë°åÁ¨¶# ÊâßË°åÁªìÊûú# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà1ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà2ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà3ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà4ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà5ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà6ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# --------------------------------------------#È´òÊïàÁöÑÂæ™ÁéØÊñπÂºèÔºåÂ∞ÜÊñá‰ª∂ÂØπË±°‰Ωú‰∏∫Ëø≠‰ª£Âô®‰ΩøÁî®f = open("test1.txt",'r',encoding='utf-8')for line in f: print(line.strip())# lineÂØπË±°ÊòØstrÁ±ªÂûã# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà1ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà2ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà3ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà4ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà5ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôà6ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ 6.tell()ÊñπÊ≥ïËøîÂõûÊñá‰ª∂ÁöÑÂΩìÂâç‰ΩçÁΩÆÔºåÂç≥ÊòØÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºå‰ΩçÁΩÆÊòØÊåâÁÖßÂ≠óÁ¨¶ÁÆóÁöÑ 123456789101112131415161718f = open('test1.txt', 'r', encoding='utf-8')print("ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö", f.tell())# 0data = f.read(10)print("ËØªÂá∫ÁöÑÂ≠óÁ¨¶‰∏≤ÁöÑÂÜÖÂÆπ‰∏∫Ôºö", data)print(type(data))print("ËØªÂá∫Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶Ôºö", len(data))print("ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö", f.tell())f.close()# ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö 0# ËØªÂá∫ÁöÑÂ≠óÁ¨¶‰∏≤ÁöÑÂÜÖÂÆπ‰∏∫Ôºö ÊàëÈôàÂ∞èÂùöÂìàÂìàÂìàÈôàÂ∞èÂùö# &lt;class 'str'&gt;# ËØªÂá∫Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶Ôºö 10# ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö 30# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . 7.seek()ÊñπÊ≥ïÁî®‰∫éÁßªÂä®Êñá‰ª∂ËØªÂèñÊåáÈíàÂà∞ÊåáÂÆö‰ΩçÁΩÆ„ÄÇ Á¨¨‰∏Ä‰∏™ÂèÇÊï∞‚ÄìÂºÄÂßãÁöÑÂÅèÁßªÈáèÔºå‰πüÂ∞±ÊòØ‰ª£Ë°®ÈúÄË¶ÅÁßªÂä®ÂÅèÁßªÁöÑÂ≠óËäÇÊï∞ÔºåÂ¶ÇÊûúÊòØË¥üÊï∞Ë°®Á§∫‰ªéÂÄíÊï∞Á¨¨Âá†‰ΩçÂºÄÂßã Á¨¨‰∫å‰∏™ÂèÇÊï∞‚ÄìÈªòËÆ§ÊòØ0.0Ë°®Á§∫ÂΩìÂâç‰ΩçÁΩÆÔºå1Ë°®Á§∫Êñá‰ª∂Â§¥Ôºå2Ë°®Á§∫Êñá‰ª∂Â∞æ 123456789101112131415f = open('test1.txt', 'r', encoding='utf-8')# f.seek(10) # Âá∫Áé∞utf-8ÁºñÁ†ÅÈîôËØØÔºåÈ¶ñÂÖàÊñáÊú¨Êñá‰ª∂ÁöÑÁºñÁ†ÅÊñπÂºèÊòØutf-8ÔºåÊâÄ‰ª•ÂèØËÉΩÊòØÊñá‰ª∂ÊåáÈíàÁßªÂä®Âà∞10‰∏™Â≠óËäÇÔºåÂâçÊèêÊù°‰ª∂ÊòØÊàë‰ª¨ÁöÑÊñá‰ª∂ÊòØutf-8ÁºñÁ†Å# ÁÑ∂Âêé‰∏Ä‰∏™Ê±âÂ≠óÂç†3‰∏™Â≠óËäÇÔºå‰ΩÜÊòØ‰Ω†Êñá‰ª∂ÊåáÈíàÁßªÂä®10‰∏™Â≠óËäÇÔºåÂØºËá¥ÊåáÈíàÁßªÂä®ÂêéÊâÄÂú®ÁöÑ‰ΩçÁΩÆÂä†‰∏äÂêéÈù¢‰∏Ä‰∏™Â≠óËäÇÁöÑÂÜÖÂÆπ‰∏çÊòØutf-8ÊâÄ# ÁºñÁ†ÅÁöÑÂÜÖÂÆπÔºå‰ªéËÄåÁºñÁ†ÅÈîôËØØ# Âè™ÈúÄseek()ÂèÇÊï∞ÊòØ3ÁöÑÂÄçÊï∞Â∞±‰∏ç‰ºöÂá∫Áé∞ÈóÆÈ¢òf.seek(9)print("ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö", f.tell())data = f.readline()print("ËØªÂèñÁöÑÂÜÖÂÆπ‰∏∫Ôºö", data.strip())# ÂΩìÂâçÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºö 9# ËØªÂèñÁöÑÂÜÖÂÆπ‰∏∫Ôºö ÂùöÂìàÂìàÂìàÈôàÂ∞èÂùöÊòØ‰∏™ÁôΩÁó¥ÔºÅÔºÅ# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . 8.encodingËøîÂõûÊñá‰ª∂ÁöÑÁºñÁ†ÅÊñπÂºè 1234f = open('test1.txt', 'r', encoding='utf-8')print(f.encoding)# utf-8# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . 9.name‚ÄìËøîÂõûÊñá‰ª∂ÁöÑÂêçÂ≠ó10.flush()ÊñπÊ≥ïflush() ÊñπÊ≥ïÊòØÁî®Êù•Âà∑Êñ∞ÁºìÂÜ≤Âå∫ÁöÑÔºåÂç≥Â∞ÜÁºìÂÜ≤Âå∫‰∏≠ÁöÑÊï∞ÊçÆÁ´ãÂàªÂÜôÂÖ•Êñá‰ª∂ÔºåÂêåÊó∂Ê∏ÖÁ©∫ÁºìÂÜ≤Âå∫Ôºå‰∏çÈúÄË¶ÅÊòØË¢´Âä®ÁöÑÁ≠âÂæÖËæìÂá∫ÁºìÂÜ≤Âå∫ÂÜôÂÖ•„ÄÇ ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÊñá‰ª∂ÂÖ≥Èó≠Âêé‰ºöËá™Âä®Âà∑Êñ∞ÁºìÂÜ≤Âå∫Ôºå‰ΩÜÊúâÊó∂‰Ω†ÈúÄË¶ÅÂú®ÂÖ≥Èó≠ÂâçÂà∑Êñ∞ÂÆÉÔºåËøôÊó∂Â∞±ÂèØ‰ª•‰ΩøÁî® flush() ÊñπÊ≥ï„ÄÇ 11.truncate()ÊñπÊ≥ïÂèÇÊï∞ÂèØÈÄâÔºåÂ¶ÇÊûúÊåáÂÆöÂèÇÊï∞ÔºåÂ∞±ÊòØ‰ªéÂèÇÊï∞ÊâÄÂú®ÁöÑ‰ΩçÁΩÆÂºÄÂßãÊà™Êñ≠ÔºåÂèÇÊï∞ÊòØÊåâÁÖßÂ≠óËäÇÁöÑÂ§ßÂ∞èËøõË°å‰øùÁïôÁöÑ Windows‰∏ãÊç¢Ë°åÁ¨¶Âç†‰∏§‰∏™Â≠óËäÇ 1234567f = open('test1.txt', 'r+', encoding='utf-8')f.truncate(25)# Êñá‰ª∂ÁªìÊûúÔºö‰Ω†Â•ΩÂïäÂïäÂïäÂïäÂïä12# Âõ†‰∏∫Ëøô‰∏™Êñá‰ª∂ÊòØutf-8ÁºñÁ†ÅÁöÑÔºå7‰∏™Ê±âÂ≠óÂç†‰∫Ü21‰∏™Â≠óËäÇÔºåÁÑ∂ÂêéWindows‰∏ãÊç¢Ë°åÁ¨¶Âç†‰∏§‰∏™Â≠óËäÇÔºåÊï∞Â≠óËã±Êñáutf-8Âç†‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÊâÄ‰ª•Êà™Êñ≠ÂêéÊñá‰ª∂‰øùÁïôÁöÑÂÜÖÂÆπÂ∞±ÊòØËøô‰∏™Âç†‰∫Ü25‰∏™Â≠óËäÇÁöÑÂÜÖÂÆπ# Ê≠§Â§ñËøòÂ∫îÂΩìÊ≥®ÊÑèÊñá‰ª∂ÁöÑÊâìÂºÄÊ®°ÂºèÔºår+ËØªÂÜôÊ®°ÂºèÔºåÂ¶ÇÊûúwÊ®°ÂºèÊâìÂºÄÔºåÂàôÊñá‰ª∂ÂÜÖÂÆπÂèòÊàê‰∫åËøõÂà∂ÁöÑ„ÄÇ„ÄÇ„ÄÇ]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ceshi]]></title>
    <url>%2Fceshi%2F</url>
    <content type="text"></content>
      <categories>
        <category>OJ</category>
        <category>leetcode</category>
        <category>ÁÆóÊ≥ï</category>
        <category>Ê†ë</category>
      </categories>
      <tags>
        <tag>hh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ¥õË∞∑„Äëp3952Êó∂Èó¥Â§çÊùÇÂ∫¶]]></title>
    <url>%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P3952%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÊèèËø∞Â∞èÊòéÊ≠£Âú®Â≠¶‰π†‰∏ÄÁßçÊñ∞ÁöÑÁºñÁ®ãËØ≠Ë®Ä A++ÔºåÂàöÂ≠¶‰ºöÂæ™ÁéØËØ≠Âè•ÁöÑ‰ªñÊøÄÂä®Âú∞ÂÜô‰∫ÜÂ•ΩÂ§öÁ®ãÂ∫èÂπ∂ ÁªôÂá∫‰∫Ü‰ªñËá™Â∑±ÁÆóÂá∫ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÔºåÂèØ‰ªñÁöÑÁºñÁ®ãËÄÅÂ∏àÂÆûÂú®‰∏çÊÉ≥‰∏Ä‰∏™‰∏Ä‰∏™Ê£ÄÊü•Â∞èÊòéÁöÑÁ®ãÂ∫èÔºå ‰∫éÊòØ‰Ω†ÁöÑÊú∫‰ºöÊù•Âï¶ÔºÅ‰∏ãÈù¢ËØ∑‰Ω†ÁºñÂÜôÁ®ãÂ∫èÊù•Âà§Êñ≠Â∞èÊòéÂØπ‰ªñÁöÑÊØè‰∏™Á®ãÂ∫èÁªôÂá∫ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØÂê¶Ê≠£Á°Æ„ÄÇ A++ËØ≠Ë®ÄÁöÑÂæ™ÁéØÁªìÊûÑÂ¶Ç‰∏ãÔºö 123F i x y Âæ™ÁéØ‰ΩìE ÂÖ∂‰∏≠F i x yË°®Á§∫Êñ∞Âª∫ÂèòÈáè iiiÔºàÂèòÈáè iii ‰∏çÂèØ‰∏éÊú™Ë¢´ÈîÄÊØÅÁöÑÂèòÈáèÈáçÂêçÔºâÂπ∂ÂàùÂßãÂåñ‰∏∫ xxxÔºå ÁÑ∂ÂêéÂà§Êñ≠ iii Âíå yyy ÁöÑÂ§ßÂ∞èÂÖ≥Á≥ªÔºåËã• iii Â∞è‰∫éÁ≠â‰∫é yyy ÂàôËøõÂÖ•Âæ™ÁéØÔºåÂê¶Âàô‰∏çËøõÂÖ•„ÄÇÊØèÊ¨°Âæ™ÁéØÁªìÊùüÂêé iii ÈÉΩ‰ºöË¢´‰øÆÊîπÊàê i+1i +1i+1Ôºå‰∏ÄÊó¶ iii Â§ß‰∫é yyy ÁªàÊ≠¢Âæ™ÁéØ„ÄÇ xxx Âíå yyy ÂèØ‰ª•ÊòØÊ≠£Êï¥Êï∞Ôºàxxx Âíå yyy ÁöÑÂ§ßÂ∞èÂÖ≥Á≥ª‰∏çÂÆöÔºâÊàñÂèòÈáè nnn„ÄÇnnn ÊòØ‰∏Ä‰∏™Ë°®Á§∫Êï∞ÊçÆËßÑÊ®°ÁöÑÂèòÈáèÔºåÂú®Êó∂Èó¥Â§çÊùÇÂ∫¶ËÆ°ÁÆó‰∏≠ÈúÄ‰øùÁïôËØ•ÂèòÈáèËÄå‰∏çËÉΩÂ∞ÜÂÖ∂ËßÜ‰∏∫Â∏∏Êï∞ÔºåËØ•Êï∞ËøúÂ§ß‰∫é 100100100„ÄÇ ‚ÄúE‚ÄùË°®Á§∫Âæ™ÁéØ‰ΩìÁªìÊùü„ÄÇÂæ™ÁéØ‰ΩìÁªìÊùüÊó∂ÔºåËøô‰∏™Âæ™ÁéØ‰ΩìÊñ∞Âª∫ÁöÑÂèòÈáè‰πüË¢´ÈîÄÊØÅ„ÄÇ Ê≥®ÔºöÊú¨È¢ò‰∏≠‰∏∫‰∫Ü‰π¶ÂÜôÊñπ‰æøÔºåÂú®ÊèèËø∞Â§çÊùÇÂ∫¶Êó∂Ôºå‰ΩøÁî®Â§ßÂÜôËã±ÊñáÂ≠óÊØç‚ÄúO‚ÄùË°®Á§∫ÈÄöÂ∏∏ÊÑè‰πâ‰∏ã‚ÄúŒò‚ÄùÁöÑÊ¶ÇÂøµ„ÄÇ ËæìÂÖ•Ê†ºÂºèËæìÂÖ•Êñá‰ª∂Á¨¨‰∏ÄË°å‰∏Ä‰∏™Ê≠£Êï¥Êï∞ tttÔºåË°®Á§∫Êúâ tttÔºàt‚â§10t \le 10t‚â§10Ôºâ‰∏™Á®ãÂ∫èÈúÄË¶ÅËÆ°ÁÆóÊó∂Èó¥Â§çÊùÇÂ∫¶„ÄÇ ÊØè‰∏™Á®ãÂ∫èÊàë‰ª¨Âè™ÈúÄÊäΩÂèñÂÖ∂‰∏≠ F i x yÂíåEÂç≥ÂèØËÆ°ÁÆóÊó∂Èó¥Â§çÊùÇÂ∫¶„ÄÇÊ≥®ÊÑèÔºöÂæ™ÁéØÁªìÊûÑ ÂÖÅËÆ∏ÂµåÂ•ó„ÄÇ Êé•‰∏ãÊù•ÊØè‰∏™Á®ãÂ∫èÁöÑÁ¨¨‰∏ÄË°åÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ LLL Âíå‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåLLL ‰ª£Ë°®Á®ãÂ∫èË°åÊï∞ÔºåÂ≠óÁ¨¶ ‰∏≤Ë°®Á§∫Ëøô‰∏™Á®ãÂ∫èÁöÑÂ§çÊùÇÂ∫¶ÔºåO(1)Ë°®Á§∫Â∏∏Êï∞Â§çÊùÇÂ∫¶ÔºåO(n^w)Ë°®Á§∫Â§çÊùÇÂ∫¶‰∏∫nwn^wnwÔºåÂÖ∂ ‰∏≠wÊòØ‰∏Ä‰∏™Â∞è‰∫é100ÁöÑÊ≠£Êï¥Êï∞ÔºàËæìÂÖ•‰∏≠‰∏çÂåÖÂê´ÂºïÂè∑ÔºâÔºåËæìÂÖ•‰øùËØÅÂ§çÊùÇÂ∫¶Âè™ÊúâO(1)ÂíåO(n^w) ‰∏§ÁßçÁ±ªÂûã„ÄÇ Êé•‰∏ãÊù• LLL Ë°å‰ª£Ë°®Á®ãÂ∫è‰∏≠Âæ™ÁéØÁªìÊûÑ‰∏≠ÁöÑF i x yÊàñËÄÖ E„ÄÇ Á®ãÂ∫èË°åËã•‰ª•FÂºÄÂ§¥ÔºåË°®Á§∫ËøõÂÖ•‰∏Ä‰∏™Âæ™ÁéØÔºå‰πãÂêéÊúâÁ©∫Ê†ºÂàÜÁ¶ªÁöÑ‰∏â‰∏™Â≠óÁ¨¶Ôºà‰∏≤Ôºâi x yÔºå ÂÖ∂‰∏≠ iii ÊòØ‰∏Ä‰∏™Â∞èÂÜôÂ≠óÊØçÔºà‰øùËØÅ‰∏ç‰∏∫nnnÔºâÔºåË°®Á§∫Êñ∞Âª∫ÁöÑÂèòÈáèÂêçÔºåxxx Âíå yyy ÂèØËÉΩÊòØÊ≠£Êï¥Êï∞Êàñ nnn ÔºåÂ∑≤Áü•Ëã•‰∏∫Ê≠£Êï¥Êï∞Âàô‰∏ÄÂÆöÂ∞è‰∫é 100„ÄÇ Á®ãÂ∫èË°åËã•‰ª•EÂºÄÂ§¥ÔºåÂàôË°®Á§∫Âæ™ÁéØ‰ΩìÁªìÊùü„ÄÇ ËæìÂá∫Ê†ºÂºèËæìÂá∫Êñá‰ª∂ÂÖ± ttt Ë°åÔºåÂØπÂ∫îËæìÂÖ•ÁöÑ ttt ‰∏™Á®ãÂ∫èÔºåÊØèË°åËæìÂá∫YesÊàñNoÊàñËÄÖERRÔºàËæìÂá∫‰∏≠‰∏çÂåÖÂê´ÂºïÂè∑ÔºâÔºåËã•Á®ãÂ∫èÂÆûÈôÖÂ§çÊùÇÂ∫¶‰∏éËæìÂÖ•ÁªôÂá∫ÁöÑÂ§çÊùÇÂ∫¶‰∏ÄËá¥ÂàôËæìÂá∫YesÔºå‰∏ç‰∏ÄËá¥ÂàôËæìÂá∫NoÔºåËã•Á®ãÂ∫èÊúâËØ≠Ê≥ïÈîôËØØÔºàÂÖ∂‰∏≠ËØ≠Ê≥ïÈîôËØØÂè™Êúâ: ‚ë† F Âíå E ‰∏çÂåπÈÖç ‚ë°Êñ∞Âª∫ÁöÑÂèòÈáè‰∏éÂ∑≤ÁªèÂ≠òÂú®‰ΩÜÊú™Ë¢´ÈîÄÊØÅÁöÑÂèòÈáèÈáçÂ§ç‰∏§ÁßçÊÉÖÂÜµÔºâÔºåÂàôËæìÂá∫ERR „ÄÇ Ê≥®ÊÑèÔºöÂç≥‰ΩøÂú®Á®ãÂ∫è‰∏ç‰ºöÊâßË°åÁöÑÂæ™ÁéØ‰Ωì‰∏≠Âá∫Áé∞‰∫ÜËØ≠Ê≥ïÈîôËØØ‰πü‰ºöÁºñËØëÈîôËØØÔºåË¶ÅËæìÂá∫ ERR„ÄÇ ËæìÂÖ•ËæìÂá∫Ê†∑‰æãËæìÂÖ• #1 1234567891011121314151617181920212223242526272829303132333482 O(1)F i 1 1E2 O(n^1)F x 1 nE1 O(1)F x 1 n4 O(n^2)F x 5 nF y 10 nEE4 O(n^2)F x 9 nEF y 2 nE4 O(n^1)F x 9 nF y n 4EE4 O(1)F y n 4F x 9 nEE4 O(n^2)F x 1 nF x 1 10EE ËæìÂá∫ #1 12345678YesYesERRYesNoYesYesERR ÊÄùË∑ØÔºö 1.ÈááÁî®Âú®Á∫øÂ§ÑÁêÜÁöÑÊñπÊ≥ïÔºåÂ∞ÜF x i j ÂíåEÂÆö‰πâÊàêstringÁ±ªÂûãÔºåÊØèÊ¨°ËØªÂÖ•‰∏ÄË°åÊï∞ÊçÆÔºåÂ∞±Âà§Êñ≠ÊòØ‰ªÄ‰πàÁ±ªÂûãÁöÑËØ≠Âè• Â¶ÇÊûúÊòØF x i jÂ∞±ËøõÊ†à‰∏≠ Â¶ÇÊûúEÔºåÂ∞±Âà§Êñ≠‰∏Ä‰∏ãÊ†àÊòØÂê¶‰∏∫Á©∫Ôºå‰∏ç‰∏∫Á©∫ËØ¥ÊòéÊúâF x i j‰∏éÂÆÉÁõ∏‰∫íÂåπÈÖçÔºåÂ∞±ÂèØ‰ª•Â∞ÜÊ†àÈ°∂ÂÖÉÁ¥†Ôºå‰πüÂ∞±ÊòØ‰πüEËØ≠Âè•Áõ∏‰∫íÂåπÈÖçÁöÑÊúÄËøëÁöÑF x i jÂºπÂá∫Êù• 2.Â¶Ç‰ΩïÂà§Êñ≠ÁªìÊûúÊòØYes or NoÔºåÂõ†‰∏∫ÁªìÊûúÂè™ÊúâO(1)ÂíåO(n^m)ÔºåÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•Ê±ÇÂá∫Âæ™ÁéØÂµåÂ•óÊ¨°Êï∞ÁöÑÊúÄÂ§ßÂÄºÔºåÁÑ∂ÂêéË∑ü1or mÊØîËæÉÔºåÂ¶ÇÊûúÁõ∏Á≠âÔºåËæìÂá∫YesÔºåÂê¶ÂàôËæìÂá∫No„ÄÇ 3.Âà§Êñ≠ËæìÂÖ•ÊòØÂê¶Â≠òÂú®ÈîôËØØÔºåÈîôËØØÊÉÖÂÜµÔºö Â¶ÇÊûúÂÖ®ÈÉ®ËØ≠Âè•ÁöÑ‰∏™Êï∞ÊòØÂ•áÊï∞ÁöÑËØùÔºåÈÇ£ËÇØÂÆöÊòØÈîôËØØÁöÑ Â¶ÇÊûúFÂíåEËØ≠Âè•ÁöÑ‰∏™Êï∞‰∏çÁõ∏Á≠âÁöÑËØùÔºå‰πüÊòØÈîôËØØÁöÑ„ÄÇ‰æãÂ¶ÇÔºöFFFFEE Â¶ÇÊûúF x i jÂíåEËØ≠Âè•ÁöÑ‰∏™Êï∞Áõ∏Á≠âÁöÑËØùÔºåÂ¶ÇÊûúÂ≠òÂú®FFEEEFÔºåÈÇ£‰πàËøôÁßçÊÉÖÂÜµÂ∞±ÊòØÈîôËØØÔºåËøôÁßçÊÉÖÂÜµÂæ™ÁéØÁªìÊùüÂêéÊ†àÊòØ‰∏ç‰∏∫Á©∫ÁöÑÔºåÂèØ‰ª•Ê†πÊçÆËøô‰∏™Êù°‰ª∂ËøõË°åÂà§Êñ≠ ËøòÊúâ‰∏ÄÁßçÈîôËØØÂ∞±ÊòØÂèòÈáèÂêçÈáçÂ§çÔºåÁî±‰∫éÂèòÈáèÂêçÊòØ‰∏Ä‰∏™Â∞èÂÜôÂ≠óÊØçÔºåÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•ÂÖ®Â±ÄÂÆö‰πâÊï∞ÁªÑÔºåÂæ™ÁéØËæìÂÖ•ËØ≠Âè•Êó∂ÔºåÂà§Êñ≠ÔºåÂ¶ÇÊûúÊòØF x i jÔºåÂ∞±ÊèêÂèñÁ¨¨‰∏â‰∏™Â≠óÁ¨¶Âç≥ÊòØstring[2]ÔºåÂØπÂÖ∂Â§ÑÁêÜÔºåindex= string[2]-97ÔºåÊâÄ‰ª•‰æãÂ¶ÇÂ≠óÁ¨¶aÔºåÂ∞±Â≠òÊîæÂú®Êï∞ÁªÑÁöÑ0Âè∑‰ΩçÁΩÆ„ÄÇÂõ†Ê≠§ÔºåÂàùÂßãÂåñÊï∞ÁªÑÔºåÂÖ®ÈÉ®ÁΩÆ0ÔºåË°®Á§∫ËøòÊ≤°ÂÆö‰πâÂèòÈáèÔºåÈÅáÂà∞‰∏Ä‰∏™ÂèòÈáèÔºåÂà§Êñ≠ÊòØ‰∏çÊòØÊ≤°ÊúâË¢´ÂÆö‰πâËøáÔºåÂç≥ÊòØ0ÔºåÂ¶ÇÊûúÊ≤°ÊúâÔºåÁΩÆ‰∏∫1ÔºåË°®Á§∫Ë¢´ÂÆö‰πâ‰∫ÜÔºåÂ¶ÇÊûúËæìÂÖ•ÁöÑÂèòÈáèË¢´ÂÆö‰πâËøá‰∫ÜÔºåËÆæÁΩÆ‰∏Ä‰∏™flagÔºåÂ∞±ÂèØ‰ª•Âà§Êñ≠ÈîôËØØ‰∫Ü„ÄÇÊ≠§Â§ñÈîÄÊØÅÂèòÈáèÂç≥ÊòØÂú®Âá∫Ê†àÁöÑÊó∂ÂÄôÔºåÂ∞±ÊääÂèòÈáèÂú®Êï∞ÁªÑ‰∏≠ÁöÑÁΩÆ‰∏∫0. 4.ÁâπÊÆäÊÉÖÂÜµ FEFE FFFEEFFEEE Ê≠§Â§ñÂ∞±ÊòØÂ¶ÇÊûú‰∏Ä‰∏™FÊòØ‰∏çËÉΩËøõË°åÂæ™ÁéØÁöÑÔºåÈÇ£‰πàÂÖ∂ÂÜÖÂµåÂ•óÁöÑÂæ™ÁéØ‰πüÊòØ‰∏çÊòØ‰ΩøÂæóÂµåÂ•óÊ¨°Êï∞Â¢ûÂä†ÁöÑÔºåÂÖ∑‰ΩìÂ§ÑÁêÜÁúã‰ª£Á†Å AC‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232#include &lt;iostream&gt;# include &lt;string&gt;# include &lt;cstring&gt;# include &lt;stack&gt;using namespace std;int x_tag[30] = &#123; 0 &#125;; //ÂèòÈáèÂêçÊ†áÂøóstring temp_a = "";string temp_b = "";string temp_c = "";int string_int1(string a)&#123; for (int i = 4; i &lt; a.size()-1; i++) &#123; temp_c += a[i]; &#125; int temp = stoi(temp_c); temp_c = ""; return temp;&#125;void string_int(string a)&#123; int index; for (int i = 4; i &lt; a.size(); i++) &#123; if (a[i] != ' ') temp_a += a[i]; else &#123; index = i; break; &#125; &#125; for (int i = index + 1; i &lt; a.size(); i++) &#123; temp_b += a[i]; &#125; return;&#125;int main()&#123; int f_times = 0; int e_times = 0; int n; int line_number; //Ë°åÊï∞ string time; //Êó∂Èó¥Â§çÊùÇÂ∫¶ int times = 0; //ÁúãÁúãÊúâÂ§öÂ∞ëÂ±ÇÂæ™ÁéØ int max_times = 0; //ÊúÄÂ§ßÂ±ÇÊï∞ int flag = 0; //Âà§Êñ≠ÂèòÈáèÊòØÂê¶ÈáçÂ§ç int flag1 = 0; //Âà§Êñ≠ÊòØÂê¶ÈîôËØØ int flag_time = 0; //ÊèêÂèñÂ§çÊùÇÂ∫¶ÁöÑÁâπÊÆäÊÉÖÂÜµ FFFEEFFEEE int flag2 = 0; //Â¶ÇÊûúÂú®Á∫øËØªÂÖ•ÁöÑFÂ∞ë‰∫éEÔºå‰πüÂ∞±ÊòØËØ¥ÔºåFFEEEE ËøôÁßçÁâπÊÆäÊÉÖÂÜµ stack&lt;string&gt;s; cin &gt;&gt; n; for (int i = 0; i &lt; n; i++) &#123; cin &gt;&gt; line_number; cin &gt;&gt; time; cin.ignore(); //Ê∏ÖÁ©∫ÁºìÂÜ≤Âå∫ for (int j = 0; j &lt; line_number; j++) &#123; string a; getline(cin, a); //ËøôÊ†∑Á©∫Ê†º‰πüËÉΩË¢´ËØªËøõstring a‰∏≠ if (a[0] == 'F') &#123; if (x_tag[a[2] - 97] == 0) &#123; x_tag[a[2] - 97] = 1; &#125; else flag = 1;//Âá∫Áé∞ÂêåÂêçÂèòÈáè f_times++; //Âá∫Áé∞Âæ™ÁéØFÁöÑÊ¨°Êï∞ s.push(a); //ËøõÊ†à string_int(a); //ÂæóÂà∞F x i jÁöÑiÂíåj if (temp_b == "n" &amp;&amp; temp_a != "n") //Á¨¨‰∏Ä‰∏™‰∏∫Êï∞Â≠óÔºåÁ¨¨‰∫å‰∏™‰∏∫n &#123; if (flag_time == 0) times += 1; //nÊ¨°Âæ™ÁéØ else flag_time++; &#125; /* times flag_time F 1 0 F 2 0 F ‰∏ç‰ºöËøõÂÖ•Âæ™ÁéØ 1 F 2 F 3 E 2 F 3 F 4 E 3 E 2 E 1 E 0 F 3 F 4 E E E E ÊúÄÂêémax_times‰∏∫4Ôºå‰πüÂ∞±ÊòØÁªìÊûú‰∏∫O(n^4) */ //‰∏ç‰ºöËøõÂÖ•Âæ™ÁéØÁöÑÊÉÖÂÜµ else if (temp_a != "n" &amp;&amp; temp_b != "n" &amp;&amp; stoi(temp_a) &gt; stoi(temp_b)) //‰∏§‰∏™ÈÉΩÊòØÊï∞Â≠ó,Âπ∂‰∏îÁ¨¨‰∏Ä‰∏™Êï∞Â≠óÂ§ß‰∫éÁ¨¨‰∫å‰∏™Êï∞Â≠ó flag_time++; else if (temp_a == "n" &amp;&amp; temp_b != "n") //Á¨¨‰∏Ä‰∏™‰∏∫n,Á¨¨‰∫å‰∏™‰∏∫Êï∞Â≠ó flag_time++; //Ëá≥‰∫éÂÖ∂‰ªñÊÉÖÂÜµ‰∏ç‰ºöÂØπtimesÂµåÂ•óÊ¨°Êï∞ÈÄ†ÊàêÂΩ±ÂìçÔºå‰∏çÁî®Â§ÑÁêÜ temp_a = temp_b = ""; //Êõ¥Êñ∞ÂµåÂ•óÁöÑÊúÄÂ§ßÂ±ÇÊï∞ if (max_times &lt;= times) &#123; max_times = times; &#125; &#125; else &#123; e_times++; if (e_times &gt; f_times) //ÁâπÊÆäÊÉÖÂÜµÔºö FFEEEF flag2 = 1; if (!s.empty()) &#123; string temp1 = s.top(); int len = temp1.size(); s.pop(); x_tag[temp1[2] - 97] = 0; if(times != 0) //FFFEEFFFEEEE times--; //FEFE ÊúÄÂ§ßÊ¨°Êï∞‰∏∫1ÔºåÂÖàtimes++,Êõ¥Êñ∞ÊúÄÂ§ßÂÄºÔºåÁÑ∂ÂêéÂá∫Ê†àÂáè‰∏Ä if (flag_time != 0) flag_time--; &#125; &#125; &#125; if (line_number % 2 != 0 || f_times !=e_times || !s.empty() || flag2 == 1 || flag==1) &#123; cout &lt;&lt; "ERR" &lt;&lt; endl; flag = 0; flag1 = 0; flag2 = 0; times = 0; f_times = e_times = 0; max_times = 0; flag_time = 0; memset(x_tag, 0, sizeof(x_tag)); while (!s.empty()) s.pop(); continue; &#125; if (max_times == 0 &amp;&amp; time[2] == '1') &#123; cout &lt;&lt; "Yes" &lt;&lt; endl; // cout &lt;&lt; endl; times = 0; max_times = 0; flag = 0; flag1 = 0; flag2 = 0; f_times = e_times = 0; flag_time = 0; memset(x_tag, 0, sizeof(x_tag)); while (!s.empty()) s.pop(); continue; &#125; else if (max_times != 0 &amp;&amp; string_int1(time)== max_times) &#123; cout &lt;&lt; "Yes" &lt;&lt; endl; // cout &lt;&lt; endl; times = 0; max_times = 0; flag = 0; flag1 = 0; flag2 = 0; f_times = e_times = 0; flag_time = 0; memset(x_tag, 0, sizeof(x_tag)); while (!s.empty()) s.pop(); continue; &#125; else &#123; cout &lt;&lt; "No" &lt;&lt; endl; // cout &lt;&lt; endl; times = 0; max_times = 0; flag = 0; flag1 = 0; flag2 = 0; f_times = e_times = 0; flag_time = 0; memset(x_tag, 0, sizeof(x_tag)); while (!s.empty()) s.pop(); continue; &#125; &#125; return 0;&#125;/*int main()&#123; int b; cin &gt;&gt; b; cin.ignore(); //ÂÆÉÁöÑ‰∏Ä‰∏™Â∏∏Áî®ÂäüËÉΩÂ∞±ÊòØÁî®Êù•Ê∏ÖÈô§‰ª•ÂõûËΩ¶ÁªìÊùüÁöÑËæìÂÖ•ÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÔºå //Ê∂àÈô§‰∏ä‰∏ÄÊ¨°ËæìÂÖ•ÂØπ‰∏ã‰∏ÄÊ¨°ËæìÂÖ•ÁöÑÂΩ±Âìç string a; getline(cin, a); cout &lt;&lt; a &lt;&lt; endl; return 0;&#125;int main()&#123; string a = "F i 1 2"; //string_int(a, temp_a,temp_b)Â¶ÇÊûúÂÖ®Â±ÄÂèòÈáèÂÅöÂáΩÊï∞ÂèÇÊï∞ÔºåËøòÊòØ‰∏Ä‰∏™Âü∫Êú¨ÈóÆÈ¢òÔºåÂè™ÊúâÂºïÁî®ÂèÇÊï∞ÂíåÊåáÈíàÂèÇÊï∞Êâç‰ºöÊîπÂèòÂÆûÂèÇÁöÑÂÄº string_int(a); cout &lt;&lt; temp_a &lt;&lt; " " &lt;&lt; temp_b &lt;&lt; endl; return 0;&#125;*/ ÊÄªÁªì ËæìÂÖ•‰∏ÄÂºÄÂßãÁöÑÈóÆÈ¢òÔºögetline()ÔºåÂ¶ÇÊûúÂâçÈù¢ÊúâcinÔºåÂ∞±ÈúÄË¶ÅÊ∏ÖÁ©∫ÈîÆÁõòÁºìÂ≠òÂå∫ÁöÑÂõûËΩ¶ÈîÆÔºåÁî®cin.ignore() Ê≠§Â§ñÔºåÊØèÊ¨°Â§ßÂæ™ÁéØ‰∏ÄÊ¨°ËøáÂêéÔºåË¶ÅÂ∞ÜÊâÄÊúâÁî®Âà∞ÁöÑ‰∏¥Êó∂ÂèòÈáèÔºåÊ†áÂøóÂï•ÁöÑÁΩÆ‰∏∫ÂàùÂßãÂÄºÔºåÁî±‰∫éstackÊ≤°ÊúâÂáΩÊï∞Ê∏ÖÁ©∫ÔºåÊâÄ‰ª•Ë¶ÅÊ≥®ÊÑè„ÄÇ]]></content>
      <categories>
        <category>OJ</category>
        <category>Ê¥õË∞∑</category>
        <category>ÁÆóÊ≥ï</category>
        <category>Ê®°Êãü</category>
      </categories>
      <tags>
        <tag>Ê†à</tag>
        <tag>Â≠óÁ¨¶‰∏≤</tag>
        <tag>Ê®°Êãü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÈù¢ÂêëÂØπË±°]]></title>
    <url>%2Fpython%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[Á±ªÂØπË±° 1.Á±ªÂØπË±°ÊîØÊåÅ‰∏§ÁßçÊìç‰ΩúÔºöÂ±ûÊÄßÂºïÁî®ÂíåÂÆû‰æãÂåñ„ÄÇ 2.Á±ª‰∏≠‰∏Ä‰∏™ÁâπÊÆäÊñπÊ≥ïÔºàÊûÑÈÄ†ÊñπÊ≥ï)__ init__()ÔºåËØ•ÊñπÊ≥ïÂú®Á±ªÂÆû‰æãÂåñÊó∂‰ºöËá™Âä®Ë∞ÉÁî®ÔºåÊûÑÈÄ†ÊñπÊ≥ïÂèØ‰ª•‰º†ÂèÇÊï∞„ÄÇ 3.self‰ª£Ë°®Á±ªÁöÑÂÆû‰æãÔºå‰ª£Ë°®ÂΩìÂâçÂØπË±°ÁöÑÂú∞ÂùÄÔºåËÄåÈùûÁ±ª Á±ªÁöÑÊñπÊ≥ï‰∏éÊôÆÈÄöÁöÑÂáΩÊï∞Âè™Êúâ‰∏Ä‰∏™ÁâπÂà´ÁöÑÂå∫Âà´‚Äî‚ÄîÂÆÉ‰ª¨ÂøÖÈ°ªÊúâ‰∏Ä‰∏™È¢ùÂ§ñÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÂêçÁß∞, ÊåâÁÖßÊÉØ‰æãÂÆÉÁöÑÂêçÁß∞ÊòØ self„ÄÇ 12345678910111213141516class stu: #ÂÆö‰πâÊûÑÈÄ†ÊñπÊ≥ï def __init__(self, name, sno): self.n = name self.s = sno print("ÊàëÂÖàÊâßË°å--") print(self) #‰ª£Ë°®ÂΩìÂâçÂØπË±°ÁöÑÂú∞ÂùÄ print(self.__class__) #ÊåáÂêëÁ±ªÂêçstudent1 = stu("ÈôàÂ∞èÂùö", 1706200065)print("Â≠¶ÁîüÁöÑÂêçÂ≠ó‰∏∫Ôºö&#123;&#125;,Â≠¶Âè∑‰∏∫Ôºö&#123;&#125;".format(student1.n, student1.s))# ÊàëÂÖàÊâßË°å--# &lt;__main__.stu object at 0x0000020AA2AC3748&gt;# &lt;class '__main__.stu'&gt;# Â≠¶ÁîüÁöÑÂêçÂ≠ó‰∏∫ÔºöÈôàÂ∞èÂùö,Â≠¶Âè∑‰∏∫Ôºö1706200065# ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . ÁªßÊâø ÁªßÊâøÔºöÂ≠êÁ±ªÂÖ±‰∫´Áà∂Á±ªÁöÑÊï∞ÊçÆÔºàÂèòÈáèÔºâÂíåÊñπÊ≥ïÔºàÂáΩÊï∞Ôºâ Â¶ÇÊûúÂ≠êÁ±ª‰∏≠ÂÆö‰πâ‰∏éÁà∂Á±ªÂêåÂêçÁöÑÊñπÊ≥ïÊàñÂ±ûÊÄßÔºåÂàô‰ºöËá™Âä®Ë¶ÜÁõñÁà∂Á±ªÂØπÂ∫îÁöÑÊñπÊ≥ïÂíåÂ±ûÊÄß 1234567891011121314# ÂçïÁªßÊâøclass fun: def fun1(self): print("ÊàëÊòØÁ±ªfunÁöÑÂáΩÊï∞")class f(fun): def fun1(self): print("ÊàëÊòØÁ±ªfÁöÑÂáΩÊï∞")a = f() #Á±ªÂØπË±°aa.fun1()# ÊàëÊòØÁ±ªfÁöÑÂáΩÊï∞::::Â≠êÁ±ªÁöÑÊñπÊ≥ïË¶ÜÁõñ‰∫ÜÁà∂Á±ªÁöÑÊñπÊ≥ï Â§öÁªßÊâø ÊñπÊ≥ïÊêúÁ¥¢È°∫Â∫èÔºàÁ±ªÂêç.__mro______Ôºâ,Ëøô‰∏™È°∫Â∫èÊòØË∑üÂ§öÁªßÊâøÁöÑÊã¨Âè∑‰∏≠Áà∂Á±ªÁöÑÈ°∫Â∫èÊúâÂÖ≥ÁöÑ Âú®ÊêúÁ¥¢ÊñπÊ≥ïÊó∂ÔºåÊòØÊåâÁÖß mro ÁöÑËæìÂá∫ÁªìÊûú ‰ªéÂ∑¶Ëá≥Âè≥ ÁöÑÈ°∫Â∫èÊü•ÊâæÁöÑ Â¶ÇÊûúÂú®ÂΩìÂâçÁ±ª‰∏≠ ÊâæÂà∞ÊñπÊ≥ïÔºåÂ∞±Áõ¥Êé•ÊâßË°åÔºå‰∏çÂÜçÊêúÁ¥¢ Â¶ÇÊûú Ê≤°ÊúâÊâæÂà∞ÔºåÂ∞±Êü•Êâæ‰∏ã‰∏Ä‰∏™Á±ª ‰∏≠ÊòØÂê¶ÊúâÂØπÂ∫îÁöÑÊñπÊ≥ïÔºåÂ¶ÇÊûúÊâæÂà∞ÔºåÂ∞±Áõ¥Êé•ÊâßË°åÔºå‰∏çÂÜçÊêúÁ¥¢ Â¶ÇÊûúÊâæÂà∞ÊúÄÂêé‰∏Ä‰∏™Á±ªÔºåËøòÊ≤°ÊúâÊâæÂà∞ÊñπÊ≥ïÔºåÁ®ãÂ∫èÊä•Èîô ÊÄªÁªìÔºöÂ≠êÁ±ª‰ªéÂ§ö‰∏™Áà∂Á±ªÊ¥æÁîüÔºåËÄåÂ≠êÁ±ªÂèàÊ≤°ÊúâËá™Â∑±ÁöÑÊûÑÈÄ†ÂáΩÊï∞Êó∂Ôºå Ôºà1ÔºâÊåâÈ°∫Â∫èÁªßÊâøÔºåÂì™‰∏™Áà∂Á±ªÂú®ÊúÄÂâçÈù¢‰∏îÂÆÉÂèàÊúâËá™Â∑±ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÔºåÂ∞±ÁªßÊâøÂÆÉÁöÑÊûÑÈÄ†ÂáΩÊï∞Ôºõ Ôºà2ÔºâÂ¶ÇÊûúÊúÄÂâçÈù¢Á¨¨‰∏Ä‰∏™Áà∂Á±ªÊ≤°ÊúâÊûÑÈÄ†ÂáΩÊï∞ÔºåÂàôÁªßÊâøÁ¨¨2‰∏™ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÔºåÁ¨¨2‰∏™Ê≤°ÊúâÁöÑËØùÔºåÂÜçÂæÄÂêéÊâæÔºå‰ª•Ê≠§Á±ªÊé® 123456789101112131415161718# Â§öÁªßÊâøclass A: def fun(self): print("ËøôÊòØAÁöÑÊñπÊ≥ï")class B: def fun(self): print("ËøôÊòØBÁöÑÊñπÊ≥ï")class C(A, B): passc = C()c.fun()print(C.__mro__)# ËøôÊòØAÁöÑÊñπÊ≥ï#(&lt;class '__main__.C'&gt;, &lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;, &lt;class 'object'&gt;) Â§öÁªßÊâøË∞ÉÁî®Áà∂Á±ªÊñπÊ≥ïÁöÑÊñπÊ≥ïÔºö super()ÂáΩÊï∞ÊòØÁî®‰∫éË∞ÉÁî®Áà∂Á±ª(Ë∂ÖÁ±ª)ÁöÑ‰∏Ä‰∏™ÊñπÊ≥ï„ÄÇ Python3.x Âíå Python2.x ÁöÑ‰∏Ä‰∏™Âå∫Âà´ÊòØ: Python 3 ÂèØ‰ª•‰ΩøÁî®Áõ¥Êé•‰ΩøÁî® super().xxx ‰ª£Êõø super(Class, self).xxx ‰ΩøÁî®Á±ªÂêç.ÊñπÊ≥ïÂêç()ÁöÑ Â§öÁªßÊâøÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢ò1.ÁªßÊâøÂÖ≥Á≥ªÊ∑∑‰π±1234567891011121314151617181920212223242526class A: def __init__(self): print("ËøõÂÖ•A") print("ÈÄÄÂá∫A")class B(A): def __init__(self): print("ËøõÂÖ•B") A.__init__(self) #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã print("ÈÄÄÂá∫B")class C(A): def __init__(self): print("ËøõÂÖ•C") A.__init__(self) #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã print("ÈÄÄÂá∫C")class D(A, B): #error ÁªßÊâøÂÖ≥Á≥ªÊ∑∑‰π± def __init__(self): print("ËøõÂÖ•D") A.__init__(self) B.__init__(self) print("ÈÄÄÂá∫D")# ÂèØ‰ª•ÂÆö‰πâ‰∏∫ :class D(B, A)ÊàñËÄÖclass(B) 2.Â§öÁªßÊâø‰∏≠‰ΩøÁî®Á±ªÂêç.ÊñπÊ≥ïÂêç()Ë∞ÉÁî®Áà∂Á±ªÂáΩÊï∞123456789101112131415161718192021222324252627282930313233343536class A: def __init__(self): print("ËøõÂÖ•A") print("ÈÄÄÂá∫A")class B(A): def __init__(self): print("ËøõÂÖ•B") A.__init__(self) #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã print("ÈÄÄÂá∫B")class C(A): def __init__(self): print("ËøõÂÖ•C") A.__init__(self) #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã print("ÈÄÄÂá∫C")class D(B, C): def __init__(self): print("ËøõÂÖ•D") A.__init__(self) B.__init__(self) print("ÈÄÄÂá∫D")d = D()# ÁªìÊûúÂèØ‰ª•ÂèëÁé∞:Á±ªAÁöÑÂáΩÊï∞Ë¢´ÊâßË°å‰∫Ü‰∏§Ê¨°# A.__init(self)‰∏≠ÁöÑself‰∏çËÉΩÁúÅÁï•ÔºåË∑üsuper.__init__()ÊúâÂå∫Âà´# ËøõÂÖ•D# ËøõÂÖ•A# ÈÄÄÂá∫A# ËøõÂÖ•B# ËøõÂÖ•A# ÈÄÄÂá∫A# ÈÄÄÂá∫B# ÈÄÄÂá∫D 3.Â§öÁªßÊâø‰∏≠‰ΩøÁî®super.ÊñπÊ≥ïÂêç()Ë∞ÉÁî®Áà∂Á±ªÂáΩÊï∞12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667# class A:# def __init__(self):# print("ËøõÂÖ•A")# print("ÈÄÄÂá∫A")# class B(A):# def __init__(self):# print("ËøõÂÖ•B")# A.__init__(self) #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã# print("ÈÄÄÂá∫B")# class C(A):# def __init__(self):# print("ËøõÂÖ•C")# A.__init__(self) #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã# print("ÈÄÄÂá∫C")# class D(A, B): #error ÁªßÊâøÂÖ≥Á≥ªÊ∑∑‰π±# def __init__(self):# print("ËøõÂÖ•D")# A.__init__(self)# B.__init__(self)# print("ÈÄÄÂá∫D")# # ÂèØ‰ª•ÂÆö‰πâ‰∏∫ :class D(B, A)ÊàñËÄÖclass(B)# """# ####################class A: def __init__(self): print("ËøõÂÖ•A") print("ÈÄÄÂá∫A")class B(A): def __init__(self): print("ËøõÂÖ•B") super().__init__() #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã print("ÈÄÄÂá∫B")class C(A): def __init__(self): print("ËøõÂÖ•C") super().__init__() #Ê≥®ÊÑèËøôÈáåÁöÑselfÊòØBÁöÑÂÆû‰æã print("ÈÄÄÂá∫C")class D(B, C): def __init__(self): print("ËøõÂÖ•D") super().__init__() # super(D, self).__init__() #ÁêÜËß£:ÂèØËÉΩÊòØÊàë‰ª¨ÂÆö‰πâÁöÑÁà∂Á±ªAÁöÑinit()Âè™Êúâ‰∏Ä‰∏™ÈªòËÆ§ÂèÇÊï∞self,ËÄåÊ†πÊçÆÂçö‰∏ªÔºåÂ§öÁªßÊâø‰∏≠superË∞ÉÁî®ÈúÄË¶Å‰º†ÂÖ®ÈÉ®ÁöÑÂèÇÊï∞ÔºåËÄåÊàë‰ª¨Êú¨Ë∫´Â∞±Ê≤°ÊúâÂèÇÊï∞ÔºåÊâÄ‰ª•Âú®ËøôÈáå‰∏çÈúÄË¶ÅÂèÇÊï∞ # ÈîôËØØÁöÑÂÜôÊ≥ï: ÂéüÂõ†:ÂáΩÊï∞Âè™ÈúÄË¶Å‰∏Ä‰∏™ÂèÇÊï∞,‰ΩÜÊòØÂç¥‰º†ÂÖ•‰∫Ü‰∏§‰∏™.ÊâÄ‰ª•Êä•Èîô # super(D, self).__init__(self) # super().__init__(self) print("ÈÄÄÂá∫D")d = D()# """ # ÈóÆÈ¢ò:super().__init__()ÂáΩÊï∞ÂèÇÊï∞ÈóÆÈ¢ò# ËøõÂÖ•B# ËøõÂÖ•C# ËøõÂÖ•A# ÈÄÄÂá∫A# ÈÄÄÂá∫C# ÈÄÄÂá∫B # ÈÄÄÂá∫D #ËØ∑Êåâ‰ªªÊÑèÈîÆÁªßÁª≠. . . ÊÄªÁªìÔºö super()‰ºö‰øùËØÅÊØè‰∏™Áà∂Á±ªÁöÑÂáΩÊï∞Âè™Ë¢´ÊâßË°å‰∏ÄÊ¨°„ÄÇËá≥‰∫éÁà∂Á±ªÂáΩÊï∞ÊâßË°åÁöÑÈ°∫Â∫èÊòØÂ≠êÁ±ªÁöÑmroÈ°∫Â∫èÊù•ÊâßË°åÁöÑ superÂáΩÊï∞Ë∞ÉÁî®Áà∂Á±ªÂáΩÊï∞‰º†ÈÄíÂèÇÊï∞ÁöÑÈóÆÈ¢òÔºö Â§öÁªßÊâøÊó∂Ôºå‰ΩøÁî®superÊñπÊ≥ïÔºåÂØπÁà∂Á±ªÁöÑ‰º†ÂèÇÊï∞ÔºåÂ∫îËØ•ÊòØÁî±‰∫épython‰∏≠superÁöÑÁÆóÊ≥ïÂØºËá¥ÁöÑÂéüÂõ†ÔºåÂøÖÈ°ªÊääÂèÇÊï∞ÂÖ®ÈÉ®‰º†ÈÄíÔºåÂê¶Âàô‰ºöÊä•Èîô- ÂçïÁªßÊâøÊó∂Ôºå‰ΩøÁî®superÊñπÊ≥ïÔºåÂàô‰∏çËÉΩÂÖ®ÈÉ®‰º†ÈÄíÔºåÂè™ËÉΩ‰º†Áà∂Á±ªÊñπÊ≥ïÊâÄÈúÄÁöÑÂèÇÊï∞ÔºåÂê¶Âàô‰ºöÊä•Èîô Â§öÁªßÊâøÊó∂ÔºåÁõ∏ÂØπ‰∫é‰ΩøÁî®Á±ªÂêç.initÊñπÊ≥ïÔºåË¶ÅÊääÊØè‰∏™Áà∂Á±ªÂÖ®ÈÉ®ÂÜô‰∏ÄÈÅç, ËÄå‰ΩøÁî®superÊñπÊ≥ïÔºåÂè™ÈúÄÂÜô‰∏ÄÂè•ËØù‰æøÊâßË°å‰∫ÜÂÖ®ÈÉ®Áà∂Á±ªÁöÑÊñπÊ≥ïÔºåËøô‰πüÊòØ‰∏∫‰ΩïÂ§öÁªßÊâøÈúÄË¶ÅÂÖ®ÈÉ®‰º†ÂèÇÁöÑ‰∏Ä‰∏™ÂéüÂõ† ÂèÇËÄÉhttps://blog.csdn.net/qq_26442553/article/details/81775449 ‚Äî‚Äî‚Äî‚ÄìÊàëÊòØÂàÜÂâ≤Á∫ø‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî- Á±ªÁöÑÁßÅÊúâÂèòÈáèÂíåÁßÅÊúâÊñπÊ≥ï Á±ªÂûãÁöÑÁßÅÊúâÂ±ûÊÄß __private_attrsÔºö‰∏§‰∏™‰∏ãÂàíÁ∫øÂºÄÂ§¥ÔºåÂ£∞ÊòéËØ•Â±ûÊÄß‰∏∫ÁßÅÊúâÔºå‰∏çËÉΩÂú®Á±ªÁöÑÂ§ñÈÉ®Ë¢´‰ΩøÁî®ÊàñÁõ¥Êé•ËÆøÈóÆ„ÄÇÂú®Á±ªÂÜÖÈÉ®ÁöÑÊñπÊ≥ï‰∏≠‰ΩøÁî®Êó∂ self.__private_attrs Á±ªÁöÑÊñπÊ≥ï Âú®Á±ªÁöÑÂÜÖÈÉ®Ôºå‰ΩøÁî® def ÂÖ≥ÈîÆÂ≠óÊù•ÂÆö‰πâ‰∏Ä‰∏™ÊñπÊ≥ïÔºå‰∏é‰∏ÄËà¨ÂáΩÊï∞ÂÆö‰πâ‰∏çÂêåÔºåÁ±ªÊñπÊ≥ïÂøÖÈ°ªÂåÖÂê´ÂèÇÊï∞ selfÔºå‰∏î‰∏∫Á¨¨‰∏Ä‰∏™ÂèÇÊï∞Ôºåself ‰ª£Ë°®ÁöÑÊòØÁ±ªÁöÑÂÆû‰æã„ÄÇ Á±ªÁöÑÁßÅÊúâÊñπÊ≥ï __private_methodÔºö‰∏§‰∏™‰∏ãÂàíÁ∫øÂºÄÂ§¥ÔºåÂ£∞ÊòéËØ•ÊñπÊ≥ï‰∏∫ÁßÅÊúâÊñπÊ≥ïÔºåÂè™ËÉΩÂú®Á±ªÁöÑÂÜÖÈÉ®Ë∞ÉÁî® Ôºå‰∏çËÉΩÂú®Á±ªÁöÑÂ§ñÈÉ®Ë∞ÉÁî®„ÄÇself.__private_methods„ÄÇ Á±ªÁöÑ‰∏ìÊúâÊñπÊ≥ï init : ÊûÑÈÄ†ÂáΩÊï∞ÔºåÂú®ÁîüÊàêÂØπË±°Êó∂Ë∞ÉÁî® del : ÊûêÊûÑÂáΩÊï∞ÔºåÈáäÊîæÂØπË±°Êó∂‰ΩøÁî® repr : ÊâìÂç∞ÔºåËΩ¨Êç¢ setitem : ÊåâÁÖßÁ¥¢ÂºïËµãÂÄº getitem: ÊåâÁÖßÁ¥¢ÂºïËé∑ÂèñÂÄº len: Ëé∑ÂæóÈïøÂ∫¶ cmp: ÊØîËæÉËøêÁÆó call: ÂáΩÊï∞Ë∞ÉÁî® add: Âä†ËøêÁÆó sub: ÂáèËøêÁÆó mul: ‰πòËøêÁÆó truediv: Èô§ËøêÁÆó mod: Ê±Ç‰ΩôËøêÁÆó pow: ‰πòÊñπ ÂèØ‰ª•ÂØπËøô‰∫õÊñπÊ≥ïËøõË°åÈáçËΩΩ]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonÁöÑÊ†ºÂºèÂåñËæìÂá∫---str.format()]]></title>
    <url>%2Fpython%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÔºöpythonÁöÑÂ≠óÁ¨¶‰∏≤ÁºñÁ†ÅÂÖ®ÈÉ®ÊòØunicodeÁºñÁ†Å Êåâ‰ΩçÁΩÆËÆøÈóÆÂèÇÊï∞1234567print('&#123;&#125;, &#123;&#125;, &#123;&#125;'.format('a', 'b', 'c'))print('&#123;1&#125;, &#123;2&#125;, &#123;0&#125;'.format('a', 'b', 'c'))print('&#123;1&#125;&#123;0&#125;&#123;1&#125;'.format('ab', 'hj'))# a, b, c# b, c, a# hjabhj ÊåâÂêçÁß∞ËÆøÈóÆÂèÇÊï∞12345print('ÊåâÂêçÁß∞ËÆøÈóÆÂèÇÊï∞1Ôºö&#123;chen1&#125;,&#123;chen2&#125;'.format(chen1="‰Ω†Â•Ω", chen2="‰Ω†‰πüÂ•ΩÂïä"))dict1 = &#123;'chen1': "‰Ω†Â•Ω", 'chen2': "‰Ω†‰πüÂ•ΩÂïä"&#125;print("ÊåâÂêçÁß∞ËÆøÈóÆÂèÇÊï∞2: &#123;chen1&#125;&#123;chen2&#125;".format(**dict1))# ÊåâÂêçÁß∞ËÆøÈóÆÂèÇÊï∞1Ôºö‰Ω†Â•Ω,‰Ω†‰πüÂ•ΩÂïä# ÊåâÂêçÁß∞ËÆøÈóÆÂèÇÊï∞2: ‰Ω†Â•Ω‰Ω†‰πüÂ•ΩÂïä ËÆøÈóÆÂèÇÊï∞ÁöÑÂ±ûÊÄß1234complex1 = 3-5jprint("Ëøô‰∏™Â§çÊï∞&#123;0&#125;ÁöÑÂÆûÊï∞ÊòØÔºö&#123;0.real&#125;,ËôöÊï∞ÊòØ&#123;0.imag&#125;".format(complex1))# Ëøô‰∏™Â§çÊï∞(3-5j)ÁöÑÂÆûÊï∞ÊòØÔºö3.0,ËôöÊï∞ÊòØ-5.0 ‰øùÁïôÂ∞èÊï∞ÁÇπÂêéÂ§öÂ∞ë‰Ωç12345import mathprint('Â∏∏ÈáèpiÁöÑÂÄºËøë‰ºº‰∏∫Ôºö&#123;0:.3f&#125;'.format(math.pi))print('Â∏∏ÈáèpiÁöÑÂÄºËøë‰ºº‰∏∫Ôºö&#123;:.3f&#125;'.format(math.pi))# Â∏∏ÈáèpiÁöÑÂÄºËøë‰ºº‰∏∫Ôºö3.142# Â∏∏ÈáèpiÁöÑÂÄºËøë‰ºº‰∏∫Ôºö3.142 ËÆøÈóÆÂèÇÊï∞ÁöÑÈ°π1234567tuple1 = (3, 5)list1 = [3, 5]print("ÂÖÉÁªÑÁöÑÂÖÉÁ¥†‰∏∫Ôºö&#123;0[0]&#125;, &#123;0[1]&#125;".format(tuple1))print("ÂàóË°®ÁöÑÂÖÉÁ¥†‰∏∫Ôºö&#123;0[0]&#125;, &#123;0[1]&#125;".format(list1))# ÂÖÉÁªÑÁöÑÂÖÉÁ¥†‰∏∫Ôºö3, 5# ÂàóË°®ÁöÑÂÖÉÁ¥†‰∏∫Ôºö3, 5 Êõø‰ª£%sÂíå%r123print("repr()Ë°®Á§∫ÁöÑÊï∞Ôºö&#123;!r&#125;, str()Ë°®Á§∫ÁöÑÊï∞Ôºö&#123;!s&#125;".format('test1', 'test2'))# repr()Ë°®Á§∫ÁöÑÊï∞Ôºö'test1', str()Ë°®Á§∫ÁöÑÊï∞Ôºötest2 ÂØπÈΩêÊñáÊú¨‰ª•ÂèäÊåáÂÆöÂÆΩÂ∫¶12345678910111213print("&#123;:&lt;30&#125;".format('Â∑¶ÂØπÈΩê'))print("&#123;:&gt;30&#125;".format('Âè≥ÂØπÈΩê'))print("&#123;:^30&#125;".format('Â±Ö‰∏≠ÂØπÈΩê'))print("&#123;:*^30&#125;".format('Â±Ö‰∏≠ÂØπÈΩê'))print("&#123;:*&lt;30&#125;".format('Â∑¶ÂØπÈΩê'))print("&#123;:*&gt;30&#125;".format('Âè≥ÂØπÈΩê'))# Â∑¶ÂØπÈΩê# Âè≥ÂØπÈΩê# Â±Ö‰∏≠ÂØπÈΩê# *************Â±Ö‰∏≠ÂØπÈΩê*************# Â∑¶ÂØπÈΩê***************************# ***************************Âè≥ÂØπÈΩê Êõø‰ª£ %+f, %-f Âíå % f ‰ª•ÂèäÊåáÂÆöÊ≠£Ë¥üÂè∑:12345678910111213# '+' Ë°®Á§∫Ê†áÂøóÂ∫îËØ•Áî®‰∫éÊ≠£Êï∞ÂíåË¥üÊï∞„ÄÇ# '-' Ë°®Á§∫Ê†áÂøóÂ∫î‰ªÖÁî®‰∫éË¥üÊï∞ÔºàËøôÊòØÈªòËÆ§Ë°å‰∏∫Ôºâ„ÄÇ# space Ë°®Á§∫Â∫îÂú®Ê≠£Êï∞‰∏ä‰ΩøÁî®ÂâçÂØºÁ©∫Ê†ºÔºåÂú®Ë¥üÊï∞‰∏ä‰ΩøÁî®ÂáèÂè∑print("&#123;:+f&#125;; &#123;:+f&#125;".format(3.14, -3.14))print("&#123;: f&#125;; &#123;: f&#125;".format(3.14, -3.14))print("&#123;:-f&#125;; &#123;:-f&#125;".format(3.14, -3.14))# +3.140000; -3.140000# 3.140000; -3.140000# 3.140000; -3.140000 Êõø‰ª£ %x Âíå %o ‰ª•ÂèäËΩ¨Êç¢Âü∫‰∫é‰∏çÂêåËøõ‰ΩçÂà∂ÁöÑÂÄº:1234567print("ÂçÅËøõÂà∂Ôºö&#123;0:d&#125;; ÂçÅÂÖ≠ËøõÂà∂Ôºö&#123;0:x&#125;; ÂÖ´ËøõÂà∂Ôºö&#123;0:o&#125;; ‰∫åËøõÂà∂Ôºö&#123;0:b&#125;".format(42))# ÂçÅËøõÂà∂Ôºö42; ÂçÅÂÖ≠ËøõÂà∂Ôºö2a; ÂÖ´ËøõÂà∂Ôºö52; ‰∫åËøõÂà∂Ôºö101010print("ÂçÅËøõÂà∂Ôºö&#123;0:d&#125;; ÂçÅÂÖ≠ËøõÂà∂Ôºö&#123;0:#x&#125;; ÂÖ´ËøõÂà∂Ôºö&#123;0:#o&#125;; ‰∫åËøõÂà∂Ôºö&#123;0:#b&#125;".format(42))# ÂçÅËøõÂà∂Ôºö42; ÂçÅÂÖ≠ËøõÂà∂Ôºö0x2a; ÂÖ´ËøõÂà∂Ôºö0o52; ‰∫åËøõÂà∂Ôºö0b101010# Ê≥®ÊÑè&#123;&#125;‰∏≠ÁöÑ0‰∏ÄÂÆöË¶ÅÂä†ÔºåÂõ†‰∏∫format()ÈáåÈù¢Ê≠§Êó∂Âè™Êúâ‰∏Ä‰∏™ÂèÇÊï∞ÔºåËÄåÂâçÈù¢ÁöÑÊßΩÊúâ4‰∏™# Âú®ËøôÈáåformatÈáåÈù¢ÁöÑÂèÇÊï∞ÂíåÂâçÈù¢ÁöÑÊßΩÊòØ‰∏Ä‰∏ÄÂØπÂ∫îÁöÑÔºåÂõ†Ê≠§ÂΩìÊßΩÁöÑ‰∏™Êï∞Â§ß‰∫éÂèÇÊï∞Êó∂Â∞±‰ºöÂá∫Áé∞Êä•Èîô ‰ΩøÁî®ÈÄóÂè∑‰Ωú‰∏∫ÂçÉ‰ΩçÂàÜÈöîÁ¨¶12print("&#123;1:,&#125;||||||&#123;0:,&#125;".format(1234567890, 9999999999999999))# 9,999,999,999,999,999||||||1,234,567,890 Ë°®Á§∫ÁôæÂàÜÊï∞12345678a = 1b = 3print("10Èô§3Á≠â‰∫éÔºö&#123;:.2%&#125;".format(a/b))print("10Èô§3Á≠â‰∫éÔºö&#123;:.3%&#125;".format(a/b))print("10Èô§3Á≠â‰∫éÔºö&#123;:.4%&#125;".format(a/b))# 10Èô§3Á≠â‰∫éÔºö33.33%# 10Èô§3Á≠â‰∫éÔºö33.333%# 10Èô§3Á≠â‰∫éÔºö33.3333% ‰ΩøÁî®ÁâπÂÆöÁ±ªÂûãÁöÑ‰∏ìÂ±ûÊ†ºÂºèÂåñ1234567891011121314import datetimed = datetime.datetime(2019, 7, 17, 10, 53, 58)print(type(d))print(d)print(str(d))print(repr(d))# &lt;class 'datetime.datetime'&gt;# 2019-07-17 10:53:58# 2019-07-17 10:53:58# datetime.datetime(2019, 7, 17, 10, 53, 58)print('&#123;:%Y-%m-%d %H:%M:%S&#125;'.format(d))# 2019-07-17 10:53:58# ÊâÄ‰ª•Áõ¥Êé•ËæìÂá∫dÂ∞±Ë°å..... ÂµåÂ•óÂèÇÊï∞‰ª•ÂèäÊõ¥Â§çÊùÇÁöÑÁ§∫‰æã:1234567891011121314151617181920212223242526ip = [192, 168, 0, 1]print("ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫Ôºö&#123;:02X&#125;|&#123;:02X&#125;|&#123;:02X&#125;|&#123;:02X&#125;".format(*ip))print("ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫Ôºö&#123;:2X&#125;|&#123;:2X&#125;|&#123;:2X&#125;|&#123;:2X&#125;".format(*ip))print("ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫Ôºö&#123;:3X&#125;|&#123;:3X&#125;|&#123;:3X&#125;|&#123;:3X&#125;".format(*ip))print("ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫Ôºö&#123;:03X&#125;|&#123;:03X&#125;|&#123;:03X&#125;|&#123;:03X&#125;".format(*ip))#ÊÄª‰πãÊ≥®ÊÑè‚ÄúÔºö‚ÄùÂâçÈù¢ÁöÑÊï∞Â≠óË¶Å‰∏éformat()ÂÜÖÁöÑÂèÇÊï∞‰∏™Êï∞ÂØπÂ∫îÔºåËÄåÂçÅÂÖ≠ËøõÂà∂ÁöÑ"X""x"ÊòØÊéßÂà∂Â§ß‰∫é9ÁöÑÂ≠óÊØçÁöÑÂ§ßÂ∞èÂÜô# ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫ÔºöC0|A8|00|01# ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫ÔºöC0|A8| 0| 1# ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫Ôºö C0| A8| 0| 1# ËΩ¨Êç¢‰∏∫16ËøõÂà∂‰∏∫Ôºö0C0|0A8|000|001width = 5for num in range(5, 12): for base in "dXob": print('&#123;0:&#123;width&#125;&#123;base&#125;&#125;'.format(num, width=width, base=base), end=" ") print()# 5 5 5 101# 6 6 6 110# 7 7 7 111# 8 8 10 1000# 9 9 11 1001# 10 A 12 1010# 11 B 13 1011 Ë°•ÂÖÖÔºöint():Áî®‰∫éÂ∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÊàñÊï∞Â≠óËΩ¨Êç¢‰∏∫Êï¥Âûã„ÄÇint(x, base=10) x‚ÄìÂ≠óÁ¨¶‰∏≤ÊàñÊï∞Â≠óÔºõ base‚ÄìËøõÂà∂Êï∞ÔºåÈªòËÆ§ÊòØÂçÅËøõÂà∂ 123int('12',16) # Â¶ÇÊûúÊòØÂ∏¶ÂèÇÊï∞baseÁöÑËØùÔºå12Ë¶Å‰ª•Â≠óÁ¨¶‰∏≤ÁöÑÂΩ¢ÂºèËøõË°åËæìÂÖ•Ôºå12 ‰∏∫ 16ËøõÂà∂#Âõ†Ê≠§12ÊòØ‰∏Ä‰∏™ÂçÅÂÖ≠ËøõÂà∂Êï∞ÔºåÊâÄ‰ª•ËΩ¨Âåñ‰∏∫‰∫åËøõÂà∂Êï∞‰∏∫0001 0010ÔºåÂ∞Ü‰∫åËøõÂà∂Êï∞ËΩ¨ÂåñÊàêÂçÅËøõÂà∂Êï∞‰∏∫Ôºö2+16 =18ÔºåËæìÂá∫‰∏∫18]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python‰∏≠a += bÂíåa = a + bÁöÑÂå∫Âà´]]></title>
    <url>%2Fmyblog_2%2F</url>
    <content type="text"><![CDATA[ÂèòÈáèÂíåÂØπË±°ÁöÑÁêÜËß£ Âú®python‰∏≠ÔºåÂèòÈáèÊòØÊ≤°ÊúâÁ±ªÂûãÁöÑÔºåÂΩì‰ΩøÁî®ÂèòÈáèÁöÑÊó∂ÂÄôÔºåÂøÖÈ°ªË¶ÅÁªôËøô‰∏™ÂèòÈáèËµãÂÄºÔºåËÄåÊ≤°ÊúâËµãÂÄºÔºåÈÇ£‰πàpythonËÆ§‰∏∫Ëøô‰∏™ÂèòÈáèÊ≤°ÊúâÂÆö‰πâ„ÄÇÂØπË±°ËµãÂÄºÂÆûÈôÖ‰∏äÊòØÂØπË±°ÁöÑÂºïÁî®„ÄÇÂΩìÂàõÂª∫‰∏Ä‰∏™ÂØπË±°ÔºåÂΩìÂàõÂª∫‰∏Ä‰∏™ÂØπË±°ÔºåÁÑ∂ÂêéÊääÂÆÉËµãÂÄºÁªôÂè¶‰∏Ä‰∏™ÂèòÈáèÁöÑÊó∂ÂÄôÔºåpythonÂπ∂Ê≤°ÊúâÊã∑Ë¥ùËøô‰∏™ÂØπË±°ÔºåËÄåÊòØÊã∑Ë¥ùËøô‰∏™ÂØπË±°ÁöÑÂºïÁî®„ÄÇ Âú®python‰∏≠ÔºåÂØπË±°ÂàÜ‰∏∫ÂèØÂèòÂíå‰∏çÂèØÂèòÁöÑ ÂèØÂèòÁöÑÂØπË±°ÔºölistÔºåsetÔºådict ‰∏çÂèØÂèòÁöÑÂØπË±°ÔºöintÔºåfloatÔºålongÔºåstrÔºåtuple ÂèòÈáèÊó†Á±ªÂûãÔºåÂØπË±°ÊúâÁ±ªÂûã„ÄÇ ÂèòÈáèÊòØÊåáÂêëÂÜÖÂ≠ò‰∏≠ÁöÑÂØπË±°ÁöÑ‰∏Ä‰∏™ÊåáÈíàÔºåÈÉΩÊòØÂÄºÁöÑÂºïÁî® ÂØπË±°ÊòØÂÜÖÂ≠ò‰∏≠Â≠òÂÇ®Êï∞ÊçÆÁöÑÂÆû‰ΩìÔºåÂèòÈáèÊòØÊåáÂêëÂØπË±°ÁöÑÊåáÈíà Âú®ÂáΩÊï∞‰∏≠ÂèÇÊï∞ÊòØ‰º†ÂºïÁî®ÁöÑÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂèòÈáèËøõÂà∞ÂáΩÊï∞‰∏≠ÔºåË¢´ÊîπÂèòÔºåÈÇ£‰πàËøô‰∏™ÂèòÈáèÊâÄÊåáÁöÑÂØπË±°ÔºåÂ¶ÇÊûúÊòØÂèØÂèòÁöÑÂØπË±°ÔºåÈÇ£‰πàÂèòÈáèËøòÊòØÊåáÂêëÂéüÂÖàÂØπË±°ÔºåÂ¶ÇÊûúÊòØ‰∏çÂèØÂèòÂØπË±°ÔºåÈÇ£‰πàËøô‰∏™ÂèòÈáèÊâÄÊåáÁöÑÂØπË±°Â∞±‰∏çÊòØ‰πãÂâçÊâÄÊåáÂêëÁöÑÂØπË±°ÔºåÊóßÁöÑÂØπË±°Âõ†‰∏∫Ê≤°Ë¢´‰ΩøÁî®ËÄåË¢´pythonÁöÑÂûÉÂúæÂõûÊî∂Êú∫Âà∂ÂõûÊî∂ 12345678910a = [1, 2, 3]b = aprint(b)b += aprint(b)print(a)#ËøêË°åÁªìÊûúÔºö#[1, 2, 3]#[1, 2, 3, 1, 2, 3]#[1, 2, 3, 1, 2, 3] 123456789a = [1, 2, 3]b = aprint(b)b = b + aprint(b)print(a)# [1, 2, 3]# [1, 2, 3, 1, 2, 3]# [1, 2, 3] 123456789101112131415161718192021def fun_1(p): p += [1] print("ÂáΩÊï∞‰∏≠ÁöÑpÁöÑid‰∏∫Ôºö", id(p))def fun_2(p): p = p + [1] print("ÂáΩÊï∞‰∏≠ÁöÑpÁöÑid‰∏∫Ôºö", id(p))p1 = [2, 2]p2 = [2, 2]fun_1(p1)fun_2(p2)print("p1ÁöÑidÔºö", id(p1), "p1ÂàóË°®ÁöÑÂÄº‰∏∫", p1)print("p2ÁöÑid: ", id(p2), "p2ÂàóË°®ÁöÑÂÄº‰∏∫", p2)# Êìç‰ΩúÁªìÊûúÔºö# ÂáΩÊï∞‰∏≠ÁöÑpÁöÑid‰∏∫Ôºö 1381806107656# ÂáΩÊï∞‰∏≠ÁöÑpÁöÑid‰∏∫Ôºö 1381810873096# p1ÁöÑidÔºö 1381806107656 p1ÂàóË°®ÁöÑÂÄº‰∏∫ [2, 2, 1]# p2ÁöÑid: 1381806106504 p2ÂàóË°®ÁöÑÂÄº‰∏∫ [2, 2] Áî±Ê≠§ÂèØ‰ª•ÁúãÂá∫+= Êìç‰ΩúÁöÑÂØπË±°ÊòØÂèØÂèòÁöÑÔºå‰æãÂ¶Çlist,ÈÇ£‰πàÂØπ‰ªñËøõË°åÊìç‰ΩúÂ∞±ÊòØÂØπÂéüÊù•ÊâÄÊåáÁöÑÂØπË±°ËøõË°åÊìç‰ΩúÔºåÂç≥ÊòØÂØπÂéüÊù•Â≠òÂÇ®Âú∞ÂùÄ‰∏≠ÁöÑÂÜÖÂÆπËøõË°åÊìç‰ΩúÔºåÂ≠òÂÇ®ÁöÑÂú∞ÂùÄ‰∏ç‰ºöÊîπÂèòÔºàÁî±pÂíåp1ÁöÑidÂèØ‰ª•Áü•ÈÅìÔºåÂΩìÁÑ∂ËøôÊòØÂª∫Á´ãÂú®Ëøô‰∏™ÂØπË±°ÊòØÂèØÂèòÁöÑÔºâ„ÄÇËÄåÂØπ‰∏éz = x + yËøôÁ±ªÊù•ËØ¥ÔºåÂ∞±ÊòØÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°ÔºåÁÑ∂ÂêézÊåáÂêëËøô‰∏™ÂØπË±°„ÄÇ Êõ¥Êñ∞ ÂèòÈáèÊòØÂØπÊï∞ÊçÆÁöÑÂºïÁî®Ôºå‰πüÂ∞±ÊòØËØ¥Áî®ËµãÂÄºËØ≠Âè•ÂØπÂèòÈáèÈáçÊñ∞ËµãÂÄºÊó∂Ôºåpython‰∏∫ÂÖ∂ÂàÜÈÖç‰∫ÜÊñ∞ÁöÑÂÜÖÂ≠òÂçïÂÖÉÔºåÂèòÈáèÂ∞ÜÊåáÂêëÊñ∞ÁöÑÂú∞ÂùÄ„ÄÇËøôÁßçËØ¥Ê≥ïÊòØÈíàÂØπ‰∏ÄËà¨ÊÉÖÂÜµÁöÑ‚Ä¶ Ëá≥‰∫éÁâπÊÆäÊÉÖÂÜµÔºåÂ∞±ÊòØÂèØÂèòÂØπË±°ÂØπ‰∫éa = a + bÂíåa += b‰πãÈó¥ÁöÑÂå∫Âà´‚Ä¶.ËÆ∞‰ΩèËøôÁßçÁâπÊÆäÊÉÖÂÜµÂ∞±Â•Ω‰∫Ü=-= ÂáΩÊï∞ÂèÇÊï∞‰º†ÈÄíÁöÑÂΩ±Âìç ÂÆûÂèÇÁöÑÂÄº‰º†ÈÄíÁªôÂΩ¢ÂèÇÔºåÂÆûÈôÖ‰∏äÊòØÂ∞ÜÂÆûÂèÇÁöÑÊâÄÊåáÂêëÁöÑÂØπË±°ÁöÑÂú∞ÂùÄ‰º†ÈÄíÁªôÂΩ¢ÂèÇÔºåÂõ†Ê≠§ÔºåÂ¶ÇÊûú‰º†ÈÄíÂØπË±°ÊòØ‰∏çÂèØÂèòÂØπË±°ÔºàÊï∞ÂÄºÔºåÂ≠óÁ¨¶ÔºåÂÖÉÁªÑÁ≠âÔºâÔºåÂú®ÂáΩÊï∞‰Ωì‰∏≠ÂΩ¢ÂèÇÂÄºÁöÑÂèòÂåñ‰∏ç‰ºöÂΩ±ÂìçÂà∞ÂÆûÂèÇ„ÄÇÂ¶ÇÊûú‰º†ÈÄíÁöÑÂØπË±°ÊòØÂèØÂèòÂØπË±°ÔºàrÂàóË°®ÔºåÂ≠óÂÖ∏ÔºâÔºåÂú®ÂáΩÊï∞‰∏≠ÂΩ¢ÂèÇÂÄºÁöÑÂèòÂåñ‰ºöÂΩ±ÂìçÂà∞ÂÆûÂèÇ„ÄÇ‰πüÂ∞±ÊòØËØ¥ÔºåÂèòÈáèÂêçÁõ∏ÂΩì‰∫éÊåáÈíàÔºåÊåáÂêë‰∏Ä‰∏™ÂØπË±°Ôºå‰æãÂ¶ÇÊï∞ÂÄº5ÔºåÂõ†‰∏∫Êï∞ÂÄº5ÊòØ‰∏çÂèØÂèòÁöÑÔºåÂΩìÂèòÈáèÈáçÊñ∞ËµãÂÄºÊó∂ÔºåÂèòÈáè‰πüÂ∞±ÊåáÂêë‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°„ÄÇ Êõ¥Êñ∞ÂØπ‰∫éÂèØÂìàÂ∏åÂØπË±°Âíå‰∏çÂèØÂèòÂØπË±°ÁöÑÁêÜËß£ È¶ñÂÖàÔºåÂèØÂèòÂØπË±°ÔºàÂàóË°®ÔºåÈõÜÂêàÔºåÂ≠óÂÖ∏ÔºâÊòØ‰∏çÂèØÂìàÂ∏åÁöÑ ÁÑ∂ÂêéÔºå‰∏çÂèØÂèòÂØπË±°ÔºàÊï∞Â≠óÔºåÂ≠óÁ¨¶‰∏≤ÔºåÂÖÉÁªÑÔºâÊòØÂèØÂìàÂ∏åÁöÑ ‰ΩÜÊòØÊúâ‰∏™Áâπ‰æãÔºå[{}],Âç≥ÊòØÂàóË°®‰∏≠ÂµåÂ•óÂ≠óÂÖ∏ÊòØÂèØÂìàÂ∏åÁöÑ 123456789101112portfplio = &#123; &#123;'name':'ÈôàÂ∞èÂùö1', 'prices':91.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö2', 'prices':92.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö3', 'prices':93.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö4', 'prices':94.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö5', 'prices':95.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö6', 'prices':96.1&#125;,&#125;# ÂèëÁîüÂºÇÂ∏∏: TypeError# unhashable type: 'dict'print(heapq.nlargest(3, portfplio, key=lambda x:x['prices'])) 123456789101112portfplio = [ &#123;'name':'ÈôàÂ∞èÂùö1', 'prices':91.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö2', 'prices':92.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö3', 'prices':93.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö4', 'prices':94.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö5', 'prices':95.1&#125;, &#123;'name':'ÈôàÂ∞èÂùö6', 'prices':96.1&#125;,]print(heapq.nlargest(3, portfplio, key=lambda x:x['prices']))# [&#123;'name': 'ÈôàÂ∞èÂùö6', 'prices': 96.1&#125;, &#123;'name': 'ÈôàÂ∞èÂùö5', 'prices': 95.1&#125;, &#123;'name': 'ÈôàÂ∞èÂùö4', 'prices': 94.1&#125;]]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>ÁºñÁ®ãËØ≠Ë®Ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexoÂçöÂÆ¢Á≥ªÁªü]]></title>
    <url>%2Fmyblog_1%2F</url>
    <content type="text"><![CDATA[‰ΩøÁî®hexo Ê°ÜÊû∂Êê≠Âª∫‰∏™‰∫∫ÂçöÂÆ¢ÂáÜÂ§áÂ∑•‰ΩúÔºö Ê≥®ÂÜåGithubË¥¶Âè∑ ÂÆâË£Önode.js ÂÆâË£Ögit Êê≠Âª∫ËøáÁ®ã ÊâìÂºÄgit bash,ÈÖçÁΩÆgit ËæìÂÖ• git config ‚Äìglobal user.name ‚Äú‰Ω†ÁöÑÁî®Êà∑Âêç‚Äù ËæìÂÖ• git config ‚Äìglobal user.email ‚Äú‰Ω†ÁöÑÈÇÆÁÆ±‚Äù ÁôªÂΩï‰Ω†ÁöÑgithubË¥¶Âè∑ÔºåÂàõÂª∫‰∏Ä‰∏™‰ªìÂ∫ì ‰ªìÂ∫ìÂêçÊòØÈªòËÆ§Ê†ºÂºèÁöÑ username.github.io (usernameÊòØ‰Ω†ÁöÑÁî®Êà∑Âêç) ÈÖçÁΩÆssh key ÊâìÂºÄgit bashËæìÂÖ•ssh-keygen -t rsa -C ‚ÄúÈÇÆ‰ª∂Âú∞ÂùÄ‚ÄùÔºåËøûÁª≠ÂõûËΩ¶ÈîÆ3Ê¨°ÁÑ∂ÂêéÂ∞±‰ºöÁîüÊàê‰∏Ä‰∏™Êñá‰ª∂ÔºåË∑ØÂæÑÂú®CÁõòÁõÆÂΩï‰∏ãÁî®Êà∑ÁõÆÂΩï‰∏ãÊúâ‰∏™.sshÊñá‰ª∂ÔºåÈáåÈù¢Êúâ‰∏§‰∏™Êñá‰ª∂ÔºåÂ≠òÊîæÁùÄssh key ÊâìÂºÄid_rsa.pubÊñá‰ª∂ÔºåÂ§çÂà∂ÔºåÁÑ∂ÂêéÂà∞‰Ω†ÁöÑgithub‰∏ªÈ°µ‰∏äÊâìÂºÄsettings,Âú®ssh and GPG Keys‰∏ãÁ≤òË¥¥ ÊâìÂºÄgit bashÔºå‰∏ãËΩΩhexo ÂëΩ‰ª§Ôºönpm install -g hexo ËÆæÁΩÆÂ≠òÊîæÁöÑ‰ΩçÁΩÆÔºåÂú®‰ªªÊÑè‰∏Ä‰∏™Áõò‰∏≠ÔºåÂàõÂª∫‰∏Ä‰∏™ÁõÆÂΩïÔºåËøôÊòØ‰Ω†Â≠òÊîæ‰ª£Á†ÅÁöÑ‰ΩçÁΩÆÔºåÊâìÂºÄÊñá‰ª∂ÔºåÈº†Ê†áÂè≥ÈîÆÔºåÊúâGit bash here,ÁÑ∂ÂêéÂ∞±ËøõÂÖ•Âà∞Ëøô‰∏™ÁõÆÂΩïÂú®git bashÁéØÂ¢É ÂàùÂßãÂåñ ÂëΩ‰ª§Ôºöhexo init,ËøôÊó∂hexoÂ∞±‰ºöËá™Âä®ÁîüÊàê‰∏Ä‰∏™Êñá‰ª∂ ÂÖ∂‰∏≠ÁöÑsourseÊñá‰ª∂Â§πÂ∞±Â≠òÊîæ‰Ω†ÁöÑmdÊñá‰ª∂ÔºåÁî®Êù•ÂÜôÂçöÂÆ¢ publicÂ≠òÊîæmdÊñá‰ª∂ÂØπÂ∫îÁöÑhtmlÊñá‰ª∂ _config.ymlÊñá‰ª∂Â∞±ÊòØÈÖçÁΩÆÊñá‰ª∂Ôºå‰øÆÊîπÈÖçÁΩÆÈÉΩÊòØÈúÄË¶ÅÊìç‰Ωú‰ªñ themeÊñá‰ª∂Â§πÂ∞±Â≠òÊîæ‰Ω†ÁöÑÂçöÂÆ¢Ê°ÜÊû∂ÁöÑ‰∏ªÈ¢òÔºåÂØπÂ∫îÁöÑ‰∏ªÈ¢òÂèØ‰ª•ÂéªÁΩë‰∏ähexoÁöÑÂÆòÊñπÁΩëÁ´ô‰∏ãËΩΩÔºåÂ∏∏Áî®ÁöÑyilia ÁÑ∂ÂêéÂú®git bashËæìÂÖ•ÂëΩ‰ª§ hexo g ÁîüÊàêÈùôÊÄÅÈ°µÈù¢Âà∞pubilcÊñá‰ª∂ÔºåËæìÂÖ•hexo s,ÂêØÂä®Êú¨Âú∞ÊúçÂä°Âô®Ôºålocalhost::4000Êü•ÁúãÊòØÂê¶ÊàêÂäü ÁÑ∂ÂêéÁé∞Âú®Ë¶Å‰∏ä‰º†Âà∞github‰∏äÔºåÂÖàÂú®‰πãÂâçÁöÑ_config.ymlÊñá‰ª∂‰∏≠ÈÖçÁΩÆ‰∏Ä‰∏ãÔºåÈÖçÁΩÆÂÆåÂêéËæìÂÖ•hexo d‰∏ä‰º†ÔºåÊâìÂºÄ‚ÄùÁî®Êà∑Âêç.github.io‚ÄùÂ∞±ÂèØ‰ª•ÁúãÂà∞Âï¶ÔºÅÔºÅÔºÅ &gt;deploy: &gt; type: git &gt; repository: ËøôÈáåÂ°´ÂÜô‰Ω†‰πãÂâçÈÖçÁΩÆsshÁöÑ‰∏§‰∏™urlÔºåÈöè‰æø‰∏Ä‰∏™ÈÉΩÂèØ‰ª• ‰æãÂ¶ÇÔºögit@github.com:liuxianan/liuxianan.github.io.git &gt; branch: master]]></content>
      <categories>
        <category>ÂçöÂÆ¢Ê°ÜÊû∂</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Êó•Â∏∏</tag>
      </tags>
  </entry>
</search>
