<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈小坚の博客</title>
  
  <subtitle>记录学习生活的点点滴滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chenchenxiaojian.github.io/"/>
  <updated>2020-04-10T07:32:13.143Z</updated>
  <id>http://chenchenxiaojian.github.io/</id>
  
  <author>
    <name>陈小坚(｀・ω・´)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于vscode-ssh远程连接下openssh与git自带的ssh的冲突解决方法</title>
    <link href="http://chenchenxiaojian.github.io/%E5%85%B3%E4%BA%8Evscode-ssh%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E4%B8%8Bopenssh%E4%B8%8Egit%E8%87%AA%E5%B8%A6%E7%9A%84ssh%E7%9A%84%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://chenchenxiaojian.github.io/%E5%85%B3%E4%BA%8Evscode-ssh%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E4%B8%8Bopenssh%E4%B8%8Egit%E8%87%AA%E5%B8%A6%E7%9A%84ssh%E7%9A%84%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-10T07:12:23.000Z</published>
    <updated>2020-04-10T07:32:13.143Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>报错 过程试图写入的管道不存在</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>本机同时装有openssh和git，这样就会冲突了</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>将openssh卸载了，同时指定vscode的默认ssh命令路径，将下列配置添加到vscode的用户配置的setting.json中</p><p>(可以打开命令行，where ssh，很奇怪：cmd只有显示openssh，git命令行下显示git自带的和openssh)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">"remote.SSH.path": "E:\\git\\Git\\usr\\bin\\ssh.exe",</span><br><span class="line">"remote.SSH.showLoginTerminal": true, //配置登录的终端</span><br></pre></td></tr></table></figure><h3 id="测试出现的问题"><a href="#测试出现的问题" class="headerlink" title="测试出现的问题"></a>测试出现的问题</h3><p>ssh: permission denied (publickey)</p><h3 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h3><p>远程Linux的openssh-server的配置文件问题，我们可以修改<code>/etc/ssh/sshd_config</code>的配置文件，配置密码登录；相关配置修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">PasswordAuthentication</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">PermitRootLogin</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">PubkeyAuthentication</span> <span class="literal">no</span></span><br><span class="line"><span class="comment">#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>成功啦😱😱😱</p><p><img src="https://i.loli.net/2020/04/10/j6BAp5XT9qbvrDa.png" alt="图片.png"></p><p><img src="https://i.loli.net/2020/04/10/mRunsLCZFS1U4Eq.png" alt="图片.png"></p><p><img src="https://i.loli.net/2020/04/10/6VQriZIgyJ4cCs1.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;报错 过程试图写入的管道不存在&lt;/p&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://chenchenxiaojian.github.io/categories/Linux/"/>
    
      <category term="常见问题" scheme="http://chenchenxiaojian.github.io/categories/Linux/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="Linux" scheme="http://chenchenxiaojian.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-旋转数组</title>
    <link href="http://chenchenxiaojian.github.io/leetcode-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84/"/>
    <id>http://chenchenxiaojian.github.io/leetcode-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84/</id>
    <published>2020-04-07T09:00:48.000Z</published>
    <updated>2020-04-07T09:29:53.471Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="https://leetcode-cn.com/problems/rotate-matrix-lcci/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/rotate-matrix-lcci/</a></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>找规律，将二维数组的每个下标都列出出来，然后可以发现新数组的下标是旧数组的（x,y）==》（n-y-1,x）;</li></ul><p>需要注意的是，我们遍历时是从0开始，所以才减去1，如果从1开始，那么要+1.找规律即可。</p><ul><li><p>另一难点，原地旋转，不借助辅助空间，还是找规律的….<del>（找了一个小时）</del></p><p>（3,1）==》（1,1）</p><p>（3,3）==》（3,1）</p><p>（1,3）==》（3,3）</p><p>（1,1）==》（1,3）</p><p>可以发现，回到原点了</p></li><li><p>那么存在另外一个难点，如何确定哪些数应该进行上述的变换，我们可以发现（1,1）和（1,3）是对称的，那么我们变换了（1,1），（（1,3）也就是自然地也跟着变换），因此我们只需要变换矩阵中的对称部分即可，这样就保证不会重复。需要注意n=奇数时，对应变换的矩阵的确定。</p></li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; &amp;matrix)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = matrix.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n/<span class="number">2</span>;i++)</span><br><span class="line">        &#123; <span class="comment">//需要注意是从0开始，如果是从1开始的话，那么是n+1，而不是n-1;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; (n+<span class="number">1</span>)/<span class="number">2</span>;j++) <span class="comment">//这里的n+1就是奇数的时候中间的数</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = matrix[i][j];</span><br><span class="line">                matrix[i][j] = matrix[n<span class="number">-1</span>-j][i];</span><br><span class="line">                matrix[n<span class="number">-1</span>-j][i] = matrix[n<span class="number">-1</span>-i][n<span class="number">-1</span>-j];</span><br><span class="line">                matrix[n<span class="number">-1</span>-i][n<span class="number">-1</span>-j] = matrix[j][n<span class="number">-1</span>-i];</span><br><span class="line">                matrix[j][n<span class="number">-1</span>-i] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;,&#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;&#125;;</span><br><span class="line">    Solution so;</span><br><span class="line">    so.rotate(res);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; res.size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; res.size();j++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; res[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="想不到的"><a href="#想不到的" class="headerlink" title="想不到的"></a>想不到的</h3><ul><li>先上下变换，然后对角线变换。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/rotate-matrix-lcci/&quot; target=
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="leetcode" scheme="http://chenchenxiaojian.github.io/categories/OJ/leetcode/"/>
    
    
      <category term="数组" scheme="http://chenchenxiaojian.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-删除最外层的括号</title>
    <link href="http://chenchenxiaojian.github.io/leetcode-%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%E6%8B%AC%E5%8F%B7/"/>
    <id>http://chenchenxiaojian.github.io/leetcode-%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%E6%8B%AC%E5%8F%B7/</id>
    <published>2020-04-04T03:45:45.000Z</published>
    <updated>2020-04-04T03:52:24.917Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="https://leetcode-cn.com/problems/remove-outermost-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-outermost-parentheses/</a></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>使用栈，遍历字符串，遇到左括号就压入，遇到右括号就弹出，当栈为空时，说明当前index是外层要舍去的括号，根据下标之间的关系即可找到“原语”</li><li>另外一种思路：使用两个变量left和right，初始化left = 1，right = 0；这样可以忽略外层的左括号，方便后面判断left != right时可以追加到res，而不会受到外层左括号的影响。</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">removeOuterParentheses</span><span class="params">(<span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; S.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(S[i]==<span class="string">'('</span>)</span><br><span class="line">                left++;</span><br><span class="line">            <span class="keyword">else</span>    </span><br><span class="line">                right++;</span><br><span class="line">            <span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">if</span> (left != right)</span><br><span class="line">                res.push_back(S[i]);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123; <span class="comment">//相等，说明左右括号配对，所以外层括号不能压入</span></span><br><span class="line">                right = <span class="number">0</span>;</span><br><span class="line">                left = <span class="number">1</span>;</span><br><span class="line">                i++; <span class="comment">//忽略外层的左括号</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"(()())"</span>;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.removeOuterParentheses(s) &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/remove-outermost-parentheses
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="leetcode" scheme="http://chenchenxiaojian.github.io/categories/OJ/leetcode/"/>
    
    
      <category term="栈" scheme="http://chenchenxiaojian.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-字符串转换为整数</title>
    <link href="http://chenchenxiaojian.github.io/leetcode-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0/"/>
    <id>http://chenchenxiaojian.github.io/leetcode-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0/</id>
    <published>2020-04-03T12:33:15.000Z</published>
    <updated>2020-04-03T12:46:42.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="https://leetcode-cn.com/problems/string-to-integer-atoi/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/string-to-integer-atoi/</a></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>首先去掉前置多余空格</li><li>判断正负情况，需要注意出现两个正负号的字符都return 0，例如“+-2”；</li><li>接下来在剩余的字符串中提取出数字即可，我们只需要判断这个字符是不是0~9，用isdigit()函数判断即可</li><li>提取数字需要判断溢出情况，我们通过判断当前res*10加上下一个数字会不会大于2147483647即可，对于-2147483648这种情况，虽然逻辑上从我们的代码上判定位溢出，但是返回结果恰好等于-2147483648。</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (str[i] == <span class="string">' '</span>) <span class="comment">//处理前置空格</span></span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'+'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">'-'</span>) <span class="comment">//特殊情况，'+-2'==》 0</span></span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            flag = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; str.size() &amp;&amp; <span class="built_in">isdigit</span>(str[i]))</span><br><span class="line">        &#123; <span class="comment">//判断是否为数字</span></span><br><span class="line">            <span class="keyword">int</span> temp = str[i] - <span class="number">48</span>;</span><br><span class="line">            <span class="comment">//处理溢出</span></span><br><span class="line">            <span class="comment">// if(res &gt; INT32_MAX / 10 || ((res == INT32_MAX/10) &amp;&amp; temp &gt; 7))</span></span><br><span class="line">            <span class="keyword">if</span> (res &gt; (INT32_MAX - temp) / <span class="number">10</span>) <span class="comment">//溢出判断，这不用将res设置为long</span></span><br><span class="line">            <span class="comment">//"-2147483648"虽然比INT32_MAX大，虽然判定位溢出，但是实际上不溢出的，我们的结果返回的正确的</span></span><br><span class="line">                <span class="keyword">return</span> flag == <span class="number">1</span> ? INT32_MAX : INT32_MIN;</span><br><span class="line"></span><br><span class="line">            res = res * <span class="number">10</span> + temp;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag*res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"-2147483648"</span>;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.myAtoi(s) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试样例"><a href="#测试样例" class="headerlink" title="测试样例"></a>测试样例</h3><ul><li>正确的正数，负数</li><li>溢出的正数，负数</li><li>非法字符和数字的混合</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/string-to-integer-atoi/&quot; tar
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="leetcode" scheme="http://chenchenxiaojian.github.io/categories/OJ/leetcode/"/>
    
    
      <category term="字符串" scheme="http://chenchenxiaojian.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-接雨水</title>
    <link href="http://chenchenxiaojian.github.io/leetcode-%E6%8E%A5%E9%9B%A8%E6%B0%B4/"/>
    <id>http://chenchenxiaojian.github.io/leetcode-%E6%8E%A5%E9%9B%A8%E6%B0%B4/</id>
    <published>2020-04-02T14:33:14.000Z</published>
    <updated>2020-04-02T14:38:34.868Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="https://leetcode-cn.com/problems/trapping-rain-water/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/trapping-rain-water/</a></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>栈的做法：维护一个栈，这个栈其实就是一个递减的水柱下标的集合，但遇到一个新的水柱比当前栈顶水柱高，那么就有积水了，难点是要理解如何求出这些积水（长乘宽）。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*暴力法</span></span><br><span class="line"><span class="comment">            int res = 0;</span></span><br><span class="line"><span class="comment">            //按列算，首尾不用算，默认接不到水，</span></span><br><span class="line"><span class="comment">            for(int i = 1;i &lt; height.size()-1;i++)&#123;</span></span><br><span class="line"><span class="comment">                int maxLeft = 0;</span></span><br><span class="line"><span class="comment">                int maxRigth = 0;</span></span><br><span class="line"><span class="comment">                for(int j = i; j &gt;= 0;j--) &#123; //当前列左边的最大值</span></span><br><span class="line"><span class="comment">                    maxLeft = max(maxLeft,height[j]);</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                for (int j = i;j&lt;height.size();j++)&#123;//当前列右边边的最大值</span></span><br><span class="line"><span class="comment">                    maxRigth = max(maxRigth,height[j]);</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                //木桶效应</span></span><br><span class="line"><span class="comment">                res += min(maxLeft,maxRigth)-height[i];</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            return res;</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*用两个数组分别保存每个列的左边最大值和右边最大值</span></span><br><span class="line"><span class="comment">        if(height.size()==0)</span></span><br><span class="line"><span class="comment">            return 0; //平台所谓的健壮性，加上就过了。。不加报一些奇奇怪怪错误</span></span><br><span class="line"><span class="comment">        int res = 0;</span></span><br><span class="line"><span class="comment">        int size = height.size();</span></span><br><span class="line"><span class="comment">        vector&lt;int&gt;max_left(size);</span></span><br><span class="line"><span class="comment">        vector&lt;int&gt;max_right(size);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        max_left[0] = height[0];</span></span><br><span class="line"><span class="comment">        for(int i = 1;i&lt;size-1;i++)&#123;</span></span><br><span class="line"><span class="comment">            max_left[i] = max(height[i],max_left[i-1]);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        max_right[size-1] = height[size-1];</span></span><br><span class="line"><span class="comment">        for(int i = size-2;i&gt;=0;i--)</span></span><br><span class="line"><span class="comment">            max_right[i] = max(height[i],max_right[i+1]);</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        for(int i = 1;i&lt; size-1;i++)&#123;</span></span><br><span class="line"><span class="comment">            res += min(max_left[i],max_right[i])-height[i];</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return res;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">       <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s; <span class="comment">//存放每一列雨水的下标（实际上存储的下标值对应的水柱是递减的）</span></span><br><span class="line">       <span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span> (cur &lt; height.size())&#123;</span><br><span class="line">           <span class="comment">//当前的水柱大于栈顶的水柱，说明有积水</span></span><br><span class="line">           <span class="keyword">while</span> (!s.empty() &amp;&amp; height[cur] &gt; height[s.top()])&#123;</span><br><span class="line">               <span class="keyword">int</span> top = s.top();</span><br><span class="line">               s.pop();</span><br><span class="line">               <span class="keyword">if</span>(s.empty())  <span class="comment">//为空，说明没有积水</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">               res += (min(height[cur],height[s.top()]) - height[top]) * (cur-s.top()<span class="number">-1</span>); <span class="comment">//长乘宽</span></span><br><span class="line">           &#125;</span><br><span class="line">           s.push(cur++);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;height = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.trap(height) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/trapping-rain-water/&quot; target
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="leetcode" scheme="http://chenchenxiaojian.github.io/categories/OJ/leetcode/"/>
    
    
      <category term="栈" scheme="http://chenchenxiaojian.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-有效的括号</title>
    <link href="http://chenchenxiaojian.github.io/leetcode-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/"/>
    <id>http://chenchenxiaojian.github.io/leetcode-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</id>
    <published>2020-03-26T13:42:51.000Z</published>
    <updated>2020-03-26T13:48:35.924Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-parentheses/</a></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>栈解法，遇到左括号压入栈中，遇到右括号与栈顶元素进行配对，配对成功弹出栈顶元素，配对失败返回false</li><li>需要注意只有右括号的情况</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="string">""</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (s.size() % <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; temp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!temp.empty()) <span class="comment">//需要注意只有右括号的情况</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[i] == <span class="string">'('</span> || s[i] == <span class="string">'&#123;'</span> || s[i] == <span class="string">'['</span>)</span><br><span class="line">                    temp.push(s[i]);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//()差1，&#123;&#125;[]差2</span></span><br><span class="line">                    <span class="keyword">if</span> (s[i] == temp.top() + <span class="number">1</span> || s[i] == temp.top() + <span class="number">2</span>)</span><br><span class="line">                        temp.pop();</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                temp.push(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp.size()==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; "hellp world" &lt;&lt; endl;</span></span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"()"</span>;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.isValid(s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/valid-parentheses/&quot; 
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="leetcode" scheme="http://chenchenxiaojian.github.io/categories/OJ/leetcode/"/>
    
    
      <category term="栈" scheme="http://chenchenxiaojian.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>python-项目部署</title>
    <link href="http://chenchenxiaojian.github.io/python-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>http://chenchenxiaojian.github.io/python-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</id>
    <published>2020-03-20T23:20:47.000Z</published>
    <updated>2020-03-21T02:16:59.726Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h3><ul><li><p>在所在项目生成相关包的requirements.txt文件</p><p><code>pip freeze &gt; requirements.txt</code></p></li><li><p>在云主机上设置python虚拟环境，直接安装<code>virtualenvwrapper</code>即可，<a href="https://virtualenvwrapper.readthedocs.io/en/latest/" target="_blank" rel="noopener">https://virtualenvwrapper.readthedocs.io/en/latest/</a></p><p>需要注意这里的坑，需要使用pip3，不要后面配置python3找到这个脚本。</p></li><li><p>找到 virtualenvwrapper.sh的位置，添加环境变量</p></li></ul><p><img src="https://i.loli.net/2020/03/21/15O9Tru63yNX47l.png" alt="图片.png"></p><ul><li><p>配置启动文件<code>vim ~/.bashrc</code>，编辑完<code>source ~/.bashrc</code></p><blockquote><p>Add three lines to your shell startup file (<code>.bashrc</code>, <code>.profile</code>, etc.) to set the location where the virtual environments should live, the location of your development project directories, and the location of the script installed with this package:</p></blockquote><ul><li><p>我们只需设置虚拟环境应驻留的位置与此软件包一起安装的脚本的位置即可</p><p><img src="https://i.loli.net/2020/03/21/VFyrIsKizGhpbwP.png" alt="图片.png"></p></li></ul></li><li><p><code>workon</code>查看有没有虚拟环境，</p><p><code>mkvirtual + 环境名</code> 创建环境</p><p>deactivate : 退出虚拟环境</p><p>workon + 环境名：进入虚拟环境</p><p><img src="https://i.loli.net/2020/03/21/Q37znBfUsD6hWXF.png" alt="图片.png"></p></li><li><p>进入虚拟环境后，根据requirements.txt安装项目所需的环境</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(cov) [root@chenxiaojian 疫情]<span class="comment"># pip3 install -r requirements.txt</span></span><br></pre></td></tr></table></figure><h3 id="开发模式部署"><a href="#开发模式部署" class="headerlink" title="开发模式部署"></a>开发模式部署</h3><ul><li><p>项目是一个flask项目，将app.run(host=”0.0.0.0”,port=8000)指定所有主机和端口访问</p></li><li><p>开放云服务器的8000端口</p><p><img src="https://i.loli.net/2020/03/21/L6EQv8RUTB7CbgV.png" alt="图片.png"></p></li><li><p>主机ip:8000进行访问</p></li></ul><h3 id="生产模式部署"><a href="#生产模式部署" class="headerlink" title="生产模式部署"></a>生产模式部署</h3><ul><li><p>安装nginx，进行反向代理（也就是我们访问ip地址,默认是80端口，然后nginx反向代理到本机的8000端口，也就是我们的web项目。）</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> nginx</span><br></pre></td></tr></table></figure></li><li><p>安装gunicorn，进入虚拟环境中安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> gunicorn</span><br></pre></td></tr></table></figure></li><li><p>用gunicorn启动app.py（第一个app指的是app.py，第二个app指的是flask实例的对象）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(cov) [root@chenxiaojian 疫情]<span class="comment"># gunicorn -b 127.0.0.1:8000 -D app:app</span></span><br><span class="line">(cov) [root@chenxiaojian 疫情]<span class="comment"># ps aux | grep gunicorn</span></span><br><span class="line">root      1444  0.3  0.8 222220 16640 ?        S    09:54   0:00 /root/.virtualenvs/cov/bin/python /root/.virtualenvs/cov/bin/gunicorn -b 127.0.0.1:8000 -D app:app</span><br><span class="line">root      1525  0.0  0.0 112728   976 pts/0    R+   09:54   0:00 grep --color=auto gunicorn</span><br><span class="line">root     14988  0.0  0.8 222476 16664 ?        S    09:45   0:00 /root/.virtualenvs/cov/bin/python /root/.virtualenvs/cov/bin/gunicorn -b 127.0.0.1 -D app:app</span><br><span class="line">root     14991  0.2  1.5 247864 29384 ?        S    09:45   0:01 /root/.virtualenvs/cov/bin/python /root/.virtualenvs/cov/bin/gunicorn -b 127.0.0.1 -D app:app</span><br><span class="line">(cov) [root@chenxiaojian 疫情]<span class="comment">#</span></span><br></pre></td></tr></table></figure></li></ul><p>启动nginx服务失败，查看错误，显示端口80被占用，<code>netstat -ltunp</code>查看，但是我的端口明明被nginx占用了，只能查看进程，并kill。</p><p><img src="https://i.loli.net/2020/03/21/74y8Rfp3VaSLMWs.png" alt="图片.png"></p><ul><li><p>/etc/nginx/nginx.conf</p><p>需要注意：gunicorn启动的端口号要和nginx配置的端口号要一样8000.</p></li></ul><p>  (server_name：填写自己的ip或者域名)</p><p>  <img src="https://i.loli.net/2020/03/21/o7d3ltqgLuiyAjZ.png" alt="图片.png"></p><p>  查看nginx配置是否正常</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(cov) [root@chenxiaojian 疫情]<span class="comment"># nginx -t -c /etc/nginx/nginx.conf</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><ul><li>访问ip或者域名成功！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;环境部署&quot;&gt;&lt;a href=&quot;#环境部署&quot; class=&quot;headerlink&quot; title=&quot;环境部署&quot;&gt;&lt;/a&gt;环境部署&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在所在项目生成相关包的requirements.txt文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip freeze
      
    
    </summary>
    
    
      <category term="Python" scheme="http://chenchenxiaojian.github.io/categories/Python/"/>
    
    
      <category term="编程语言" scheme="http://chenchenxiaojian.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>编译原理-绪论</title>
    <link href="http://chenchenxiaojian.github.io/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-%E7%BB%AA%E8%AE%BA/"/>
    <id>http://chenchenxiaojian.github.io/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-%E7%BB%AA%E8%AE%BA/</id>
    <published>2020-03-18T23:34:43.000Z</published>
    <updated>2020-03-19T02:25:00.207Z</updated>
    
    <content type="html"><![CDATA[<ul><li>编译阶段：将源程序（高级语言）变换成目标程序（低级语言）</li><li>运行阶段：由所生成的目标程序连同运行系统（数据空间分配子程序，标准函数程序等）接收程序的初始数据作为输入，运行后输出计算结果</li><li>如果编译生成的目标程序是汇编语言形式的，那么在编译与运行阶段之间还要添加一个汇编阶段，它将编译生成的汇编语言目标程序再经过汇编程序变换为机器语言目标程序。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;编译阶段：将源程序（高级语言）变换成目标程序（低级语言）&lt;/li&gt;
&lt;li&gt;运行阶段：由所生成的目标程序连同运行系统（数据空间分配子程序，标准函数程序等）接收程序的初始数据作为输入，运行后输出计算结果&lt;/li&gt;
&lt;li&gt;如果编译生成的目标程序是汇编语言形式的，那
      
    
    </summary>
    
    
      <category term="编译原理" scheme="http://chenchenxiaojian.github.io/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="编译原理" scheme="http://chenchenxiaojian.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>嵌入式-任务一</title>
    <link href="http://chenchenxiaojian.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F-%E4%BB%BB%E5%8A%A1%E4%B8%80/"/>
    <id>http://chenchenxiaojian.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F-%E4%BB%BB%E5%8A%A1%E4%B8%80/</id>
    <published>2020-03-16T02:53:21.000Z</published>
    <updated>2020-03-16T14:35:43.292Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>查看centos发布版本</p><p><code>cat /etc/redhat-release</code></p></li><li><p>查看linux的64位的</p><p><code>uname -a</code></p></li><li><p>下载ndk编译工具</p><p><code>wget -c http://dl.google.com/android/ndk/android-ndk64-r10b-linux-x86_64.tar.bz2</code></p></li><li><p>修改这个安装的执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@chenxiaojian qianrushi]# chmod 777 android-ndk64-r10b-linux-x86_64.tar.bz2</span><br></pre></td></tr></table></figure></li><li><p>安装包的.tar.bz2格式，解压是需要bzip2这个包，不然就会出问题啦</p><p><img src="https://i.loli.net/2020/03/16/d1oyHBCDL7mZegl.png" alt="图片.png"></p><ul><li><p>安装bzip2 <code>yum -y install bzip2</code></p></li><li><p>解压 (在当前文件夹中解压，-x表示解压，-j表示这个压缩包是bzip压缩方式，-f是必选)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xjf /home/qianrushi/android-ndk64-r10b-linux-x86_64.tar.bz2</span><br></pre></td></tr></table></figure></li></ul></li><li><p>NDK环境进行配置</p><ul><li><p>打开~/.bashrc文件进行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@chenxiaojian android-ndk-r10b]# vim ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>在文件末尾添加扩展命令（其实就是相当于windows的path环境变量配置）</p><p>NDK后面带安装的路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export  NDK=/home/qianrushi/android-ndk/android-ndk-r10b</span><br><span class="line">export  PATH=$&#123;PATH&#125;:$NDK</span><br></pre></td></tr></table></figure></li><li><p>保存文件使之生效，并执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@chenxiaojian android-ndk-r10b]# source ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>验证 输入<code>ndk-build</code></p><p><img src="https://i.loli.net/2020/03/16/Rp9LgE1Fb4rtqzY.png" alt="图片.png"></p></li></ul></li><li><p>配置安卓开发环境</p><p><a href="https://developer.android.google.cn/studio#downloads" target="_blank" rel="noopener">android studio下载</a></p><p><a href="https://developer.android.google.cn/studio/install" target="_blank" rel="noopener">安装教程</a></p><p><a href="https://blog.csdn.net/da_caoyuan/article/details/104343058" target="_blank" rel="noopener">错误解决</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看centos发布版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat /etc/redhat-release&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看linux的64位的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uname -a&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;l
      
    
    </summary>
    
    
      <category term="嵌入式" scheme="http://chenchenxiaojian.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="嵌入式" scheme="http://chenchenxiaojian.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>mysql-相关命令</title>
    <link href="http://chenchenxiaojian.github.io/mysql-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    <id>http://chenchenxiaojian.github.io/mysql-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</id>
    <published>2020-03-14T08:36:12.000Z</published>
    <updated>2020-03-14T11:07:14.571Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>查看表的结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc history;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/14/LykMu8ViUe9CQA4.png" alt="图片.png"></p></li></ul><p>###### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看表的结构&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td clas
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://chenchenxiaojian.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://chenchenxiaojian.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>关于在linux下出现stdio.h文件不存在问题的解决方法</title>
    <link href="http://chenchenxiaojian.github.io/%E5%85%B3%E4%BA%8E%E5%9C%A8linux%E4%B8%8B%E5%87%BA%E7%8E%B0stdio-h%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://chenchenxiaojian.github.io/%E5%85%B3%E4%BA%8E%E5%9C%A8linux%E4%B8%8B%E5%87%BA%E7%8E%B0stdio-h%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-03-10T02:58:26.000Z</published>
    <updated>2020-03-10T03:11:39.892Z</updated>
    
    <content type="html"><![CDATA[<h5 id="出现stdio-h文件找不到的问题，使用如下命令："><a href="#出现stdio-h文件找不到的问题，使用如下命令：" class="headerlink" title="出现stdio.h文件找不到的问题，使用如下命令："></a>出现stdio.h文件找不到的问题，使用如下命令：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@chenxiaojian:/etc/apt<span class="comment"># apt-get install libc6-dev</span></span><br></pre></td></tr></table></figure><h5 id="这个时候按道理能够成功解决，但是却出现如下错误："><a href="#这个时候按道理能够成功解决，但是却出现如下错误：" class="headerlink" title="这个时候按道理能够成功解决，但是却出现如下错误："></a>这个时候按道理能够成功解决，但是却出现如下错误：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@chenxiaojian:/etc/apt<span class="comment"># apt-get install libc6-dev</span></span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">有一些软件包无法被安装。如果您用的是 unstable 发行版，这也许是</span><br><span class="line">因为系统无法达到您要求的状态造成的。该版本中可能会有一些您需要的软件</span><br><span class="line">包尚未被创建或是它们已被从新到(Incoming)目录移出。</span><br><span class="line">下列信息可能会对解决问题有所帮助：</span><br><span class="line"></span><br><span class="line">下列软件包有未满足的依赖关系：</span><br><span class="line"> libc6-dev : 依赖: libc6 (= 2.23-0ubuntu11) 但是 2.27-3ubuntu1 正要被安装</span><br><span class="line">             依赖: libc-dev-bin (= 2.23-0ubuntu11)</span><br><span class="line">E: 无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系。</span><br></pre></td></tr></table></figure><h5 id="解决方法：更换软件源；需要注意的问题就是：根据自己linux的版本进行更换才能成功"><a href="#解决方法：更换软件源；需要注意的问题就是：根据自己linux的版本进行更换才能成功" class="headerlink" title="解决方法：更换软件源；需要注意的问题就是：根据自己linux的版本进行更换才能成功"></a>解决方法：更换软件源；需要注意的问题就是：根据自己linux的版本进行更换才能成功</h5><ul><li><strong>查看ubantu版本，使用命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@chenxiaojian:/etc/apt<span class="comment"># lsb_release -c</span></span><br><span class="line">Codename:bionic</span><br></pre></td></tr></table></figure><ul><li><p><strong>bionic</strong>：表示的ubantu的18.04的版本</p></li><li><p>更换软件源：/etc/apt/sources.list 文件，<strong>阿里云的软件源</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure></li><li><p>执行命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure></li><li><p><strong>问题解决</strong></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;出现stdio-h文件找不到的问题，使用如下命令：&quot;&gt;&lt;a href=&quot;#出现stdio-h文件找不到的问题，使用如下命令：&quot; class=&quot;headerlink&quot; title=&quot;出现stdio.h文件找不到的问题，使用如下命令：&quot;&gt;&lt;/a&gt;出现stdio.h文件
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://chenchenxiaojian.github.io/categories/Linux/"/>
    
      <category term="常见问题" scheme="http://chenchenxiaojian.github.io/categories/Linux/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="Linux" scheme="http://chenchenxiaojian.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-构建乘积数组</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84/</id>
    <published>2020-02-27T13:50:19.000Z</published>
    <updated>2020-02-27T13:52:54.257Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个数组A[0,1,…,n-1],请构建一个数组B[0,1,…,n-1],其中B中的元素B[i]=A[0]<em>A[1]</em>…<em>A[i-1]*A[i+1]</em>…*A[n-1]。不能使用除法。（注意：规定B[0] = A[1] * A[2] * … * A[n-1]，B[n-1] = A[0] * A[1] * … * A[n-2];）</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>将B数组弄成矩阵</li><li>连乘计算上三角</li><li>连乘计算下三角并将之乘到上三角中</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; multiply(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res(A.size(),<span class="number">1</span>); <span class="comment">//需要被初始化</span></span><br><span class="line">       </span><br><span class="line">        <span class="comment">//构建下三角</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; A.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res[i] = res[i<span class="number">-1</span>] * A[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将上三角的值乘下三角</span></span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = A.size()<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = temp * A[i+<span class="number">1</span>];</span><br><span class="line">            res[i] = temp * res[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res = so.multiply(a);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res.size();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;给定一个数组A[0,1,…,n-1],请构建一个数组B[0,1,…,n-1],其中B中的元素B[i]=A[0]&lt;em&gt;A[1
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="数组" scheme="http://chenchenxiaojian.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-将字符串转换为数字</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97/</id>
    <published>2020-02-27T07:27:16.000Z</published>
    <updated>2020-02-27T07:31:06.866Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>将一个字符串转换成一个整数，要求不能使用字符串转换整数的库函数。        数值为0或者字符串不是一个合法的数值则返回0</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入一个字符串,包括数字字母符号,可以为空</span><br></pre></td></tr></table></figure><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果是合法的数值表达则返回该数字，否则返回<span class="number">0</span></span><br></pre></td></tr></table></figure><p>示例1</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+<span class="number">2147483647</span></span><br><span class="line">    <span class="number">1</span>a33</span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2147483647</span></span><br><span class="line">    <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><ul><li>正负号</li><li>非法输入abv</li><li>整数范围，判断是否溢出</li><li>是否前缀0的输出（好像没有特定要求）（”01023“）==》（1023）？</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxnum 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> minnum 0x80000000</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">StrToInt</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (str.size() == <span class="number">0</span>) <span class="comment">//空字符串</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>; <span class="comment">//表示为正，因为我们判断溢出时:判断是否超过最大值的条件是flag == 1</span></span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'+'</span>) <span class="comment">//处理正负号</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">'-'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            flag = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (; i &lt; str.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i] &lt;= <span class="string">'9'</span> &amp;&amp; str[i] &gt;= <span class="string">'0'</span>) <span class="comment">//0~9合法字符</span></span><br><span class="line">            &#123;</span><br><span class="line">                res = res * <span class="number">10</span> + str[i] - <span class="string">'0'</span>;</span><br><span class="line">                <span class="keyword">if</span> (flag == <span class="number">1</span> &amp;&amp; res &gt; maxnum || flag == <span class="number">-1</span> &amp;&amp; res &gt; minnum) <span class="comment">//溢出</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> res * <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// string str = "+2147483647";</span></span><br><span class="line">    <span class="built_in">string</span> str = <span class="string">"134"</span>;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.StrToInt(str) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;将一个字符串转换成一个整数，要求不能使用字符串转换整数的库函数。        数值为0或者字符串不是一个合法的数值则返回0
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="字符串" scheme="http://chenchenxiaojian.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-不用加减乘除做加法</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95/</id>
    <published>2020-02-26T12:50:53.000Z</published>
    <updated>2020-02-26T13:08:22.385Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>无进位加减：异或</li><li>计算进位：与运算左移1位</li><li>两个结果相加，其实就是重复上面两步操作（如果直接用加号，就不符合题意了），当进位等于0的时候，就得到结果了。</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum;</span><br><span class="line">        <span class="keyword">int</span> carry;<span class="comment">//进位</span></span><br><span class="line">        <span class="keyword">while</span>(num2 &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sum = num1 ^ num2; <span class="comment">//不进位加,减</span></span><br><span class="line">            carry = (num1 &amp; num2)&lt;&lt;<span class="number">1</span>; <span class="comment">//进位的值</span></span><br><span class="line">            num1 = sum;</span><br><span class="line">            num2 = carry; <span class="comment">//当num2 == 0时，即是没有进位</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num1;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.Add(<span class="number">1</span>,<span class="number">-2</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。&lt;/p&gt;
&lt;h3 id=&quot;思路&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="位运算" scheme="http://chenchenxiaojian.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-求1+2+3+...+n</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E6%B1%821-2-3-n/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E6%B1%821-2-3-n/</id>
    <published>2020-02-26T07:36:24.000Z</published>
    <updated>2020-02-26T07:41:31.423Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li>逻辑运算的短路特性实现递归</li><li>sizeof()</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//bool arr[n][n+1]; //gcc的特性,公式</span></span><br><span class="line">        <span class="comment">//return sizeof(arr) &gt;&gt; 1;</span></span><br><span class="line">        <span class="comment">//&amp;&amp;的短路特性</span></span><br><span class="line">        <span class="keyword">int</span> res = n;</span><br><span class="line">        res &amp;&amp; (res += Sum_Solution(n<span class="number">-1</span>));</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="脑洞" scheme="http://chenchenxiaojian.github.io/tags/%E8%84%91%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-孩子们的游戏-圆圈中最后剩下的数</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%AD%A9%E5%AD%90%E4%BB%AC%E7%9A%84%E6%B8%B8%E6%88%8F-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%AD%A9%E5%AD%90%E4%BB%AC%E7%9A%84%E6%B8%B8%E6%88%8F-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0/</id>
    <published>2020-02-26T02:11:25.000Z</published>
    <updated>2020-02-26T03:44:47.228Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>   每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。HF作为牛客的资深元老,自然也准备了一些小游戏。其中,有个游戏是这样的:首先,让小朋友们围成一个大圈。然后,他随机指定一个数m,让编号为0的小朋友开始报数。每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,从他的下一个小朋友开始,继续0…m-1报数….这样下去….直到剩下最后一个小朋友,可以不用表演,并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。请你试着想下,哪个小朋友会得到这份礼品呢？(注：小朋友的编号是从0到n-1) </p><p>  如果没有小朋友，请返回-1 </p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul><li><p>约瑟夫环问题，或者丢手绢问题</p></li><li><p>假设f[n]为人数为n最后剩下编号，那么<strong>f[n] = (f[n-1] + m)%n</strong>；</p></li><li><p>至于公式的推导，详见以下两篇博客：</p><ul><li><a href="https://blog.csdn.net/wuzhekai1985/article/details/6628491" target="_blank" rel="noopener">博客1</a></li><li><a href="https://blog.csdn.net/yi_ming_he/article/details/72860011?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">博客2</a></li></ul></li><li><p>如果要求解每一轮出局的人，只能模拟这个过程了吧。</p></li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">LastRemaining_Solution</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>; <span class="comment">//当n = 1时</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n &lt; <span class="number">1</span> || m &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line">                res = (res + m)%i;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.LastRemaining_Solution(<span class="number">4</span>,<span class="number">3</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;   每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。HF作为牛客的资深元老,自然也准备了一些小游
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="递推" scheme="http://chenchenxiaojian.github.io/tags/%E9%80%92%E6%8E%A8/"/>
    
      <category term="数论" scheme="http://chenchenxiaojian.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="动态规划" scheme="http://chenchenxiaojian.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-扑克牌的顺子</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E6%89%91%E5%85%8B%E7%89%8C%E7%9A%84%E9%A1%BA%E5%AD%90/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E6%89%91%E5%85%8B%E7%89%8C%E7%9A%84%E9%A1%BA%E5%AD%90/</id>
    <published>2020-02-25T02:57:47.000Z</published>
    <updated>2020-02-25T02:59:21.306Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子…..LL不高兴了,他想了想,决定大\小  王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So  Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何，  如果牌能组成顺子就输出true，否则就输出false。为了方便起见,你可以认为大小王是0。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>排序，计算0的个数，判断0是否满足需求，判断是否出现对子</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">IsContinuous</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers.size()==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        sort(numbers.begin(), numbers.end());</span><br><span class="line">        <span class="keyword">int</span> zero_size = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; numbers.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] == <span class="number">0</span>)</span><br><span class="line">                zero_size++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; numbers.size()<span class="number">-1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (numbers[j] == numbers[j + <span class="number">1</span>]) <span class="comment">//出现对子</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">int</span> diff = numbers[j + <span class="number">1</span>] - numbers[j] - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (diff &gt; zero_size)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                zero_size -= diff;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; data = &#123;<span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; so.IsContinuous(data) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)…他随机从中抽出了5
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="模拟" scheme="http://chenchenxiaojian.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-翻转单词顺序列</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97/</id>
    <published>2020-02-25T02:03:16.000Z</published>
    <updated>2020-02-25T02:04:47.935Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一天他向Fish借来翻看，但却读不懂它的意思。例如，“student. a am I”。后来才意识到，这家伙原来把句子单词的顺序翻转了，正确的句子应该是“I am a student.”。Cat对一一的翻转这些单词顺序可不在行，你能帮助他么？</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>整体翻转，局部单个单词进行翻转,注意细节即可</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">ReverseSentence</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        </span><br><span class="line">        reverse_word(str, <span class="number">0</span>, str.size() - <span class="number">1</span>); <span class="comment">//整个序列翻转</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// str = str + ' '; //结尾加个空格，便于分割最后的单词...</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> begin = <span class="number">0</span>;<span class="comment">//翻转单词的起始位置</span></span><br><span class="line">        <span class="keyword">int</span> end = <span class="number">0</span>;<span class="comment">// 翻转单词的末位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//末尾特殊处理</span></span><br><span class="line">            <span class="keyword">if</span> (i == str.size()<span class="number">-1</span>) <span class="comment">//到达末尾</span></span><br><span class="line">            &#123;</span><br><span class="line">                reverse_word(str,begin, end);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">' '</span>) <span class="comment">//按照空格分割</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// cout &lt;&lt; begin &lt;&lt; " " &lt;&lt; end &lt;&lt;endl;</span></span><br><span class="line">                reverse_word(str, begin, end<span class="number">-1</span>);</span><br><span class="line">                begin = i + <span class="number">1</span>;</span><br><span class="line">                end = begin;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                end++;         </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverse_word</span><span class="params">(<span class="built_in">string</span> &amp;str, <span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span> <span class="comment">//翻转单词</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (begin &lt; end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> temp = str[begin];</span><br><span class="line">            str[begin] = str[end];</span><br><span class="line">            str[end] = temp;</span><br><span class="line">            begin++;</span><br><span class="line">            end--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str = <span class="string">"she am a student."</span>;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">string</span> res = so.ReverseSentence(str);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;牛客最近来了一个新员工Fish，每天早晨总是会拿着一本英文杂志，写些句子在本子上。同事Cat对Fish写的内容颇感兴趣，有一
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="字符串" scheme="http://chenchenxiaojian.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-左旋转字符串</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2020-02-24T07:14:36.000Z</published>
    <updated>2020-02-24T07:46:15.891Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，请你把其循环左移K位后的序列输出。例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？OK，搞定它！</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>找到规律，循环左移可以理解为循环队列啥的，这样就会想到模运算啦…然后就可以找到规律了。</p><p>需要注意string对象被初始化后才能赋值。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">LeftRotateString</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> res = str;<span class="comment">//res需要被初始化，之后才能进行res[]的赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> index = (i-n + str.size()) % str.size(); <span class="comment">//规律</span></span><br><span class="line">            res[index] = str[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str = <span class="string">"abcXYZdef"</span>;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">string</span> res = so.LeftRotateString(str, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="字符串" scheme="http://chenchenxiaojian.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-和为S的两个数字</title>
    <link href="http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%92%8C%E4%B8%BAS%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/"/>
    <id>http://chenchenxiaojian.github.io/%E5%89%91%E6%8C%87offer-%E5%92%8C%E4%B8%BAS%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/</id>
    <published>2020-02-24T06:48:40.000Z</published>
    <updated>2020-02-24T06:52:15.387Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。</p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对应每个测试案例，输出两个数，小的先输出。</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>采用双指针的做法，首尾指针（low,high），如果两个指针所指向的值加起来等于s，那么输出结果，如果小于s，那么low++,否则high–;</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; FindNumbersWithSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>,<span class="keyword">int</span> sum) &#123;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> high = <span class="built_in">array</span>.size()<span class="number">-1</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = <span class="built_in">array</span>[low] + <span class="built_in">array</span>[high];</span><br><span class="line">            <span class="keyword">if</span> (temp == sum)</span><br><span class="line">            &#123;</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[low]);</span><br><span class="line">                res.push_back(<span class="built_in">array</span>[high]);</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt; sum)</span><br><span class="line">                high--;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                low++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">15</span>&#125;;</span><br><span class="line">    Solution so;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res = so.FindNumbersWithSum(arr, <span class="number">15</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it = res.begin();it != res.end();it++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小
      
    
    </summary>
    
    
      <category term="OJ" scheme="http://chenchenxiaojian.github.io/categories/OJ/"/>
    
      <category term="剑指offer" scheme="http://chenchenxiaojian.github.io/categories/OJ/%E5%89%91%E6%8C%87offer/"/>
    
    
      <category term="数论" scheme="http://chenchenxiaojian.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
</feed>
